Title,Content
Mener la charge : le rôle des cadres dirigeants dans la culture DevOps et DevSecOps,"[{'', '<p>À mesure que la frontière numérique évolue, il devient de plus en plus impératif pour les cadres dirigeants de cultiver une solide culture DevOps et DevSecOps. Ces méthodologies vont au-delà de la simple accélération des versions de logiciels, en se concentrant plutôt sur l’optimisation de l’ensemble de la chaîne de valeur, de la conception au déploiement. L’intégration de la sécurité dans ce cadre est essentielle, l’intégrant comme un élément essentiel du développement. Pour prospérer dans cet environnement, les cadres dirigeants doivent non seulement prôner des transformations culturelles et procédurales, mais aussi montrer l’exemple.</p>'}, {'', '<p>L’un des principaux défis de la mise en œuvre de DevOps et DevSecOps est la multitude d’outils disponibles. Chaque client peut avoir ses propres outils préférés, ce qui rend essentiel pour les fournisseurs de services de se tenir au courant des dernières technologies. Cependant, la technologie à elle seule n’est pas la solution. Une mise en œuvre réussie de DevOps implique de rationaliser les processus et de s’assurer que l’utilisation de la technologie est conforme aux objectifs de l’entreprise. La direction doit mener ces initiatives en approuvant les bons outils, en investissant dans des programmes de formation et en promouvant une culture qui valorise les processus rationalisés plutôt que l’adoption technologique.</p>'}, {'', '<h3>Trouver les bons outils — Un défi</h3>'}, {'', ""<p>Différentes équipes au sein d'une organisation peuvent privilégier différents outils d'intégration continue/déploiement continu (CI/CD). Harmoniser ces préférences et garantir la compatibilité peut être un défi de taille. La complexité augmente lorsque l'on considère les différents ensembles de compétences au sein d'une équipe, ce qui nécessite un programme de formation complet pour mettre tout le monde à niveau. Dans ce cas, le soutien de la direction est essentiel pour allouer les ressources nécessaires et favoriser l'adoption d'outils et de pratiques standardisés.</p>""}, {'', '<p>Selon le rapport The State of CI/CD, environ 83 % des développeurs sont aujourd’hui impliqués dans des activités liées à DevOps, ce qui reflète des taux d’adoption élevés au sein des entreprises. Cependant, les développeurs moins expérimentés affichent des taux d’adoption plus faibles, un quart d’entre eux ayant moins de deux ans d’expérience et n’étant impliqués dans aucune activité liée à DevOps. Cela souligne la nécessité d’une meilleure éducation et formation pour les nouveaux développeurs. L’engagement de la haute direction en faveur de l’apprentissage continu est essentiel pour combler cette lacune.</p>'}, {'', '<h3>Déplacement vers la gauche : intégrer la sécurité dès le début</h3>'}, {'', ""<p>Les avis des professionnels sur la manière dont DevSecOps doit évoluer vont de l'implication totale des développeurs à la création d'équipes dédiées à la sécurité. Cependant, l'intégration de la sécurité dès le début de la phase de développement est essentielle.</p>""}, {'', ""<p>En adoptant une approche shift-left, les entreprises peuvent identifier et atténuer les problèmes de sécurité potentiels pendant la phase de développement plutôt qu'après le déploiement. Cette attitude proactive permet de réduire les vulnérabilités et d'améliorer la posture de sécurité globale du logiciel.</p>""}, {'', '<p>L’intégration de l’assurance qualité (AQ) plus tôt dans le processus, en la transformant en ingénierie de la qualité, peut également accélérer la chaîne de valeur. Cette intégration garantit que la sécurité et la qualité ne sont pas de simples cases à cocher finales, mais des composants essentiels de la conception et de l’architecture.</p>'}, {'', '<p>Un exemple des avantages d’une transition vers la gauche et de l’intégration de la qualité dès le début du processus est celui d’une grande banque américaine qui avait besoin d’améliorer ses pratiques de test système pour favoriser la livraison agile de logiciels. En adoptant une approche d’ingénierie de la qualité, qui comprend l’acceptation du développement piloté par les tests, des environnements de test automatisés et une gestion robuste des données de test, la banque a obtenu des résultats remarquables.</p>'}, {'', ""<p>La mise en œuvre a permis d'améliorer de 45 % le temps de cycle des équipes agiles grâce aux tests automatisés en cours de sprint et de réduire le besoin de sprints de renforcement. L'approche a également amélioré la vitesse de résolution des défauts de neuf fois, grâce à une meilleure traçabilité automatisée du code, et a par conséquent réduit l'effort d'assurance qualité dédié de 80 %.</p>""}, {'', '<p>Les dirigeants jouent un rôle essentiel dans ces approches en formulant une vision claire de l’intégration de la sécurité et en garantissant une allocation adéquate des ressources. Il convient également de briser les cloisonnements pour encourager la collaboration interfonctionnelle et d’établir des indicateurs de performance clés pour surveiller l’efficacité de la stratégie de déplacement vers la gauche. Ils doivent promouvoir l’adoption d’outils d’IA tels que les frameworks GitHub Copilot et CodeWhisperer, qui peuvent aider les développeurs à intégrer la sécurité dès le départ.</p>'}, {'', '<h3>Comprendre DevOps et DevSecOps comme une solution de processus</h3>'}, {'', '<p>Les prestataires de services jouent un double rôle en aidant les clients à mettre en place et à optimiser leurs chaînes de valeur DevOps et en développant des applications. Cela garantit que les meilleures pratiques sont intégrées dans les environnements des prestataires de services et des clients. Il est essentiel de comprendre DevOps comme une solution de processus, plutôt que comme une simple solution technologique.</p>'}, {'', '<p>Si vous demandez aux cadres supérieurs d’une entreprise de choisir entre l’importance de DevOps ou de DevSecOps, vous obtiendrez un regard vide. Cependant, si vous leur demandez s’ils sont satisfaits de la vitesse à laquelle une idée commerciale se traduit en réalité, vous obtiendrez une réponse passionnée. Vous constaterez le même type d’enthousiasme et d’intérêt si vous évoquez la sécurité. Par conséquent, DevOps et DevSecOps sont les moyens d’atteindre une vitesse de réponse plus élevée sans compromettre la sécurité et d’aider la haute direction à prendre conscience de l’importance de cultiver ces disciplines.</p>'}, {'<h3>Participation des parties prenantes</h3>', ''}, {'', ""<p>Une mise en œuvre réussie de DevOps et DevSecOps nécessite l'implication de toutes les parties prenantes, des chefs d'entreprise aux équipes de déploiement. Cet engagement global garantit que DevOps constitue une stratégie commerciale globale.</p>""}, {'', '<p>Les dirigeants doivent favoriser la collaboration entre les fonctions informatiques et commerciales pour combler les écarts et améliorer les performances.</p>'}, {'', '<p>L’engagement des parties prenantes est essentiel pour hiérarchiser les efforts de développement et les aligner sur les objectifs de l’entreprise. Une communication et des boucles de rétroaction régulières entre les développeurs, les équipes de sécurité et les dirigeants de l’entreprise permettent d’identifier les goulots d’étranglement et les domaines à améliorer. Le rôle de la direction dans la facilitation de ces interactions et la garantie d’une harmonisation à tous les niveaux est également crucial.</p>'}, {'', '<p>L’exemple de la transformation DevOps menée par la direction de l’entreprise américaine Target, dirigée par Mike McNamara, est un parfait exemple de réussite. En supprimant les cloisonnements, en investissant dans la formation et en adoptant l’automatisation, Target a amélioré la vitesse de livraison de ses logiciels et l’expérience client. La direction a joué un rôle essentiel dans la responsabilisation des équipes et la promotion de la collaboration entre le développement et les opérations, montrant ainsi comment la vision et l’engagement peuvent favoriser l’adoption réussie de DevOps.</p>'}, {'', '<h3>La sécurité au premier plan</h3>'}, {'', ""<p>La sécurité est devenue une priorité absolue, les failles de sécurité attirant l'attention au plus haut niveau des organisations. À mesure que les applications s'ouvrent à davantage d'utilisateurs externes, les préoccupations en matière de sécurité augmentent. La complexité du paysage DevSecOps peut être écrasante pour les organisations. Cependant, se concentrer sur le processus global, plutôt que simplement sur la sélection des outils, peut simplifier la transition.</p>""}, {'', '<p>L’intégration de la sécurité dans le processus de développement nécessite un changement de mentalité. Des formations régulières sur la sécurité pour les développeurs, des évaluations continues des menaces et l’adoption de bonnes pratiques peuvent contribuer à créer une culture de sécurité solide. La direction doit mener ces initiatives, en veillant à ce que la sécurité soit une valeur organisationnelle fondamentale.</p>'}, {'', ""<h3>L'avenir de DevOps et DevSecOps</h3>""}, {'', '<p>À l’avenir, nous pouvons nous attendre à voir apparaître des outils d’automatisation plus intelligents, capables de prédire les vulnérabilités potentielles en matière de sécurité et de suggérer des mesures correctives. Ces outils amélioreront l’efficacité et renforceront la qualité et la sécurité globales des produits logiciels. La direction doit adopter ces technologies de manière proactive, en veillant à ce que les équipes soient équipées des outils les plus récents pour conserver un avantage concurrentiel.</p>'}, {'', '<p>Les organisations qui adoptent une approche holistique des principes DevOps et DevSecOps sont mieux placées pour relever les défis et saisir les opportunités de l’ère numérique. Le parcours peut être complexe, mais avec les bonnes stratégies et l’engagement des dirigeants, les avantages sont à portée de main.</p>'}]"
Ne vous laissez pas piéger par la boucle DevOps,"[{'', '<p>Le mouvement DevOps a changé la façon dont les logiciels sont créés et publiés en injectant l’automatisation et les meilleures pratiques dans les veines du cycle de vie du développement logiciel (SDLC) d’une manière qui a considérablement réduit le temps et les efforts nécessaires à la création et au déploiement des logiciels.</p>'}, {'', '<p>En fait, deux tiers (66 %) des personnes interrogées dans le cadre d’une enquête récente d’Atlassian estiment que DevOps les aide à produire des logiciels de meilleure qualité.</p>'}, {'', '<p>Cependant, la manière exacte dont les meilleures pratiques DevOps sont mises en œuvre varie encore considérablement d’une organisation à l’autre. En théorie, il existe un flux logique, appelé la boucle DevOps, qui couvre tout, des étapes de planification jusqu’à la mise en production. Dans la pratique, la boucle DevOps est rarement suivie de manière précise, a déclaré Mitch Ashley, conseiller en chef en technologie pour le groupe Futurum, lors d’une conférence Ignite tenue lors d’un AppDev Field Day organisé par Tech Field Day, une branche de Futurum.</p>'}, {'', ""<p>« Le problème est que nous avons suivi les mêmes étapes que celles du modèle en cascade et que nous les avons disposées en boucle », explique Ashley. « La boucle DevOps ne permet pas de créer un logiciel. C'est une fausse nouvelle. »</p>""}, {'', ""<p>Au lieu de cela, DevOps définit une méthodologie de collaboration et de travail en équipe basée sur un ensemble d'outils et de pratiques qui relient deux départements de développement de logiciels et d'opérations informatiques depuis longtemps séparés. Le défi est que la boucle DevOps ne traite aucune des frictions réelles impliquées dans le déplacement des artefacts logiciels dans un pipeline, explique Ashley.</p>""}, {'', '<p>« DevOps consiste à étudier la manière dont nous créons des logiciels et à réfléchir à la manière d’automatiser davantage d’étapes, mais surtout à la manière dont nous appliquons l’idée de créer des unités de travail plus petites et d’en livrer des parties afin que les gens puissent travailler de manière indépendante au lieu que tout arrive en même temps, ce qui provoque un gros ensemble de problèmes au lieu de travailler », explique Ashley. « Cela ressemble plus à un multivers qu’à une boucle. »</p>'}, {'', '<h3>Méthodologie Sprint</h3>'}, {'', ""<p>La méthodologie de sprint au cœur de tout flux de travail DevOps résout ce problème en décomposant les projets en unités courtes et répétables qui peuvent être terminées en sprints ou itérations courts, d'une durée généralement de deux à quatre semaines.</p>""}, {'', ""<p>Au début du projet, les équipes déterminent le nombre de sprints nécessaires pour le mener à bien. Des tâches de la taille d'une bouchée sont ensuite attribuées aux membres de l'équipe, chacun étant responsable d'un livrable distinct.</p>""}, {'', '<p>Cette approche permet aux membres de travailler séparément à des rythmes différents en mettant en œuvre la boucle DevOps dans chacun de leurs flux de travail. Les développeurs peuvent intégrer les commentaires et réagir aux changements plus rapidement. De plus, un meilleur support peut être fourni en guidant les utilisateurs tout au long de leur parcours et en supprimant toutes les activités de fin de vie à temps.</p>'}, {'', '<p>« En pratique, DevOps est un développement distribué, qu’il soit réparti géographiquement ou que le travail soit réparti entre les personnes. Chacun travaille sur son propre volet à des rythmes différents. Il s’agit d’un processus d’intégration continue qui fonctionne en permanence. »</p>'}, {'', '<p>L’un des avantages de cette approche est que l’interaction individuelle prime sur les outils et les processus. Les projets de longue haleine étant divisés en segments plus petits et répartis entre les équipes, les professionnels aux compétences variées travaillant dans des fuseaux horaires différents peuvent collaborer et travailler de manière cohérente pour construire quelque chose de plus grand.</p>'}, {'', '<p>« Finalement, tous ces éléments sont combinés pour être mis en production, puis déployés dans des environnements de test et de développement. »</p>'}, {'', ""<p>Le concept DevOps vise à fournir une base sur laquelle les différents acteurs informatiques peuvent travailler individuellement, mais en collaboration, quels que soient les outils qu'ils utilisent ou le travail qu'ils effectuent, tout en maintenant l'alignement et la rapidité. C'est ainsi que les chefs de projet, les développeurs, les parties prenantes et les clients peuvent tous faire partie de la boucle.</p>""}, {'', '<p>« En réalité, nous permettons aux gens de travailler en même temps et de travailler à leur propre rythme avec leurs propres compétences », explique Ashley. « Le timing de la sortie est une question de cohérence. »</p>'}]"
DevSecOps : Intégration de la sécurité dans le cycle de vie DevOps,"[{'', ""<p>Tout comme un livre captivant transformé en film se déroule scène par scène, DevSecOps intègre la sécurité dans le processus DevOps, en dressant un tableau vivant de la protection à chaque étape. Intégrer la sécurité dans le flux DevOps ne consiste pas seulement à cocher des cases ; il s'agit d'intégrer la protection dans la structure de la création de logiciels, du début à la fin.</p>""}, {'', '<p>DevSecOps intègre la sécurité dans le flux de travail DevOps. Il intervient pour remédier aux failles de sécurité sur lesquelles le DevOps traditionnel trébuche souvent, en intégrant des mesures de protection du début à la fin. DevSecOps ne se contente pas de cocher des cases ; il s’agit d’intégrer la sécurité dans la création de logiciels du début à la fin, ce qui non seulement renforce la protection, mais accélère également les choses et nous permet de rester du bon côté des réglementations. Les consultants DevOps jouent un rôle clé dans ce processus, en fournissant une expertise et des conseils pour garantir que les mesures de sécurité s’alignent parfaitement sur la stratégie DevOps globale, favorisant ainsi un environnement de développement harmonieux et sécurisé.</p>'}, {'', '<h3>Comprendre DevSecOps</h3>'}, {'', ""<p>DevSecOps est une approche stratégique qui intègre la sécurité dans le pipeline DevOps plutôt que de la traiter comme une réflexion ultérieure ou un processus séparé. Passer à DevSecOps signifie que nous intégrons la sécurité directement dans le mix de développement, de sorte qu'il ne s'agit pas d'une simple vérification de dernière minute, mais d'une partie intégrante de chaque étape du déploiement de nouveaux éléments. Le principal avantage de DevSecOps est la création d'un produit final plus sécurisé, car la sécurité est une préoccupation constante tout au long du processus de développement, plutôt qu'un obstacle final à franchir.</p>""}, {'', '<h3>Principes clés de DevSecOps</h3>'}, {'', '<p>Le cœur de DevSecOps est la « sécurité en tant que code », un principe qui impose d’intégrer la sécurité dans le processus de développement logiciel. Pour que chaque version soit rigoureusement sécurisée, nous intégrons ces pratiques au cœur de notre flux CI/CD. L’automatisation est ici essentielle, car elle simplifie l’ensemble du processus de sécurité dans notre processus de développement, garantissant que nous sommes en sécurité dès le départ sans nous ralentir.</p>'}, {'', '<p>Le modèle de responsabilité partagée est un autre pilier de DevSecOps. La sécurité n’est plus le domaine exclusif d’une équipe de sécurité distincte, mais une préoccupation partagée par toutes les équipes impliquées dans le cycle de développement. En travaillant ensemble, la sécurité n’est pas simplement appliquée à la fin, mais intégrée à chaque étape du début à la fin.</p>'}, {'', '<h3>Mise en œuvre de DevSecOps dans le cycle de vie du développement</h3>'}, {'', ""<p>L'intégration de la sécurité à chaque phase du cycle de vie DevOps nécessite des outils et des pratiques spécifiques :</p>""}, {'', '<li>Planification et codage : les exigences de sécurité sont identifiées en amont et des pratiques de codage sécurisées sont adoptées. Des outils tels que les tests de sécurité statique des applications (SAST) peuvent être utilisés pour analyser le code source à la recherche de vulnérabilités de sécurité.</li>'}, {'', ""<li>Création et test : des outils de test de sécurité automatisés tels que les tests de sécurité dynamique des applications (DAST) sont intégrés au processus de création pour détecter les vulnérabilités d'exécution.</li>""}, {'', ""<li>Publication et déploiement\xa0: des contrôles de sécurité sont intégrés à l'étape de prépublication pour garantir la sécurité de l'environnement de déploiement. Des contrôles de conformité automatisés peuvent également être intégrés ici.</li>""}, {'', ""<li>Exploitation et surveillance : des outils de surveillance continue sont utilisés pour détecter et répondre aux menaces de sécurité en temps réel, garantissant ainsi une protection continue de l'application déployée.</li>""}, {'', ""<h3>Surmonter les défis liés à l'adoption de DevSecOps</h3>""}, {'', '<p>Adopter DevSecOps n’est pas sans poser quelques défis. Passer à DevSecOps signifie que nous devons abattre les murs qui ont longtemps séparé nos développeurs, nos opérateurs et nos équipes de sécurité. Il peut être difficile de trouver un équilibre entre la nécessité d’un déploiement rapide et les considérations de sécurité. Pour réussir DevSecOps, les équipes doivent améliorer leurs compétences grâce à des formations ciblées. Associer des systèmes éprouvés à des tactiques DevSecOps de pointe nécessite une approche stratégique pointue.</p>'}, {'', '<h3>Tendances futures en matière de DevSecOps</h3>'}, {'', '<p>À mesure que DevSecOps gagne en maturité, plusieurs tendances clés émergent qui devraient façonner son avenir :</p>'}, {'', '<li>IA et Machine Learning (ML) dans la sécurité automatisée : l’intégration de l’IA et du Machine Learning dans DevSecOps devient de plus en plus répandue. Les systèmes de sécurité automatisés peuvent désormais détecter et arrêter les menaces plus rapidement. Tirant parti des leçons des erreurs de sécurité précédentes, les systèmes d’IA évoluent pour se protéger de manière proactive contre les menaces émergentes avec une précision accrue.</li>'}, {'', '<li>Accent accru sur la conformité et la gouvernance : avec des réglementations de protection des données et des normes industrielles plus strictes, la conformité et la gouvernance occupent une place centrale dans DevSecOps. Des contrôles de conformité automatisés et des outils de gouvernance sont intégrés au pipeline CI/CD pour garantir que le logiciel répond aux exigences réglementaires à chaque étape du développement.</li>'}, {'', ""<li>Tout comme un film doit rester fidèle au livre dont il est tiré, la sécurité cloud-native doit adhérer étroitement aux principes DevSecOps pour vraiment fonctionner. Alors que le cloud computing continue de dominer, les pratiques de sécurité cloud-native deviennent partie intégrante de DevSecOps. L'adaptation des mesures de sécurité à la configuration cloud en constante évolution et évolutive est essentielle pour maintenir la cohérence dans un monde axé sur le cloud.</li>""}, {'', '<h3>Conclusion</h3>'}, {'', ""<p>DevSecOps facilite le développement de logiciels plus sûrs et plus efficaces. L'adoption de DevSecOps renforce la sécurité tout en améliorant l'efficacité et la fiabilité du développement logiciel. Adopter DevSecOps, c'est comme se préparer pour un marathon : il s'agit de rester agile, de s'adapter aux nouvelles technologies à la volée et de suivre le rythme d'un environnement commercial en constante évolution.</p>""}, {'', '<p>À l’avenir, DevSecOps continuera de façonner la manière dont nous créons des logiciels, restant crucial dans notre monde axé sur la technologie. En intégrant la sécurité directement dans le flux de travail de développement, DevSecOps garantit que nos logiciels sont non seulement robustes et rapides, mais également sécurisés et conformes, tout cela grâce à l’utilisation intelligente de l’IA. À l’ère numérique effrénée dans laquelle nous vivons, l’adoption de DevSecOps est essentielle pour créer une technologie robuste qui résiste à l’épreuve du temps.</p>'}]"
Se concentrer sur les fondamentaux ou sur l'innovation ? La réussite de DevOps nécessite les deux,"[{'', '<p>Les équipes DevOps sont confrontées à un fossé entre les traditionalistes et les innovateurs, un fossé qui s’accentue à mesure que la pression monte pour que les équipes tirent parti des dernières avancées. Les traditionalistes se battent pour préserver les fondamentaux, pour conserver une certaine appréciation des débuts de DevOps et pour ne pas faire de concessions (il suffit de prendre l’exemple de CrowdStrike). De l’autre côté, les innovateurs sont prêts à saisir leurs moments de gloire avec les dernières avancées.</p>'}, {'', '<p>Pour que la fonction DevOps soit performante, vous devez accorder la même importance aux deux. La fusée DevOps sera toujours lancée, mais le succès de son voyage dépend en grande partie du travail effectué avant le début du compte à rebours. Comment les équipes peuvent-elles adopter l’état d’esprit de la NASA ? Plongeons-nous dans le vif du sujet…</p>'}, {'', '<h3>Retour aux fondamentaux : des builds fiables et reproductibles</h3>'}, {'', '<ol>Processus sous contrôle : pour garantir que la fusée décolle correctement à chaque fois, la « norme » doit être aussi standard que possible. Les processus perdent généralement leur standardisation lors de l’assemblage et du déploiement de la build. Souvent, il existe différentes techniques et différents environnements par rapport à la création d’un chemin de promotion unique qui construit chaque environnement – \u200b\u200bquel que soit son objectif – de la même manière. Chaque build vers un environnement inférieur est essentiellement une « répétition » de sorte qu’au moment où vous arrivez à la production, vous avez probablement construit au moins deux choses différentes dans les mêmes scripts avec la même approche. Dans DevOps, la routine est primordiale, mais vous devez tout traiter comme un moment potentiel de CrowdStrike.</ol>'}, {'', '<li>Processus sous contrôle : pour garantir que la fusée décolle correctement à chaque fois, la « norme » doit être aussi standard que possible. Les processus perdent généralement leur standardisation lors de l’assemblage et du déploiement de la build. Souvent, il existe différentes techniques et différents environnements par rapport à la création d’un chemin de promotion unique qui construit chaque environnement – \u200b\u200bquel que soit son objectif – de la même manière. Chaque build vers un environnement inférieur est essentiellement une « répétition » de sorte qu’au moment où vous arrivez à la production, vous avez probablement construit au moins deux choses différentes dans les mêmes scripts avec la même approche. Dans DevOps, la routine est primordiale, mais vous devez tout traiter comme un moment potentiel de CrowdStrike.</li>'}, {''}, {'', ""<ol>Capture de bout en bout : les responsables de la construction adoptent de nouvelles approches en cours de route qui ne vivent souvent que dans leur esprit. Malheureusement, ces stratégies ne sont pas toujours adaptées à la façon dont ces environnements évoluent au fil du temps, car ils sont continuellement actualisés en termes de code et de matériel. Même si cela peut sembler fastidieux, les équipes DevOps doivent avoir une image de bout en bout réaliste et vérifiée des environnements. Cela peut prendre la forme de récits, d'éléments visuels, de vidéos enregistrées, etc. Mais l'objectif ici est de capturer. Selon le rapport 2023 State of DevOps, la qualité de la documentation est le moteur de la mise en œuvre réussie de chaque capacité technique étudiée, de l'intégration continue au développement basé sur le tronc en passant par les pratiques de fiabilité.</ol>""}, {'', ""<li>Capture de bout en bout : les responsables de la construction adoptent de nouvelles approches en cours de route qui ne vivent souvent que dans leur esprit. Malheureusement, ces stratégies ne sont pas toujours adaptées à la façon dont ces environnements évoluent au fil du temps, car ils sont continuellement actualisés en termes de code et de matériel. Même si cela peut sembler fastidieux, les équipes DevOps doivent avoir une image de bout en bout réaliste et vérifiée des environnements. Cela peut prendre la forme de récits, d'éléments visuels, de vidéos enregistrées, etc. Mais l'objectif ici est de capturer. Selon le rapport 2023 State of DevOps, la qualité de la documentation est le moteur de la mise en œuvre réussie de chaque capacité technique étudiée, de l'intégration continue au développement basé sur le tronc en passant par les pratiques de fiabilité.</li>""}, {''}, {'', '<ol>Réduction des étapes manuelles : Dans la mesure du possible, l’intervention humaine ne doit être utilisée que pour les points de décision, et non pour terminer ou corriger une tâche « fastidieuse ». Ce concept est parfois mal compris. Dans le cadre de l’intégration continue/livraison continue, l’expression « intégration continue » signifie idéalement qu’en appuyant sur un bouton, vous pouvez promouvoir du code et qu’il peut passer par tous les environnements du chemin de promotion et atterrir en production. Si vous le deviez, vous pourriez cliquer sur un bouton pour que le changement apparaisse en production à la vitesse du cycle de vos processus automatiques. Le « déploiement continu », en revanche, est une décision humaine de faire exactement cela. Il est relativement rare qu’un processus de build soit si routinier, à faible risque ou si urgent que vous choisissiez d’éliminer l’intervention humaine. En général, la meilleure pratique consiste à disposer de builds hautement automatisés avec des notifications et des alertes automatisées pour savoir quand les humains doivent intervenir.</ol>'}, {'', '<li>Réduction des étapes manuelles : Dans la mesure du possible, l’intervention humaine ne doit être utilisée que pour les points de décision, et non pour terminer ou corriger une tâche « fastidieuse ». Ce concept est parfois mal compris. Dans le cadre de l’intégration continue/livraison continue, l’expression « intégration continue » signifie idéalement qu’en appuyant sur un bouton, vous pouvez promouvoir du code et qu’il peut passer par tous les environnements du chemin de promotion et atterrir en production. Si vous le deviez, vous pourriez cliquer sur un bouton pour que le changement apparaisse en production à la vitesse du cycle de vos processus automatiques. Le « déploiement continu », en revanche, est une décision humaine de faire exactement cela. Il est relativement rare qu’un processus de build soit si routinier, à faible risque ou si urgent que vous choisissiez d’éliminer l’intervention humaine. En général, la meilleure pratique consiste à disposer de builds hautement automatisés avec des notifications et des alertes automatisées pour savoir quand les humains doivent intervenir.</li>'}, {'', '<h3>Innovation : un regard sur les opportunités</h3>'}, {'', ""<ol>Infrastructure as Code : l'un des défis des builds est la nécessité de résoudre plusieurs problèmes en même temps, comme une promotion de fonctionnalité par l'équipe de développement ; des défauts qui pourraient devoir être corrigés en fonction de l'expérience en production ou dans des environnements inférieurs ; des correctifs et des actualisations sur les systèmes sous-jacents. La possibilité de collision ou d'omission est relativement élevée dans un environnement dynamique. L'infrastructure as code (IaC) résout cet obstacle frustrant à la réussite de la première build en construisant la pile entière à partir de zéro à chaque fois. L'IaC présuppose que vous disposez de conteneurs et que vous pouvez créer et déployer des éléments virtuellement, mais il s'agit d'une innovation incroyablement puissante dans DevOps en raison de sa capacité à garantir des builds propres et complètes dès la première fois, à chaque fois.</ol>""}, {'', ""<li>Infrastructure as Code : l'un des défis des builds est la nécessité de résoudre plusieurs problèmes en même temps, comme une promotion de fonctionnalité par l'équipe de développement ; des défauts qui pourraient devoir être corrigés en fonction de l'expérience en production ou dans des environnements inférieurs ; des correctifs et des actualisations sur les systèmes sous-jacents. La possibilité de collision ou d'omission est relativement élevée dans un environnement dynamique. L'infrastructure as code (IaC) résout cet obstacle frustrant à la réussite de la première build en construisant la pile entière à partir de zéro à chaque fois. L'IaC présuppose que vous disposez de conteneurs et que vous pouvez créer et déployer des éléments virtuellement, mais il s'agit d'une innovation incroyablement puissante dans DevOps en raison de sa capacité à garantir des builds propres et complètes dès la première fois, à chaque fois.</li>""}, {''}, {'', '<ol>Créer des builds adaptatifs via MLOps : une partie importante de chaque build consiste à déterminer le « package » de validation et de vérification qui accompagnera le code source déployé. Il est impératif de pouvoir identifier les risques, les ralentissements et les points de défaillance. Mais en l’absence de moyens d’évaluer ces éléments en fonction de chaque version, la décision par défaut est d’inclure l’intégralité de la vérification dans chaque version, ce qui allonge le cycle de build et de publication. Un bon point de départ est d’appliquer le ML/AI pour créer des builds adaptatifs capables d’automatiser les vérifications et de garantir que les critères sont respectés et qu’ils sont sécurisés et performants. L’alimentation de cette infrastructure d’optimisation de build avec le pipeline de données en cours garantit qu’elle reste pertinente et optimisée en temps réel. Bien qu’une grande partie de ces tâches puisse être effectuée manuellement par des humains qualifiés, ce sont des tâches pour lesquelles le ML/AI est un choix naturel.</ol>'}, {'', '<li>Créer des builds adaptatifs via MLOps : une partie importante de chaque build consiste à déterminer le « package » de validation et de vérification qui accompagnera le code source déployé. Il est impératif de pouvoir identifier les risques, les ralentissements et les points de défaillance. Mais en l’absence de moyens d’évaluer ces éléments en fonction de chaque version, la décision par défaut est d’inclure l’intégralité de la vérification dans chaque version, ce qui allonge le cycle de build et de publication. Un bon point de départ est d’appliquer le ML/AI pour créer des builds adaptatifs capables d’automatiser les vérifications et de garantir que les critères sont respectés et qu’ils sont sécurisés et performants. L’alimentation de cette infrastructure d’optimisation de build avec le pipeline de données en cours garantit qu’elle reste pertinente et optimisée en temps réel. Bien qu’une grande partie de ces tâches puisse être effectuée manuellement par des humains qualifiés, ce sont des tâches pour lesquelles le ML/AI est un choix naturel.</li>'}, {''}, {'', '<ol>Intégrer l’ingénierie de fiabilité du site (SRE) : l’ingénierie de fiabilité du site (SRE) représente la prochaine étape de DevOps, car elle brise les silos et crée une continuité entre ceux qui créent le code et ceux qui interagissent directement avec les clients. Une façon d’intégrer l’ingénierie de fiabilité du site (SRE) dans DevOps est de créer une liste de rotation dans laquelle chaque développeur effectue périodiquement une « tournée de service » au sein du service d’assistance, par exemple six semaines et au deuxième niveau de support. Une « tournée de service » réciproque consistant à placer le personnel du service d’assistance dans les équipes de développement en tant qu’analystes commerciaux ou développeurs (selon leur formation technique) est tout aussi bénéfique. La collaboration et les connaissances générées par un modèle SRE ont le potentiel de transformer l’expérience de l’utilisateur final.</ol>'}, {'', '<li>Intégrer l’ingénierie de fiabilité du site (SRE) : l’ingénierie de fiabilité du site (SRE) représente la prochaine étape de DevOps, car elle brise les silos et crée une continuité entre ceux qui créent le code et ceux qui interagissent directement avec les clients. Une façon d’intégrer l’ingénierie de fiabilité du site (SRE) dans DevOps est de créer une liste de rotation dans laquelle chaque développeur effectue périodiquement une « tournée de service » au sein du service d’assistance, par exemple six semaines et au deuxième niveau de support. Une « tournée de service » réciproque consistant à placer le personnel du service d’assistance dans les équipes de développement en tant qu’analystes commerciaux ou développeurs (selon leur formation technique) est tout aussi bénéfique. La collaboration et les connaissances générées par un modèle SRE ont le potentiel de transformer l’expérience de l’utilisateur final.</li>'}, {'', '<h3>Conclusion</h3>'}, {'', '<p>La « tension opérationnelle » entre les traditionalistes et les innovateurs de DevOps pourrait s’accroître à l’heure actuelle ; après tout, le secret de DevOps a été de faire de ce qui est difficile une routine.</p>'}, {'', '<p>Mais la bonne nouvelle est que les équipes ont besoin des deux. Il s’agit simplement de trouver des moyens de réunir ces mentalités, d’expliquer l’impact que ces deux éléments ont sur une fonction DevOps réussie et d’identifier des moyens de dynamiser les efforts DevOps en accordant une crédibilité égale aux deux.</p>'}]"
Débloquer un meilleur DevEx : quatre domaines à améliorer et indicateurs clés de performance,"[{'', ""<p>Dans le monde en constante évolution du développement logiciel, le concept d'expérience du développeur (DevEx) est désormais presque courant. DevEx, comme la plupart des développeurs le savent aujourd'hui, fait référence à l'expérience globale dont bénéficient les développeurs lorsqu'ils travaillent sur un projet, y compris les outils, les processus et l'environnement.</p>""}, {'', '<p>Par conséquent, un DevEx bien conçu peut favoriser une équipe de développement heureuse, productive et efficace. Cependant, évaluer le DevEx actuel pour l’améliorer n’est pas aussi simple qu’on pourrait le penser. Forcer un développeur principal et son équipe à documenter la façon dont ils passent chaque instant de la journée pour éclairer ces évaluations sur le DevEx ne peut qu’avoir l’effet inverse.</p>'}, {'', '<p>Après tout, classer et compter les tickets Jira ne va pas améliorer l’expérience des développeurs. Au contraire, des éléments tels que les tickets Jira peuvent être utilisés comme une évaluation de la productivité héritée, mais pas comme une évaluation de l’expérience. Mais en vérité, ni les tickets Jira ni même le nombre total de produits développés par un ingénieur ne vous donneront une véritable évaluation de la productivité si vous souhaitez examiner la qualité en plus de la quantité.</p>'}, {'', '<p>Par conséquent, DevEx peut également être un meilleur moyen d’examiner la productivité, en identifiant plus précisément la façon dont les développeurs ressentent, pensent et valorisent leur travail. La découverte de ces éléments peut conduire à une exécution plus rapide des projets, à une amélioration de la qualité du code et à une réduction du taux de rotation du personnel. Les entreprises qui accordent la priorité à DevEx, comme Google et Netflix, ont constaté des améliorations remarquables de la productivité, ce qui témoigne de son importance.</p>'}, {'', '<p>Pour imiter Google et Netflix avec votre stratégie DevEx, vous devez identifier les domaines sur lesquels vous devez concentrer vos efforts d’amélioration. Je suggère de vous concentrer sur l’accessibilité, la découvrabilité, la facilité d’utilisation et la crédibilité. En examinant ces quatre domaines, nous pouvons déterminer si les développeurs sont gênés par des outils encombrants ou des processus complexes et comment nous pouvons travailler ensemble de manière plus efficace et plus agréable.</p>'}, {'', '<p>Cependant, l’optimisation du DevEx s’accompagne de nombreux défis. En raison de l’évolution rapide des plateformes et des attentes des utilisateurs, les développeurs sont confrontés à de nombreux obstacles qui peuvent entraver les expériences quotidiennes. Un autre défi est le manque de directives standardisées au sein de nombreuses entreprises et dans l’ensemble du secteur. Avec l’émergence de nouvelles technologies comme l’IA chaque jour, et même l’évolution constante des solutions existantes, il peut être difficile pour les développeurs de se tenir au courant des meilleures pratiques. Concentrons-nous sur nos domaines d’intérêt ci-dessus, pour débloquer et optimiser un meilleur DevEx.</p>'}, {'', '<h3>Pour améliorer votre DevEx, concentrez-vous sur ces domaines principaux</h3>'}, {'', '<p>Améliorer l’accessibilité : il ne s’agit pas seulement de disposer d’outils de développement qui fonctionnent, il est également important de veiller à ce que tout le monde y ait accès et qu’il soit facile d’entrer et de sortir de chaque outil. Parfois, accéder à un outil de développement peut prendre énormément de temps. Cela peut être dû à une mauvaise configuration ou à une personne qui l’a configuré en pensant au mauvais utilisateur.</p>'}, {'', ""<p>Optimisation de la visibilité : il est essentiel de trouver tous les outils et informations dont vous avez besoin pour un projet de développement. Les développeurs doivent pouvoir découvrir facilement tout ce qu'ils souhaitent visualiser à différentes étapes de leur parcours de développement. À différentes étapes du parcours de planification à la post-production, les développeurs voudront pouvoir trouver facilement différentes informations, avec le contexte dont ils ont besoin sous les yeux.</p>""}, {'', ""<p>L'utilisation d'un portail de développement interne (IDP) est un excellent moyen de centraliser les endroits où les développeurs trouvent et découvrent des outils, des ressources et de la documentation. Un IDP simplifie l'ensemble de l'écosystème de développement pour les ingénieurs afin qu'ils puissent l'utiliser en libre-service tout au long de leur parcours de développement. Il regroupe tous les outils au même endroit, ce qui permet aux développeurs d'avoir une vue d'ensemble de tout ce qu'ils doivent utiliser. Les IDP peuvent également rationaliser les flux de travail de développement et améliorer la productivité. L'un des principaux avantages d'un IDP est l'amélioration de la collaboration et du partage des connaissances entre les développeurs.</p>""}, {'', '<p>Faciliter l’utilisation : il ne s’agit pas seulement de l’accès aux outils et aux fonctionnalités, mais aussi de la facilité d’utilisation de ces outils. Il est assez courant que les conversations et la collaboration entre développeurs se déroulent dans des outils ou des canaux de dialogue pour lesquels ils n’ont pas été conçus, simplement parce que cela semble fonctionner au mieux pour tout le monde. Une façon de garantir que toutes les fonctionnalités sont accessibles est d’utiliser des outils de feedback à la fin des points cruciaux du parcours. De cette façon, vous pouvez découvrir avec quelle facilité vos développeurs peuvent trouver les informations ou les fonctionnalités pertinentes.</p>'}, {'', ""<p>Les approches d'ingénierie de plateforme peuvent aider les développeurs en leur fournissant les outils, l'infrastructure et le support standardisés en interne dont ils ont besoin pour créer et déployer des applications de manière efficace. La clé ici est la réutilisabilité et l'ingénierie de plateforme repose sur la création des composants et des services nécessaires pour fournir des applications qui peuvent être utilisées de manière répétée.</p>""}, {'', '<p>Validation de la crédibilité : chaque outil utilisé par un développeur au sein de votre entreprise doit être crédible. Qu’il s’agisse de bugs, de dépannage d’erreurs, de disponibilité ou même de la capacité à garantir que les données de l’outil sont toujours exactes, les développeurs peuvent facilement changer d’avis quant à la crédibilité de votre outil et, par la suite, cela peut également affecter la façon dont ils perçoivent l’équipe/l’organisation dans son ensemble.</p>'}, {'', '<p>L’amélioration de ces quatre domaines nécessitera également des indicateurs clés de performance, et voici quelques idées pour créer des bases de référence à mesurer et à améliorer.</p>'}, {'', ""<p>Temps de réponse et efficacité de l'API : des réponses rapides signifient moins de frustration et plus de productivité pour les développeurs.</p>""}, {'', ""<p>Taux de correction des bogues : le taux de correction des bogues indique la rapidité et l'efficacité avec laquelle une équipe traite et résout les bogues logiciels. Le suivi de cette mesure peut aider les équipes à hiérarchiser les corrections de bogues, à améliorer la stabilité du produit et à accroître la satisfaction client.</p>""}, {'', '<p>Analyse des contributions. L’évaluation des contributions individuelles au backlog d’une équipe peut aider à mettre au jour les tendances qui bloquent l’optimisation des capacités de cette équipe. Grâce à ce type d’analyse, les chefs d’équipe peuvent gérer des attentes claires en matière de résultats et d’amélioration des performances, identifier les opportunités de perfectionnement ou de formation individuelle, évaluer la répartition des rôles au sein d’une équipe et procéder à des ajustements.</p>'}, {'', ""<p>Indice de vélocité du développeur : un indice de référence qui mesure la technologie, les pratiques de travail et la capacité organisationnelle d'une entreprise et les compare à ses pairs. Cette comparaison permet de découvrir des domaines d'opportunité spécifiques, que ce soit dans la gestion du backlog, les tests ou la sécurité et la conformité.</p>""}, {'', ""<p>Score de satisfaction des développeurs : en interrogeant régulièrement vos développeurs, vous pouvez vérifier avec eux leur degré de satisfaction à l'égard d'une plateforme, d'un outil, d'un service ou d'une fonctionnalité. Il est essentiel de mener régulièrement des enquêtes sur l'expérience globale des développeurs et de mettre en corrélation ces informations avec le taux de rotation et de rétention des employés.</p>""}, {'', ""<p>Temps d'intégration : assurez-vous que le processus d'intégration est rapide et qu'un temps limité est perdu pendant ce processus.</p>""}, {'', '<p>Stabilité de la plateforme : la disponibilité et la fiabilité doivent être surveillées, garantissant que les développeurs peuvent se concentrer sur le codage et la résolution des problèmes.</p>'}, {'', ""<p>Score de capacité des talents : basé sur des cartes de capacités standard du secteur, ce score résume les connaissances, les compétences et les aptitudes d'un ingénieur spécifique. Il peut présenter des opportunités de coaching et de perfectionnement et inspirer une refonte de la stratégie des talents.</p>""}, {'', '<p>L’utilisation de ces KPI ne garantit pas la transformation de votre DevEx. Cependant, ils aident à établir des bases de référence. Par conséquent, en plus de commencer à les utiliser, il est important de mettre la direction au courant des détails du processus de développement logiciel et de son évolution.</p>'}, {'', ""<p>De plus, à mesure que vous évaluez votre DevEx, de nombreuses entreprises devront affiner leurs piles technologiques. Commencez par identifier les points de friction et les goulots d'étranglement au sein de cette pile technologique.</p>""}, {'', ""<p>Quelle que soit l'ampleur du plan d'amélioration de DevEx, il n'existe pas de solution miracle. Mais ces domaines d'intérêt et ces indicateurs clés de performance structureront votre approche.</p>""}]"
Une paire d'enquêtes révèle les principaux défis en matière de productivité des développeurs,"[{'', ""<p>Une enquête menée auprès de 900 développeurs révèle que plus des deux tiers d'entre eux (69 %) ont déclaré perdre huit heures ou plus de leur semaine de travail à cause d'inefficacités créées, par exemple, par la dette technique, une documentation insuffisante et des processus de construction défectueux.</p>""}, {'', ""<p>Menée par DX, un fournisseur d'une plateforme de renseignement en ingénierie logicielle, l'enquête a également révélé que seulement 44 % des développeurs ont déclaré qu'ils pensaient que les gestionnaires et les dirigeants de leurs organisations étaient conscients de ces problèmes.</p>""}, {'', '<p>Toutefois, du côté positif, une enquête distincte menée auprès de 1 250 dirigeants d’ingénierie par Wakefield Research pour le compte d’Atlassian a révélé que plus des trois quarts (76 %) d’entre eux ont déclaré que leurs organisations prévoyaient d’investir davantage dans l’expérience des développeurs au cours de l’année prochaine.</p>'}, {'', ""<p>Pas moins de 99 % de ces dirigeants reconnaissent également que le rôle du développeur est devenu plus complexe en raison du manque de personnel (48 %), de l'élargissement des responsabilités (47 %), des technologies émergentes (47 %), de la nécessité de changer de contexte entre les outils (43 %) et de la collaboration entre les équipes (43 %), selon l'enquête.</p>""}, {'', '<p>Andrew Boyagi, évangéliste DevOps senior chez Atlassian, a déclaré que même si les développeurs et leurs managers partent tous avec les meilleures intentions, il n’y a pas beaucoup de clarté quant à ce qui est nécessaire pour augmenter la productivité des développeurs. Dans de nombreux cas, le degré de satisfaction ressenti par les développeurs sera finalement une mesure plus pertinente que le nombre d’heures travaillées ou le volume de code créé, a-t-il noté.</p>'}, {'<h3>Réduire le niveau de friction pour les développeurs</h3>', ''}, {'', ""<p>La plupart des responsables d'ingénierie verront un cercle vertueux émerger s'ils se concentrent simplement sur la réduction du niveau de friction rencontré par les développeurs, par exemple en investissant dans l'ingénierie de plate-forme dans le cadre d'un effort plus vaste visant à la fois à simplifier l'intégration des développeurs dans un nouveau projet et à réduire le taux de désabonnement global des développeurs, a ajouté Boyagi.</p>""}, {'', '<p>Les domaines spécifiques que les développeurs ont identifiés comme les principales causes de perte de temps sont la dette technique (59 %), la documentation insuffisante (41 %), les processus de construction (27 %), le manque de temps pour un travail en profondeur (27 %) et le manque de direction claire (25 %).</p>'}, {'', '<p>Près des deux tiers des développeurs (63 %) ont déclaré que l’expérience des développeurs était importante ou très importante pour décider de conserver ou non leur emploi actuel. 86 % des dirigeants ont déclaré qu’il serait quasiment impossible d’attirer et de retenir les meilleurs talents sans améliorer l’expérience des développeurs, mais moins d’un quart des développeurs (23 %) sont satisfaits des niveaux d’investissement actuels.</p>'}, {'', ""<h3>L'IA pour apaiser les inquiétudes</h3>""}, {'', '<p>En théorie, les progrès de l’intelligence artificielle (IA) pourraient un jour apaiser bon nombre de ces inquiétudes. Cependant, pour l’instant, la plupart des développeurs sont déçus lorsqu’on leur demande dans quelle mesure les outils de développement basés sur l’IA améliorent la productivité personnelle. Un peu moins d’un tiers (30 %) ont répondu que ce n’était pas du tout le cas, tandis que 32 % ont déclaré que ces outils amélioraient légèrement la productivité. 38 % ont déclaré qu’ils constataient des améliorations modérées.</p>'}, {'', ""<p>Au cours des deux prochaines années, les développeurs sont un peu plus optimistes, avec 26 % qui s'attendent à des améliorations majeures, contre 62 % qui s'attendent à des améliorations légères à modérées.</p>""}, {'', '<p>Quelle que soit la cause profonde, il est clair qu’il existe de nombreux décalages entre les développeurs et leurs managers qui pourraient être mieux résolus en améliorant simplement la boucle de rétroaction actuelle, a déclaré Boyagi.</p>'}, {'', ""<p>Le défi et l'opportunité sont désormais de trouver des moyens de résoudre les problèmes de manière à augmenter le taux de satisfaction des développeurs. Ce dernier est généralement influencé par le temps qu'il faut à une idée pour se concrétiser en une application fonctionnelle, capable de résoudre un problème réel pour un utilisateur final.</p>""}]"
Une enquête révèle des taux élevés d'épuisement professionnel chez DevOps malgré les progrès de l'IA,"[{'', '<p>Une enquête menée auprès de 604 développeurs de logiciels et professionnels de l’ingénierie révèle que même si 61 % d’entre eux travaillent pour des organisations qui utilisent l’intelligence artificielle (IA) pour créer des logiciels dans une certaine mesure, près des deux tiers (65 %) souffrent encore d’épuisement professionnel. En fait, après le maintien d’une équipe performante (47 %), l’épuisement professionnel (41 %) est le deuxième défi le plus fréquent, selon les répondants à l’enquête.</p>'}, {'', ""<p>Réalisée par Kickstand Research pour le compte de Jellyfish, un fournisseur d'une plateforme de gestion des équipes d'ingénierie logicielle, l'enquête révèle que parmi les organisations qui ont adopté l'IA, 94 % ont déclaré qu'elle avait une influence positive sur la productivité de leur équipe, et 81 % ont déclaré que l'IA augmentait la qualité du code.</p>""}, {'', ""<p>Au total, 84 % des personnes interrogées ont également déclaré que l'IA permettait de gagner du temps pour se concentrer sur des activités à forte valeur ajoutée, selon l'enquête.</p>""}, {'', '<p>L’enquête montre toutefois clairement qu’il existe un fossé entre les managers (48 %) et les développeurs/ingénieurs qui y ont participé. Plus des trois quarts des cadres (76 %) estiment que leur équipe a adopté l’IA, alors que seulement 52 % des répondants de base sont du même avis.</p>'}, {'', '<p>Parmi les non-utilisateurs d’IA, 48 % ont déclaré que leur équipe n’avait pas adopté la technologie en raison de problèmes de sécurité, suivis par un peu plus d’un tiers (34 %) citant un manque d’expertise. Un peu moins d’un quart (24 %) ont déclaré que les contraintes budgétaires les avaient empêchés d’utiliser l’IA. Il convient de noter que 19 % des dirigeants qui travaillent pour des organisations qui n’ont pas adopté l’IA la considèrent comme un gadget.</p>'}, {'', ""<p>Andrew Lau, PDG de Jellyfish, a déclaré que même si l'on parle beaucoup d'IA, les équipes d'ingénierie logicielle devraient s'y intéresser. Les agents et copilotes IA apportent des changements inévitables à l'ingénierie logicielle qui changeront et impacteront le rôle de l'ingénierie logicielle, a-t-il ajouté.</p>""}, {'', '<h3>Les modèles d’IA deviendront plus courants</h3>'}, {'', '<p>À long terme, il ne fait aucun doute que l’IA permettra aux équipes d’ingénierie logicielle d’être plus productives à mesure que de nouvelles avancées seront réalisées, a déclaré Lau. Par exemple, les modèles d’IA formés pour des domaines spécifiques tels que l’ingénierie logicielle deviendront plus courants, a-t-il noté. Cependant, à court terme, de nombreux dirigeants et chefs d’entreprise surestiment l’impact que l’IA peut avoir à court terme sur le développement de logiciels, a-t-il ajouté.</p>'}, {'', '<p>En fait, 43 % des développeurs et ingénieurs interrogés estiment que la direction de leur entreprise n’est pas au courant des défis auxquels sont confrontées les équipes d’ingénierie logicielle. Un peu moins d’un tiers (31 %) des personnes interrogées estiment que leur équipe manque de visibilité sur l’état d’avancement des projets et plus d’un tiers (37 %) estiment que l’efficacité, la prévisibilité et la productivité de leur équipe ont diminué au cours de l’année écoulée.</p>'}, {'', '<p>Dans l’ensemble, plus des deux tiers des répondants ont déclaré que leur organisation d’ingénierie avait bénéficié d’une augmentation budgétaire l’année dernière, 57 % des responsables d’ingénierie ayant indiqué que la taille de leur équipe d’ingénierie avait augmenté au cours des 12 derniers mois. Plus de la moitié (56 %) des répondants s’attendent à ce que les effectifs de leur service augmentent au cours des 12 prochains mois.</p>'}, {'', ""<p>Cependant, plus d'un tiers (34 %) des développeurs/ingénieurs ne se sentent pas en mesure d'évoluer dans leur fonction actuelle, et un peu moins d'un tiers (32 %) envisagent de changer de carrière. Néanmoins, 80 % des répondants ont déclaré que leur travail était gratifiant.</p>""}, {'', '<p>Grâce à l’essor de l’intelligence artificielle, davantage de logiciels seront probablement développés au cours des prochaines années que durant toute la décennie précédente. Le défi consiste désormais à gérer un volume de code qui est sur le point d’augmenter de manière exponentielle, au-delà de ce que l’on pensait autrefois imaginable.</p>'}]"
Naviguer au-delà du sommet : remodeler la transformation informatique et l'évolution organisationnelle pour une croissance durable,"[{'', '<p>Au cours de mes quatre décennies passées à naviguer dans le paysage en constante évolution des technologies de l’information (TI), j’ai été témoin de profonds changements dans les technologies et les structures organisationnelles. Bien que le mouvement DevOps ait sans aucun doute fait des progrès remarquables, il est impératif de reconnaître qu’il a peut-être atteint un palier. Cet article vise à approfondir non seulement les défis et les succès de DevOps, mais également les considérations plus larges essentielles à une croissance durable dans un écosystème informatique en évolution rapide.</p>'}, {'', ""<h3>DevOps et son point d'inflexion</h3>""}, {'', '<p>L’essor de DevOps a inauguré une ère de collaboration, d’accélération des livraisons et d’amélioration de la qualité. Par exemple, la mise en œuvre de pipelines d’intégration et de déploiement continus (CI/CD) a considérablement simplifié les processus de développement et de publication. Cependant, après avoir surmonté les hauts et les bas de la transformation informatique, il est clair que DevOps a atteint un point d’inflexion. Les organisations qui ont initialement connu une augmentation de leur efficacité sont désormais confrontées à la nécessité d’une réévaluation plus profonde de leurs structures.</p>'}, {'', '<h3>Le rôle crucial de la réorganisation à long terme</h3>'}, {'', '<p>Mon expérience dans le domaine informatique souligne l’importance de la dynamique organisationnelle. Prenons l’exemple d’une grande entreprise qui a adopté DevOps. Le passage de structures hiérarchiques traditionnelles à des équipes interfonctionnelles axées sur les produits est illustré par des entreprises telles que Spotify. Ce changement optimise non seulement le flux et la charge cognitive, mais encourage également l’innovation et l’adaptabilité.</p>'}, {'<h3>Gérer les défis à court et à long terme</h3>', ''}, {'', '<p>L’attrait des gains à court terme éclipse souvent la nécessité d’une évolution soutenue. Par exemple, une entreprise qui adopte les pratiques DevOps peut bénéficier d’avantages immédiats tels qu’une mise sur le marché plus rapide. Cependant, sans stratégie plus large, ces gains peuvent s’avérer de courte durée. Prenons le cas d’Amazon, qui, au-delà de son succès en matière de commerce électronique, investit en permanence dans l’adaptabilité à long terme grâce à des innovations comme AWS.</p>'}, {'', '<h3>Dévoiler le problème de l’écart salarial</h3>'}, {'', '<p>Au-delà du secteur informatique, une tendance inquiétante se dessine : l’écart grandissant entre la productivité des entreprises et la rémunération des employés. Les mesures de réduction des coûts à court terme peuvent avoir des répercussions néfastes. Le secteur technologique en est un bon exemple : certaines entreprises, malgré une productivité élevée, ont été critiquées pour leurs structures de rémunération inégales. Pour remédier à cet écart, il faut s’engager en faveur d’une rémunération équitable et de pratiques commerciales responsables, préservant ainsi les fondements d’une économie robuste.</p>'}, {'', ""<h3>Approche centrée sur l'humain</h3>""}, {'', '<p>Dans le monde de l’informatique en constante évolution, une approche centrée sur l’humain est primordiale. Prenons l’exemple de Google, où l’accent mis sur une culture de travail positive, des projets innovants tels que « 20 % du temps » et le bien-être des employés contribuent non seulement au succès technique, mais aussi à la croissance globale.</p>'}, {'', '<h3>Apprentissage continu et développement des compétences</h3>'}, {'', '<p>L’apprentissage continu est la clé de la réussite dans le domaine informatique. L’engagement d’IBM en matière de développement des compétences, illustré par des initiatives telles que IBM Skills Gateway, garantit que les employés restent pertinents dans un paysage technologique en constante évolution. Cela permet non seulement de maintenir l’engagement des employés, mais aussi de favoriser une culture d’innovation et d’adaptabilité, essentielle à une croissance durable.</p>'}, {'', '<h3>Les indicateurs de réussite</h3>'}, {'', '<p>Il est essentiel d’établir des indicateurs pertinents pour mesurer le succès de la transformation informatique. Par exemple, Etsy, au-delà des indicateurs de performance traditionnels, intègre des indicateurs tels que la satisfaction des employés et l’efficacité de la collaboration. Cette approche holistique offre une vue plus complète de l’efficacité de la transformation.</p>'}, {'<h3>Intégration de la cybersécurité</h3>', ''}, {'', '<p>Intégrez de manière transparente les discussions sur la cybersécurité dans les discours de transformation informatique. Les violations de données d’Equifax et plus récentes nous rappellent brutalement les répercussions d’une négligence en matière de sécurité. L’intégration de mesures de sécurité dans les pratiques DevOps est essentielle pour protéger les actifs organisationnels et assurer la pérennité des initiatives informatiques.</p>'}, {'', ""<h3>Collaboration au-delà de l'informatique</h3>""}, {'', '<p>Encouragez la collaboration non seulement au sein des équipes informatiques, mais aussi entre les différents services. Le succès de Salesforce, par exemple, ne repose pas seulement sur son logiciel CRM, mais aussi sur son approche interfonctionnelle, qui garantit l’alignement avec les objectifs organisationnels globaux et favorise l’innovation au-delà des frontières traditionnelles.</p>'}, {'', '<h3>Considérations éthiques</h3>'}, {'', '<p>Mettre en avant les considérations éthiques dans la transformation technologique et informatique. L’engagement de Google en faveur d’une IA éthique, démontré par la création d’un conseil consultatif externe, illustre une approche proactive pour répondre aux implications sociétales et éthiques associées aux avancées technologiques.</p>'}, {'', '<h3>Engagement communautaire</h3>'}, {'', '<p>Encouragez l’engagement de la communauté et la participation aux forums et événements du secteur. L’engagement de Microsoft dans les communautés et événements open source tels que Build contribue non seulement à la base de connaissances collective, mais favorise également un sentiment de camaraderie entre les professionnels confrontés à des défis similaires.</p>'}, {'', '<h3>Leadership adaptatif</h3>'}, {'', '<p>Soulignez l’importance d’un leadership adaptatif dans la gestion des transformations informatiques. Le leadership de Satya Nadella chez Microsoft témoigne de l’importance d’un leadership adaptatif. Son approche de la gestion du changement, de l’inspiration des équipes et de la prise de décisions fondées sur les données a joué un rôle essentiel dans la renaissance de Microsoft en tant que leader technologique.</p>'}, {'', ""<h3>Défis et facteurs d'hésitation à prendre en compte</h3>""}, {'', '<p>Si de nombreuses entreprises reconnaissent l’importance d’adopter une approche globale de la transformation informatique, divers facteurs peuvent freiner les progrès. Voici quelques raisons expliquant l’hésitation ou la résistance à s’engager dans cette direction :</p>'}, {'', '<li>Résistance au changement</li>'}, {'', '<p>Approche : Stratégie de gestion du changement mettant l’accent sur une communication claire, l’engagement des collaborateurs et mettant en avant les avantages de la transformation.</p>'}, {'', '<li>Concentration à court terme et pression pour des résultats immédiats</li>'}, {'', '<p>Approche : Communiquer la valeur à long terme et le retour sur investissement (ROI) de la transformation pour aider les parties prenantes à aligner sur une vision plus durable.</p>'}, {'', '<li>Manque de sensibilisation ou de compréhension</li>'}, {'', '<p>Approche : Les programmes d’éducation et de sensibilisation, ainsi que la présentation d’études de cas réussies, peuvent combler ce manque de connaissances.</p>'}, {'', '<li>Systèmes hérités et dette technique</li>'}, {'', '<p>Approche : Une approche progressive, commençant par les systèmes critiques et tirant parti de technologies telles que la conteneurisation et les microservices, peut aider à gérer la transition sans submerger l’organisation. Ne l’ignorez pas.</p>'}, {'', ""<li>Peur d'une perturbation des opérations</li>""}, {'', '<p>Approche : La mise en œuvre progressive des changements, pendant des périodes moins critiques et la mise en place de plans d’urgence solides peuvent atténuer ces inquiétudes.</p>'}, {'', ""<li>L'inertie dans le leadership</li>""}, {'', '<p>Approche : Promouvoir des ateliers de leadership adaptatif et présenter des exemples de réussite d’organisations qui ont réussi à transformer leur style de leadership peut encourager l’ouverture au changement.</p>'}, {'', '<li>Contraintes budgétaires</li>'}, {'', '<p>Approche : Démontrer la rentabilité de la transformation sur le long terme et explorer les partenariats peuvent aider à surmonter les contraintes budgétaires.</p>'}, {'', '<li>La cupidité et la vision à court terme des cadres supérieurs</li>'}, {'', '<p>Approche : Aligner les incitations des dirigeants sur la santé organisationnelle à long terme, plutôt que sur les gains à court terme, peut contribuer à atténuer ce problème.</p>'}, {'', '<li>Inertie culturelle</li>'}, {'', '<p>Approche : Favoriser une culture qui encourage l’innovation, la collaboration et l’adaptabilité est essentiel pour une transformation réussie.</p>'}, {'', '<li>Incertitude et aversion au risque</li>'}, {'', '<p>Approche : Aborder l’incertitude associée aux initiatives de transformation et aux risques potentiels en soulignant l’importance des mesures audacieuses, en tirant les leçons des échecs et en ne privilégiant pas le statu quo.</p>'}, {'', '<p>En résumé, même si de nombreuses entreprises comprennent les avantages d’une transformation informatique globale, divers facteurs internes et externes peuvent contribuer à l’hésitation ou à la résistance. Surmonter ces défis nécessite souvent une combinaison de leadership stratégique, de communication efficace et d’engagement envers la santé organisationnelle à long terme.</p>'}, {'', '<p>Les dirigeants doivent s’attaquer activement à la résistance au changement, aligner les actions à court terme sur la vision à long terme et investir dans les ressources et les compétences nécessaires pour une transformation réussie. En outre, il est essentiel de favoriser une culture qui favorise l’innovation, la collaboration et l’adaptabilité pour s’orienter dans le paysage dynamique de l’informatique et assurer une croissance durable. En s’attaquant à ces facteurs, les organisations peuvent se positionner pour non seulement survivre, mais aussi prospérer à l’ère de la transformation numérique.</p>'}]"
Améliorer le DevEx de votre entreprise grâce aux stratégies CI/CD,"[{'', '<p>Dans le paysage technologique actuel, la productivité des développeurs est devenue cruciale pour les entreprises. Cela a donné naissance au concept d’expérience développeur (DevEx), qui englobe la façon dont les développeurs perçoivent et interagissent avec leur environnement de travail. Les entreprises déploient diverses stratégies, allant de l’offre de nourriture gratuite à la garde d’animaux de compagnie parrainée par l’entreprise. Mais la question est de savoir si ces stratégies fonctionnent.</p>'}, {'', ""<p>Récemment, Microsoft a demandé à Nicole Forsgren, experte en DevEx et l'un des principaux contributeurs aux mesures DORA, de mener une étude sur ce sujet. Sur la base des conclusions de l'étude, cet article explore comment les entreprises peuvent améliorer l'expérience de leurs développeurs, en incluant mon expérience en tant que fondatrice d'une société de plateforme de développement interne.</p>""}, {'', ""<h3>Qu'est-ce que l'expérience développeur ?</h3>""}, {'', ""<p>Le DevEx est la façon dont les développeurs perçoivent leur travail et la valeur qu'ils en retirent. Il ne s'agit pas seulement d'écrire du code, mais de le faire dans un environnement adapté. Tout cela dépend des bons outils, des bonnes pratiques, des bons processus et de la bonne configuration sociale. L'étude de Microsoft a examiné trois dimensions qui ont un impact sur l'expérience des développeurs : ● État de flux ● Boucles de rétroaction ● Charges cognitives</p>""}, {'', '<p>Les pipelines CI/CD sont essentiels à l’efficacité d’une organisation d’ingénierie. Ils sont utilisés par jusqu’à 75 % des sociétés de logiciels avec lesquelles les développeurs interagissent quotidiennement. Cependant, ces pipelines CI/CD sont souvent loin d’être l’outil idéal. Une enquête récente a révélé que seulement 14 % des praticiens passent du code à la production en moins d’une journée, alors que les équipes les plus performantes devraient pouvoir déployer plusieurs fois par jour.</p>'}, {'', ""<p>Je partagerai également des stratégies pour améliorer DevEx en affinant le processus d'intégration et de déploiement continu. Ces stratégies se concentrent sur l'optimisation de l'état de flux, de la charge cognitive et des boucles de rétroaction.</p>""}, {'', ""<h3>Repenser l'expérience CI/CD pour les développeurs</h3>""}, {'', ""<p>Avant de modifier quoi que ce soit dans vos outils et processus CI/CD, mesurez ce que vous souhaitez améliorer et définissez des objectifs. Ceux-ci peuvent être basés sur les priorités actuelles de l'entreprise ou sur les points faibles passés. Par exemple, les mesures DORA telles que la fréquence de déploiement, le délai d'exécution des modifications ou le taux d'échec des modifications. Plus il y en a, mieux c'est\xa0; vous pouvez définir des mesures telles que le temps nécessaire à chaque étape du processus de création, de test et de déploiement.</p>""}, {'', '<h3>Évitez les tâches à forte charge cognitive</h3>'}, {'', '<p>La charge cognitive est la quantité de traitement mental nécessaire à un développeur pour accomplir une tâche.</p>'}, {'', ""<p>Les entreprises ont généralement un langage de programmation unique qu'elles utilisent pour tout. Toute leur chaîne d'outils et leur vivier de talents sont orientés vers ce langage pour une productivité maximale. D'un autre côté, les outils CI/CD ont souvent leur propre DSL. Ainsi, lorsque les développeurs veulent modifier les configurations CI/CD, ils doivent se lancer dans ce nouveau langage rarement utilisé. Cela devient une perte de temps et entraîne une charge cognitive élevée.</p>""}, {'', '<p>L’une des façons d’éviter de confier aux développeurs des tâches à forte charge cognitive sans raison est de choisir des outils CI/CD qui utilisent un langage bien connu. Par exemple, le langage de sérialisation des données YAML, pas toujours le plus apprécié, est une norme industrielle que les développeurs savent utiliser. Mieux encore, les plateformes CI/CD modernes, telles que Dagger, open source, proposent un SDK qui permet aux développeurs d’interagir dans le langage de leur choix, évitant ainsi une charge cognitive élevée.</p>'}, {'', ""<h3>Maintenir l'état de flux intact</h3>""}, {'', '<p>L’état de flux, connu par de nombreux développeurs sous le nom de « être dans la zone », est un état mental dans lequel un ingénieur logiciel est totalement immergé dans son travail et peut atteindre une productivité maximale.</p>'}, {'', '<p>La fusion, la création, le déploiement et l’exécution sont toutes des étapes classiques d’un pipeline CI/CD, souvent gérées par plusieurs outils. Certaines organisations disposent de SRE qui gèrent ces fonctions, mais tous les développeurs n’ont pas cette chance ! Dans ce cas, si un développeur souhaite pousser du code là où aucun pipeline n’est configuré (ce qui peut être assez récurrent avec l’essor des microservices), il doit assembler ces outils rarement utilisés. Cependant, cela perturbera l’état de flux dans lequel vous souhaitez que vos développeurs restent.</p>'}, {'', '<p>Pour éviter cela, il est possible de choisir un outil CI/CD qui offre un flux de travail de déploiement simplifié aux développeurs. Des outils modernes tels que Mogenius et Qovery (dont je suis le fondateur) en sont de bons exemples. Ces outils rationalisent le processus de déploiement en exigeant simplement le lien vers le référentiel de contrôle de source de l’application, automatisant ainsi les étapes restantes de manière transparente. Une autre astuce consiste à organiser des sessions de formation pour les développeurs sur l’utilisation de la solution CI/CD. Malgré les hypothèses selon lesquelles les ingénieurs logiciels connaissent intrinsèquement les meilleures pratiques, ce n’est que parfois le cas. En proposant une formation ciblée, les entreprises dotent les développeurs des connaissances nécessaires pour utiliser efficacement les outils CI/CD. Cela réduit le risque de surcharge cognitive pendant le processus de déploiement du code et cultive une culture d’apprentissage au sein de l’organisation.</p>'}, {'', '<h3>Boucles de rétroaction instantanées</h3>'}, {'', '<p>En ingénierie logicielle, les boucles de rétroaction peuvent être mesurées par la rapidité avec laquelle les questions reçoivent une réponse.</p>'}, {'', ""<p>La résolution des problèmes au sein d'un pipeline CI/CD peut être difficile pour les développeurs en raison du besoin de plus de visibilité et d'informations. Ces processus fonctionnent souvent comme des boîtes noires, exécutées sur des serveurs auxquels les développeurs n'ont pas forcément accès directement et qui utilisent des logiciels qui leur sont étrangers. Par conséquent, les développeurs s'appuient souvent sur des ingénieurs DevOps, souvent en sous-effectif, pour diagnostiquer les problèmes, ce qui entraîne des boucles de rétroaction lentes.</p>""}, {'', ""<p>Idéalement, les développeurs devraient avoir une visibilité complète sur l'ensemble du processus et corriger les erreurs eux-mêmes. Des solutions comme Datadog et Komodor vont au-delà pour offrir une transparence totale sur les pipelines CI/CD. Elles rendent accessibles les journaux et les rapports sur les raisons de l'échec de la construction, du test ou du déploiement. Les échecs du pipeline de livraison de logiciels ont tendance à être récurrents ; la création d'une base de connaissances interne des erreurs les plus récurrentes est également une bonne pratique pour accélérer le processus de débogage de l'équipe d'ingénierie. L'intégration d'un bot basé sur LLM dans votre tableau de bord CI/CD est une approche encore plus moderne pour aider les développeurs à gérer les erreurs. Le LLM doit être formé avec des données externes et internes (base de connaissances).</p>""}, {'', '<h3>Conclusion</h3>'}, {'', '<p>Ce ne sont là que quelques exemples de la manière dont une entreprise peut améliorer l’expérience de ses développeurs en peaufinant son processus CI/CD. Une fois que vous avez décidé d’une stratégie, examinez vos indicateurs et fixez-vous des objectifs pour chaque trimestre. Changer d’outils et familiariser votre équipe avec eux peut prendre du temps et de l’énergie, mais cela en vaut la peine. L’étude a révélé que les développeurs qui utilisent des outils et des processus intuitifs déclarent se sentir 50 % plus innovants que ceux qui luttent contre des systèmes peu clairs. Et les équipes qui ont des boucles de rétroaction serrées déclarent 50 % moins de dette technique que celles qui ont des temps de réponse lents.</p>'}]"
Six façons dont la plateforme de développement logiciel peut réduire l'épuisement professionnel des développeurs,"[{'', '<p>Le rythme effréné de la numérisation dans l’Internet des objets industriel (IoT) crée des courbes d’apprentissage abruptes pour les ingénieurs en logiciels embarqués. Créer, intégrer et mettre à jour des applications logicielles industrielles sans compromettre la sécurité et les performances peut donner l’impression de travailler sous pression sur des sables mouvants en permanence. Cela peut être démotivant et difficile, même pour les professionnels les plus expérimentés, ce qui a un impact sur l’innovation et la créativité. L’épuisement professionnel est un problème très présent qui touche, selon les estimations, quatre développeurs de logiciels sur cinq.</p>'}, {'', '<p>Même l’expression « frictions entre développeurs », qui désigne les difficultés rencontrées dans le processus de création de logiciels, donne une impression de frustration face à des obstacles sans fin. Le temps est une pression constante pour quiconque souhaite garder une longueur d’avance pour que les logiciels restent pertinents pour les utilisateurs finaux qui souhaitent progresser grâce aux avantages des dernières technologies. Toute partie du processus de développement de logiciels qui entrave la création et l’intégration du code ajoute des coûts, des retards et de la complexité.</p>'}, {'', '<h3>Réduire les obstacles, réduire l’épuisement professionnel</h3>'}, {'', '<p>Il est possible de réduire les obstacles sans compromettre la qualité et la complexité des projets en choisissant une plateforme de développement logiciel qui prend en charge les besoins de performance, de sécurité et de sûreté des applications embarquées les plus complexes. Voici six façons dont la bonne plateforme contribue à réduire les frictions entre développeurs.</p>'}, {'', '<p>1) Ne faites jamais de compromis sur les performances de débitLes performances de débit sont le cœur des applications logicielles, alors ne faites pas de compromis sur les critères de capacité d’une plate-forme de développement logiciel préférée.</p>'}, {'', '<p>Pour que les applications stratégiques puissent prospérer dans n’importe quel environnement, il faut un débit global élevé du système d’exploitation et une évolutivité quasi linéaire avec un nombre de cœurs accru. Les compromis ne font que repousser l’échéance, et se contenter de moins entraînera des problèmes de capacité, de vitesse et de fiabilité du système à partir de ce moment-là. Au final, cela entraîne des résultats sous-optimaux et augmente le stress et la pression sur l’équipe.</p>'}, {'', ""<p>2) Planifiez pour voir grand (et non pas rentrer chez vous)La meilleure pratique en matière de conception de logiciels doit toujours être conçue pour la croissance. Cependant, l'évolutivité peut facilement être entravée par les limites de la plateforme de développement logiciel, qu'il s'agisse de freiner l'expansion ou de compromettre la sécurité et la sûreté des progrès.</p>""}, {'', '<p>Un meilleur développement commence par une plateforme qui permet une évolutivité transparente comme base pour les innovations et opportunités futures. Votre futur vous en remerciera !</p>'}, {'', '<p>3) Sachez quand les compromis ne sont pas acceptables. Les applications sensibles au temps et à la précision, où la fiabilité est nécessaire et non facultative (comme la robotique chirurgicale et de production), ajoutent une pression supplémentaire pour les concepteurs de logiciels. Les systèmes en temps réel basés sur une plate-forme à micro-noyau qui divise les fonctionnalités de base en espaces distincts offrent un environnement plus stable, avec une fiabilité absolue et aucune latence ni gigue. En revanche, si vous construisez sur un micro-noyau monolithique, aussi bon que soit le logiciel, si le système tombe en panne, tout tombe en panne.</p>'}, {'', ""<p>Bien que Linux soit un système d'exploitation populaire, il repose sur un noyau monolithique, ce qui rend difficile la mise en place de systèmes logiciels complexes et en temps réel pour réussir. Dans le domaine de la robotique et de l'automatisation industrielle, par exemple, le choix d'un système d'exploitation à micro-noyau libère de la pression et aide les concepteurs de logiciels à développer des solutions en temps réel avec confiance, prévisibilité et contrôle.</p>""}, {'', ""<p>4) Des outils de pointeLa pression du temps est l'une des principales causes de stress et d'épuisement professionnel des développeurs et des équipes de logiciels. Retirer les aiguilles de la botte de foin est un travail fastidieux, et des boîtes à outils obsolètes peuvent entraîner davantage de retouches et de retards. Le choix des bons outils de développement peut accélérer la mise sur le marché, identifier et résoudre les bugs, optimiser les flux de travail de développement et améliorer l'environnement de développement intégré (IDE) global. Par conséquent, prenez le temps d'enquêter et de trouver des outils de pointe conçus pour aider les développeurs modernes à repousser les limites de l'innovation.</p>""}, {'', '<p>5) Concevoir pour l’avenir, aujourd’huiVous vous sentez inquiet des défis de demain ? Concevoir un système en pensant à l’avenir signifie avoir la certitude de disposer d’une base solide en matière de sécurité et de sûreté, et de garantir que les systèmes restent pertinents et robustes à long terme.</p>'}, {'', '<p>Avec le rythme actuel des changements, si vous prévoyez d’adapter votre logiciel aux besoins futurs, vous le ferez déjà demain. Et le jour suivant. Et le jour suivant ! La meilleure alternative est de concevoir en tenant compte des besoins futurs, de la sécurité et de l’innovation intégrées aujourd’hui et d’une plateforme dotée de la stabilité nécessaire pour porter l’innovation à l’avenir. La collaboration dans le cloud peut aider à partager les charges de travail, à utiliser les meilleures compétences (où qu’elles se trouvent dans le monde) et à accroître l’efficacité pour alléger la pression.</p>'}, {'', '<p>6) Le développement des compétences est une responsabilité de l’industrieLa meilleure technologie de plate-forme est conçue pour évoluer et éduquer, aidant la communauté des développeurs de logiciels à suivre le rythme du monde qui l’entoure et offrant un support transparent quelle que soit la complexité.</p>'}, {'', ""<p>Découvrez la formation et le soutien offerts par le fournisseur de plateforme de développement logiciel de votre choix pour évaluer son engagement envers l'industrie. Et choisissez de travailler avec ceux qui investissent dans le développement des talents, de la recherche et de l'éducation de l'industrie, ainsi que dans la minimisation des obstacles à l'intégration et la promotion de l'innovation, à chaque étape du processus.</p>""}, {'', '<p>Le secteur technologique est sujet à l’épuisement professionnel en raison des environnements à haute pression. La demande de logiciels de précision pour la robotique, les véhicules, les environnements industriels et médicaux étant appelée à croître, la pression et le rythme devraient également augmenter, ce qui aggravera les charges de travail élevées et les processus inefficaces qui sont déjà des facteurs majeurs de stress et d’épuisement professionnel.</p>'}, {'', ""<p>Choisir la bonne plateforme de développement logiciel permet de disposer d'une base solide pour réussir du premier coup. Cela signifie développer en pensant à l'avenir et se préparer au succès, tout en réduisant le stress et la pression du travail.</p>""}]"
L’IA peut-elle remplacer les ingénieurs DevOps ?,"[{'', ""<p>Il y avait des administrateurs système. Ils effectuaient des sauvegardes, concevaient des VPN et créaient des plans de reprise après sinistre (PRA). Les responsables ne les comprenaient pas et pensaient qu'ils ne fonctionnaient pas vraiment. Pendant un certain temps, tout était calme et bien.</p>""}, {'', ""<p>Puis est arrivé DevOps. Le développement s'est immédiatement accéléré, les pipelines ont commencé à mieux fonctionner, les produits avaient moins de bugs et les développeurs étaient enfin satisfaits. Pendant un certain temps, tout allait à nouveau bien.</p>""}, {'', ""<p>Puis les conteneurs sont arrivés. Tout le monde s'est précipité sur Kubernetes comme si le train avait déjà quitté la gare. Ils ont pratiqué Kubernetes pour le plaisir de Kubernetes, pour le buzz et pour avoir l'occasion de montrer qu'ils étaient à la pointe. Pendant un certain temps, tout allait à nouveau bien.</p>""}, {'', '<p>Et puis l’intelligence artificielle (IA) est arrivée, une véritable révolution. L’hystérie s’est emparée du secteur informatique, qui pensait que personne ne serait plus nécessaire dans un avenir proche, puisque tout serait fait par l’IA. Mais avant de paniquer, essayons de comprendre ce que l’IA fait bien, où elle échoue dans le DevOps, et si les professionnels du DevOps devraient la craindre et commencer à se perfectionner dès aujourd’hui.</p>'}, {'', ""<h3>Là où l'IA excelle et là où elle trébuche</h3>""}, {'', ""<p>L'IA est une aide précieuse pour automatiser les tâches répétitives et un excellent assistant en développement. Elle vérifie la syntaxe, embellit le code, insère des fonctions, écrit des commentaires de code, trouve des bugs que vous auriez pu manquer, réussit à tester et à générer des tests et fonctionne bien dans l'analyse des journaux. Elle permet également de prédire le comportement, les charges et les problèmes du système et fonctionne bien pour détecter les menaces et répondre aux événements.</p>""}, {'', '<p>Cependant, l’IA manque d’une compréhension approfondie du contexte, de l’analyse critique, de la créativité et de la motivation – des aspects cruciaux du DevOps, qui repose fondamentalement sur la communication. L’IA a également du mal à créer des processus et des interactions complexes entre des parties diverses et complexes d’un système.</p>'}, {'', ""<h3>Là où DevOps surpasse l'IA</h3>""}, {'', '<p>DevOps est une pratique qui favorise la collaboration entre les développeurs de logiciels et les professionnels de l’informatique tout en automatisant la livraison de logiciels et les changements d’infrastructure. Son objectif est de créer une culture et un environnement où le développement, les tests et la publication de logiciels peuvent se dérouler rapidement, fréquemment et de manière fiable. L’IA n’est pas encore la baguette magique qui peut résoudre les tâches centrées sur l’humain.</p>'}, {'', ""<p>DevOps s'étend au-delà des pipelines, des serveurs, de Kubernetes et de Docker, en mettant l'accent sur le travail d'équipe et les relations solides au sein d'une équipe. Avec DevOps, aucune équipe distincte ne s'en tient à ses propres règles ; à la place, il existe une équipe de livraison unifiée où chacun est responsable des problèmes et désireux de les résoudre. DevOps implique également une communication interdépartementale, un transfert de connaissances et une interaction lors des déploiements.</p>""}, {'', ""<h3>Qu'en est-il du côté technique ?</h3>""}, {'', '<p>Bien entendu, l’IA peut vous aider à écrire des scripts en Bash, Python ou PowerShell. Demandez à ChatGPT et il vous sera fourni avec des commentaires. Cependant, réfléchir à un plan de reprise après sinistre complet avec tests et vérification des sauvegardes dépasse les capacités de l’IA. Comment lui expliquer que les bandes que nous utilisons pour les sauvegardes doivent être stockées dans une banque et que le processus de récupération des données doit être testé tous les trimestres, avec un risque d’échec en raison d’un numéro de téléphone mal écrit ?</p>'}, {'', '<p>Prenons par exemple les conteneurs et Kubernetes. Les configurations précises de vos déploiements nécessitent beaucoup de travail : PSP, PodDisruptionBudget, bonnes limites et requêtes, sondes solides (configurées de manière à ne pas faire planter le cluster), configuration de sécurité et surveillance appropriée. S’appuyer sur l’IA pour ces tâches n’est pas pratique : vous avez besoin d’un ingénieur DevOps compétent pour les mettre en œuvre.</p>'}, {'', '<h3>IA vs DevOps : qui est le gagnant ?</h3>'}, {'', ""<p>Combien de fois avez-vous écrit un script et vous êtes senti trop paresseux pour ajouter des commentaires ou rédiger un fichier README ? Combien de fois avez-vous recherché manuellement un bug dans le code et l'avez-vous corrigé (ligne par ligne, au cours de longues nuits) ? Combien de fois avez-vous dû vous réveiller la nuit à cause d'une notification de production ? C'est là qu'intervient l'IA, en automatisant ces tâches et d'autres similaires.</p>""}, {'', '<p>Il n’y aura plus de lutte pour la survie à l’avenir. La puissance de l’IA est révélée lorsqu’elle est associée à une approche centrée sur l’humain. Cela signifie que DevOps planifiera, exécutera, contrôlera et améliorera, tandis que l’IA aidera à gérer les tâches plus rapidement et avec plus de précision.</p>'}, {'', '<h3>Les bons spécialistes apprennent en permanence</h3>'}, {'', '<p>Les DevOps doivent améliorer leurs connaissances, perfectionner leurs compétences et apprendre à gérer les situations conflictuelles, non seulement en raison des menaces perçues par l’IA, mais aussi pour devenir et rester des spécialistes recherchés. Si vous êtes flexible, que vous vous adaptez facilement aux changements et que vous faites face aux défis sans vous lamenter sur le passé, aucune IA ne peut vous remplacer. L’IA vous aidera en vous demandant : « Comment ça se passe aujourd’hui ? Que pouvons-nous améliorer et accomplir aujourd’hui ? »</p>'}]"
Le décalage vers la gauche est mort,"[{'', '<p>Ces dernières années, un discours a émergé autour de ce que certains appellent le « développeur paresseux », un stéréotype qui caractérise injustement les développeurs comme des personnes négligentes et trop confiantes, qui ne tiennent pas compte des protocoles de sécurité et des tests approfondis. Cette représentation ignore les pressions systémiques et les attentes irréalistes auxquelles les développeurs sont confrontés dans l’environnement technologique actuel en constante évolution.</p>'}, {'', '<p>Une enquête récente menée auprès de 500 développeurs américains à temps plein met en évidence une tendance inquiétante : 75 % d’entre eux admettent contourner des mesures de sécurité telles que l’authentification multifacteur ou utiliser des VPN instables pour effectuer des tâches, et 39 % le font régulièrement. En outre, la pression pour livrer rapidement a conduit 61 % des développeurs à mettre en production du code généré par l’IA non testé, et 26 % le font régulièrement. Ces comportements sont symptomatiques de problèmes structurels plus profonds au sein de l’industrie technologique.</p>'}, {'', '<h3>Le mouvement Shift-Gauche</h3>'}, {'', '<p>Les racines de ces problèmes remontent au mantra omniprésent « bouger vite et casser des choses » qui domine la culture technologique depuis le début des années 2000. Cette approche, associée au mouvement « shift left », qui confie aux développeurs davantage de responsabilités en matière de tests et de contrôle qualité et vise à réduire les coûts et à accélérer le développement, a compromis la fiabilité des logiciels et forcé les développeurs à faire des économies pour respecter les délais.</p>'}, {'', '<p>L’essor de l’IA comme outil d’accélération du développement ne fait qu’aiguiser cette épée à double tranchant. Sans directives appropriées, les outils d’IA deviennent un élément clé de ce que l’on pourrait appeler un « développement paresseux institutionnalisé », où la précipitation à intégrer l’IA peut amplifier les problèmes opérationnels existants au lieu de les résoudre.</p>'}, {'', '<p>Dans un monde avec des outils de développement d’IA, le décalage vers la gauche devient fonctionnellement mort, laissant les développeurs incapables de gérer la charge de travail et de produire du code de qualité.</p>'}, {'', '<h3>Le triangle de fer et son impact sur le développement</h3>'}, {'', '<p>Le triangle de fer, ou triangle de gestion de projet (rapide, bon, bon marché ; choisissez-en deux), est un cadre utile pour comprendre les contraintes qui pèsent sur les développeurs. Si l’une des contraintes est modifiée, elle crée un effet d’entraînement sur les autres, soulignant la nécessité d’une gestion de projet et d’une prise de décision efficaces. C’est pourquoi les managers doivent travailler avec la direction pour mettre en place des garde-fous et des structures appropriés de haut en bas.</p>'}, {'', '<p>Le leadership au sein de l’entreprise implique l’élaboration d’une stratégie, les managers agissant comme lieutenants, définissant les exigences nécessaires en matière de produits et d’informatique pour atteindre les objectifs de l’entreprise. Les managers ne peuvent pas réduire les coûts à court terme au détriment de la santé à long terme de l’entreprise.</p>'}, {'', ""<h3>Améliorer l'expérience des développeurs</h3>""}, {'', '<p>Pour contrer ces tendances, les dirigeants technologiques doivent investir dans l’amélioration de l’expérience des développeurs et dans la simplification des processus de sécurité. L’IA peut être un outil puissant pour identifier et corriger les erreurs plus efficacement. Cependant, elle doit être intégrée de manière réfléchie pour garantir qu’elle s’aligne sur les objectifs organisationnels et ne contourne pas les contrôles de qualité nécessaires.</p>'}, {'', '<p>De plus, les entreprises doivent résister à la tentation de réduire les équipes d’assurance qualité (QA) au profit de davantage de responsabilités confiées aux développeurs. Ces dernières années, les attentes en matière d’assurance qualité ont augmenté tandis que les salaires ont diminué ou ont été délocalisés. Pourtant, l’assurance qualité est essentielle pour garantir que les produits répondent aux exigences, fonctionnent comme prévu et sont exempts de défauts.</p>'}, {'', '<p>Ces valeurs ne doivent pas exister uniquement dans le cycle de développement logiciel, mais doivent être ancrées dans la culture de l’entreprise. En établissant une stratégie et en définissant les exigences produit et informatique, les développeurs n’ont pas besoin de prendre des raccourcis ni de prendre des risques en matière de sécurité.</p>'}, {'', '<p>Si les développeurs prennent des risques et s’appuient sur l’IA de manière irresponsable, les dirigeants doivent définir des attentes et des objectifs plus clairs et peaufiner les processus de fond en comble. De cette façon, nous pouvons atteindre les résultats souhaités sans sacrifier la qualité ou la sécurité.</p>'}, {'', '<h3>Cultiver une culture de développement responsable</h3>'}, {'', '<p>Favoriser une culture de développement responsable implique de définir des attentes claires et d’affiner les processus. En établissant une stratégie qui donne la priorité à la qualité des produits et au bien-être des développeurs, les entreprises technologiques peuvent atténuer les risques et atteindre leurs objectifs sans compromettre la qualité ou la sécurité.</p>'}, {'', '<p>Ce changement nécessite une réévaluation collective des valeurs qui guident nos cycles de développement technologique, avec un engagement à intégrer ces valeurs non seulement dans les pratiques logicielles mais dans l’ensemble de la culture organisationnelle.</p>'}]"
Cinq excellentes opportunités d'emploi DevOps,"[{'', ""<p>DevOps.com fournit désormais un rapport hebdomadaire sur les emplois DevOps à travers lequel les opportunités pour les professionnels DevOps seront mises en évidence dans le cadre d'un effort visant à mieux servir notre public.</p>""}, {'', '<p>Notre objectif en ces temps économiques difficiles est de permettre aux professionnels DevOps de faire progresser leur carrière plus facilement.</p>'}, {'', '<p>Bien entendu, le vivier de talents DevOps disponibles est encore relativement limité. Ainsi, lorsqu’un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres.</p>'}, {'', '<p>Les cinq offres d’emploi partagées cette semaine sont sélectionnées en fonction de l’entreprise qui cherche à embaucher, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché du travail DevOps. En attendant, à votre attention.</p>'}, {'', '<p>SimplyHired.com</p>'}, {'', '<p>NVIDIAHillsboro, ORIngénieur DevOps senior – HPC164\xa0000 $ à 327\xa0750 $</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>PeratonLaurel, MDIngénierie logicielle cloud – Associé principal146\xa0000 $ à 234\xa0000 $</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', '<p>PenskeTampa, FLArchitecte DevOps120\xa0000 à 160\xa0000 $</p>'}, {'', '<p>LinkedIn</p>'}, {'', '<p>AscendionCharlotte. N.C.Ingénieur DevOps120 000 $ à 130 000 $</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>TravelersAtlantaIngénieur logiciel II115\xa0700 $ à 190\xa0900 $</p>'}]"
La prérogative du pouvoir,[{''}]
Cinq excellentes opportunités d'emploi DevOps,"[{'', ""<p>DevOps.com fournit désormais un rapport hebdomadaire sur les emplois DevOps à travers lequel les opportunités pour les professionnels DevOps seront mises en évidence dans le cadre d'un effort visant à mieux servir notre public.</p>""}, {'', '<p>Notre objectif en ces temps économiques difficiles est de permettre aux professionnels DevOps de faire progresser leur carrière plus facilement.</p>'}, {'', '<p>Bien entendu, le vivier de talents DevOps disponibles est encore relativement limité. Ainsi, lorsqu’un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres.</p>'}, {'', '<p>Les cinq opportunités d’emploi partagées cette semaine sont sélectionnées en fonction de l’entreprise qui cherche à embaucher, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché du travail DevOps. En attendant, à votre attention.</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>General MotorsMountain View, CADéveloppeur de logiciels senior – Infrastructure DevOps de simulation de plateforme de calcul152\xa0100 $ à 232\xa0000 $</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>Ingénieur DevOps à distance Onspot Graphics121\xa0631 $ à 131\xa0162 $</p>'}, {'', '<p>LinkedIn</p>'}, {'', '<p>FootLockerDallasArchitecte de solutions senior – Infrastructure cloud120\xa0000 à 170\xa0000 $</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', '<p>Hallmark Global TechnologiesBellevue, WAIngénieur DevOps Ubernetes110\xa0000 à 180\xa0000 $</p>'}, {'', '<p>SimplyHired.com</p>'}, {'', '<p>RaytheonHuntsville, ALIngénieur principal des systèmes/Ingénieur DevOps96\xa0000 à 200\xa0000 $</p>'}]"
Ouvert au travail,[{''}]
Cinq excellentes opportunités d'emploi DevOps,"[{'', ""<p>DevOps.com fournit désormais un rapport hebdomadaire sur les emplois DevOps à travers lequel les opportunités pour les professionnels DevOps seront mises en évidence dans le cadre d'un effort visant à mieux servir notre public.</p>""}, {'', '<p>Notre objectif en ces temps économiques difficiles est de permettre aux professionnels DevOps de faire progresser leur carrière plus facilement.</p>'}, {'', '<p>Bien entendu, le vivier de talents DevOps disponibles est encore relativement limité. Ainsi, lorsqu’un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres.</p>'}, {'', '<p>Les cinq offres d’emploi partagées cette semaine sont sélectionnées en fonction de l’entreprise qui cherche à embaucher, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché du travail DevOps. En attendant, à votre attention.</p>'}, {'', '<p>LinkedIn</p>'}, {'', '<p>National Basketball Association (NBA)Secaucus, NJIngénieur DevOps senior155\xa0000 à 190\xa0000 $</p>'}, {'', '<p>SimplyHired.com</p>'}, {'', '<p>FanDuelAtlantaIngénieur DevOps senior130 000 $ à 164 000 $</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>OracleBellevue, WADirecteur du développement logiciel – DevOps120\xa0300 $ à 291\xa0900 $</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', '<p>Accenture Federal ServicesChantilly, VADevOps Engineer97\xa0300 $ à 196\xa0500 $</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>Sandia National LabsAlbuquerque, NMDevOps Engineer95\xa0400 $ à 185\xa0700 $</p>'}]"
Mots et signification,[{''}]
Acquérir la maîtrise de DevOps : un guide complet pour réussir,"[{'', '<p>Dans le domaine dynamique du développement logiciel, maîtriser DevOps nécessite une compréhension nuancée de ses principes fondamentaux et une approche stratégique de sa mise en œuvre. DevOps est une approche collaborative qui combine le développement logiciel (Dev) et les opérations informatiques (Ops) pour automatiser et rationaliser le processus de livraison de logiciels. Elle vise à raccourcir les cycles de développement, à augmenter la fréquence de déploiement et à fournir efficacement des logiciels de haute qualité.</p>'}, {'', '<p>Au cœur d’un programme DevOps réussi se trouve un trio d’éléments essentiels : l’automatisation, la collaboration et la gouvernance. En maîtrisant ces piliers, les organisations peuvent exploiter tout le potentiel de DevOps, accélérer la livraison, améliorer la fiabilité et renforcer la sécurité.</p>'}, {'', ""<h3>Améliorer DevOps grâce à l'automatisation</h3>""}, {'', '<p>L’efficacité est une priorité absolue pour les services informatiques, selon une enquête menée par Rocket Software auprès des responsables informatiques. L’automatisation est la clé de voûte de DevOps, car elle permet aux organisations – et aux humains – de rationaliser les flux de travail, de minimiser les interventions manuelles et d’accélérer la livraison des logiciels. En automatisant les tâches banales telles que la compilation, les tests et le déploiement du code, les équipes peuvent se concentrer sur l’innovation et la résolution des problèmes. L’automatisation garantit la cohérence et facilite le déploiement rapide. En fin de compte, elle peut améliorer l’efficacité et permettre une intégration et une livraison continues.</p>'}, {'', '<p>Cependant, l’automatisation n’est pas une solution universelle. Pour exploiter tout son potentiel, elle nécessite une planification minutieuse, une exécution méticuleuse et un perfectionnement continu. Pour être efficaces, les organisations doivent investir dans des infrastructures, des outils et des cadres robustes et encourager une culture d’expérimentation et d’amélioration continue.</p>'}, {'', '<h3>Collaboration : construire des ponts au-delà des cloisons</h3>'}, {'', '<p>DevOps vise à éliminer les cloisonnements, à favoriser la collaboration et à promouvoir une culture de propriété et de responsabilité partagées. Il ne s’agit pas d’outils, mais de personnes. DevOps est autant une question de culture que de technologie. Des canaux de communication ouverts, facilités par des outils et des plateformes de collaboration, peuvent aider les équipes interfonctionnelles à travailler ensemble vers des objectifs communs.</p>'}, {'', '<p>Une collaboration efficace s’étend au-delà des frontières du développement et des opérations, englobant les parties prenantes de toute l’organisation. Chaque partie prenante a un rôle à jouer dans le parcours DevOps, de la gestion des produits à l’assurance qualité en passant par le support client. Chaque personne joue un rôle essentiel, apportant son expertise et son point de vue au processus. Chaque fonction est essentielle au succès de la mise en œuvre de DevOps, qu’il s’agisse d’un membre de la gestion des produits qui envisage la feuille de route, de l’assurance qualité qui garantit la fiabilité du produit ou du support client qui répond aux besoins des utilisateurs.</p>'}, {'', '<p>Il est essentiel de briser les cloisonnements et de favoriser la collaboration entre ces équipes diverses. Il faut une culture de transparence et d’inclusion, où l’information circule librement et où chacun se sent habilité à contribuer, à créer et à offrir des opportunités d’amélioration. Dans un environnement collaboratif basé sur la confiance, les barrières sont supprimées, la communication est rationalisée et les équipes sont alignées vers un objectif commun : fournir des solutions de haute qualité, centrées sur le client, de manière efficace et efficiente.</p>'}, {'', ""<h3>Gouvernance et sécurité : protéger la chaîne d'approvisionnement des logiciels</h3>""}, {'', '<p>À l’ère des menaces de cybersécurité et de la surveillance réglementaire croissante, la gouvernance et la sécurité sont des préoccupations primordiales pour les organisations qui adoptent DevOps. L’intégration de cadres de gouvernance et de pratiques de sécurité robustes dans le pipeline DevOps est essentielle pour garantir la conformité, gérer les risques et préserver l’intégrité de la chaîne d’approvisionnement logicielle.</p>'}, {'', '<p>De l’analyse de code et de la détection des vulnérabilités au contrôle d’accès et à la gestion des identités, les entreprises doivent mettre en œuvre des contrôles de sécurité complets pour atténuer les risques tout au long du cycle de développement logiciel. En outre, la conformité aux normes industrielles et aux exigences réglementaires doit être intégrée dès le départ au processus DevOps plutôt que traitée comme une considération ultérieure. En outre, les entreprises doivent être vigilantes quant aux considérations éthiques et aux biais algorithmiques dans les environnements exploitant l’IA et l’apprentissage automatique, où les enjeux sont accrus. En intégrant la sécurité et la conformité à chaque étape du pipeline DevOps, les entreprises peuvent instaurer la confiance entre les parties prenantes et atténuer les risques potentiels pour leur réputation et leurs résultats.</p>'}, {'', ""<p>DevSecOps, une extension de DevOps, met l'accent sur l'intégration des pratiques de sécurité tout au long du cycle de vie du développement logiciel (SDLC). Plusieurs pratiques et cadres de sécurité clés doivent être intégrés au programme DevOps. Il s'agit notamment de la mise en œuvre d'outils d'automatisation de la sécurité pour les tests continus, de pratiques d'analyse de code pour identifier les vulnérabilités dans le code source et de solutions de surveillance continue pour détecter et répondre aux menaces de sécurité en temps réel.</p>""}, {'', '<p>En outre, les organisations doivent proposer des programmes de formation et de sensibilisation à la sécurité en continu pour informer les parties prenantes sur les pratiques de codage sécurisées et les menaces émergentes. Le respect des normes et réglementations de sécurité en vigueur, les pratiques de sécurité des conteneurs, les politiques rigoureuses de gestion des identités et des accès, la gestion sécurisée des configurations et le respect des cadres de gouvernance sont également essentiels. En intégrant ces pratiques de sécurité dans leur programme DevOps, les organisations peuvent établir un pipeline de développement logiciel sécurisé et résilient, atténuant efficacement le risque de failles de sécurité et protégeant les actifs et les données critiques.</p>'}, {'', ""<p>La maîtrise de DevOps nécessite une approche holistique englobant l'automatisation, la collaboration et la gouvernance. En tirant parti de l'automatisation pour accroître l'efficacité, en favorisant la collaboration pour éliminer les silos et en intégrant la gouvernance et la sécurité pour atténuer les risques, les entreprises peuvent exploiter tout le potentiel de DevOps et offrir de la valeur aux clients avec rapidité, fiabilité et sécurité.</p>""}, {'', ""<h3>Cultiver une culture d'apprentissage</h3>""}, {'', '<p>Cependant, maîtriser DevOps n’est pas une destination mais un cheminement : une évolution continue alimentée par un engagement envers l’excellence et une volonté d’accepter le changement. Les organisations doivent cultiver une culture d’apprentissage et d’expérimentation, doter leurs équipes des outils et des ressources dont elles ont besoin pour réussir et favoriser un esprit de collaboration et d’innovation qui transcende les frontières organisationnelles. En adoptant ces principes et pratiques, les organisations peuvent tracer la voie vers la maîtrise de DevOps et se positionner pour réussir dans un paysage numérique de plus en plus compétitif et en évolution rapide.</p>'}]"
"Sécurité, automatisation et expérience des développeurs : les principales tendances DevOps de 2024","[{'', '<p>Si vous demandez à la plupart des gens de décrire les principales tendances DevOps en 2024, vous entendrez probablement des mots à la mode comme IA ou DevSecOps.</p>'}, {'', '<p>Ces sujets sont certainement à la mode. Mais en me basant sur mon travail quotidien d’aide aux entreprises pour planifier et exécuter des stratégies DevOps, je remarque un ensemble différent de tendances marquantes dans DevOps. Bien que l’on parle beaucoup de l’impact que des technologies comme l’IA pourraient avoir sur DevOps, les plus grands changements que je constate actuellement concernent d’autres types de solutions et de techniques.</p>'}, {'', '<p>Voici ce que je considère comme les trois tendances DevOps actuelles les plus importantes, ainsi qu’une analyse de la manière dont elles peuvent modifier les outils et les processus DevOps.</p>'}, {'', ""<h3>La gestion basée sur les politiques et l'IaC stimulent l'innovation en matière de sécurité DevOps</h3>""}, {'', '<p>La sécurité a toujours été une priorité pour les praticiens DevOps. Mais aujourd’hui, je vois les équipes DevOps adopter de nouvelles stratégies pour améliorer la sécurité des applications et des environnements qu’elles prennent en charge.</p>'}, {'', '<p>L’un des changements majeurs est l’utilisation accrue de la gestion des politiques basée sur le cloud pour appliquer les meilleures pratiques de sécurité dans les environnements cloud. Les équipes configurent les services et les ressources cloud à l’aide des cadres de configuration basés sur le code pris en charge par les fournisseurs de cloud, puis analysent les configurations pour détecter les risques.</p>'}, {'', ""<p>Cette approche permet d'appliquer la gouvernance du cloud de manière cohérente, centralisée et automatique. Au lieu de simplement rédiger des politiques de gouvernance et d'espérer que les ingénieurs se souviendront de les suivre lorsqu'ils configureront les ressources cloud, les entreprises créent des garde-fous de gouvernance automatisés via une gestion basée sur des politiques.</p>""}, {'', '<p>Dans la même veine, de plus en plus d’équipes DevOps avec lesquelles je travaille adoptent l’analyse statique du code des modèles d’infrastructure en tant que code (IaC) comme moyen de détecter les risques. Comme pour la gestion des ressources cloud basée sur des politiques, une approche centrée sur l’IaC pour le provisionnement de l’infrastructure permet d’automatiser la gestion de l’infrastructure et d’identifier les risques de sécurité plus tôt dans le cycle de vie du développement.</p>'}, {'', ""<p>Certaines équipes utilisent la stratégie cloud et l'analyse du code IaC pour s'avertir mutuellement des changements de stratégie de sécurité susceptibles de provoquer la défaillance d'une application ou d'un service. Pour ce faire, elles insèrent des modifications de configuration dans leur code à l'aide du mode « audit » si leur infrastructure de configuration le prend en charge, ou en configurant des scanners IaC pour signaler les modifications si une fonction d'audit n'est pas disponible. Cela permet aux ingénieurs de détecter si une modification peut entraîner un problème pour un déploiement existant.</p>""}, {'', '<p>C’est un point important, car les équipes de sécurité et d’applications fonctionnent séparément dans de nombreuses organisations. Lorsque les deux groupes ne disposent pas d’un moyen efficace de communiquer sur les changements, ils peuvent perturber leurs opérations respectives : c’est le problème de la « main droite/main gauche ». L’analyse de la configuration permet de s’assurer systématiquement que chaque groupe est sur la même longueur d’onde lorsqu’il est temps d’introduire des changements. De plus, l’approche en mode « audit » offre une période de grâce qui permet de réagir avant qu’un changement ne prenne effet.</p>'}, {""<h3>Doubler l'automatisation DevOps avec GitOps</h3>"", ''}, {'', '<p>Une autre tendance générale qui remodèle actuellement DevOps est l’utilisation de GitOps pour rendre l’automatisation DevOps plus efficace et cohérente.</p>'}, {'', ""<p>GitOps est l'utilisation de Git (ou d'un système de contrôle de source similaire) pour gérer les workflows DevOps automatisés. Il s'agit de définir des configurations à l'aide de code et de les appliquer via des fonctionnalités telles que les actions GitHub.</p>""}, {'', ""<p>Lorsque vous optez pour GitOps, vous déplacez les contrôles d'automatisation DevOps des postes de travail individuels vers des référentiels de contrôle de source centralisés. Le résultat est la possibilité de suivre et de gérer tous les flux de travail automatisés via un hub central. Cela augmente l'efficacité et atténue les problèmes tels que les différents ingénieurs travaillant avec différentes versions des mêmes cadres d'automatisation sur leurs postes de travail personnels.</p>""}, {'', '<p>De plus, GitOps génère automatiquement des enregistrements de ce qui a changé et de la manière dont cela a changé, car chaque action est enregistrée via le système de contrôle de source. Il ne s’agit pas exactement d’une documentation au sens traditionnel du terme, ce qui signifie que GitOps documente de manière exhaustive chaque changement, ce qui est bénéfique car les ingénieurs humains ont tendance à ne pas être aussi minutieux lorsqu’ils documentent leurs actions.</p>'}, {'', '<p>Certes, GitOps n’est pas sans défis. La mise en œuvre efficace de GitOps nécessite des compétences supplémentaires, notamment une expertise des frameworks IaC et des systèmes de contrôle de source, que tous les ingénieurs DevOps ne possèdent pas. Je remarque également une tendance de la part de certaines équipes à mettre en place des pipelines GitOps, mais à s’appuyer sur des approbations manuelles au lieu d’actions automatisées pour déclencher les changements. Cette approche réduit considérablement la valeur de l’automatisation des pipelines en premier lieu.</p>'}, {'', '<p>Cependant, ces défis peuvent être résolus par les équipes grâce à la formation et en s’appuyant pleinement sur GitOps. En outre, des techniques telles que les tests automatisés du code de configuration GitOps peuvent contribuer à renforcer la confiance des équipes dans les automatisations et à réduire la dépendance aux approbations manuelles.</p>'}, {'', '<p>À l’avenir, on peut s’attendre à ce que les équipes qui cherchent à améliorer leur approche de l’automatisation DevOps adoptent de plus en plus les techniques GitOps. L’automatisation des processus DevOps individuels (tels que les tests et le déploiement de logiciels) ne suffira pas. Les organisations véritablement efficaces se tourneront vers GitOps pour automatiser l’intégralité de leurs flux de travail DevOps, de bout en bout.</p>'}, {'<h3>Investir dans l’expérience des développeurs</h3>', ''}, {'', '<p>Rendre les processus de livraison de logiciels plus prévisibles et plus efficaces n’est qu’une étape vers l’objectif ultime de DevOps, qui est d’aider les développeurs à devenir productifs et satisfaits de leur travail.</p>'}, {'', '<p>À cet égard, je constate actuellement un intérêt et un investissement dans l’expérience des développeurs. Cela se traduit par deux initiatives interdépendantes.</p>'}, {'', '<p>L’une des initiatives est l’ingénierie de plateforme. Elle consiste à créer des équipes DevOps spécialisées dans certaines fonctions, telles que la gestion du réseau ou la sécurité. Ces équipes sont désignées pour prendre en charge ces fonctions dans toute l’organisation. Cette approche réduit la charge cognitive des développeurs en les libérant de la nécessité de gérer des types de travail en dehors de leur domaine d’activité principal. En d’autres termes, au lieu de forcer les développeurs à être des généralistes DevOps, l’ingénierie de plateforme permet aux différentes équipes de se concentrer sur ce qu’elles connaissent et apprécient le plus, ce qui conduit à une plus grande productivité et à des niveaux de satisfaction au travail plus élevés.</p>'}, {'', '<p>L’autre grande tendance actuelle en matière d’expérience des développeurs est le libre-service. Cela signifie que les développeurs peuvent obtenir les solutions techniques dont ils ont besoin à la demande sans passer par un processus d’approvisionnement compliqué. Dans la plupart des cas, les organisations permettent le libre-service en mettant en œuvre des plateformes de développement internes (parfois appelées portails internes pour développeurs) (IDP) qui hébergent des ressources d’infrastructure et des environnements logiciels prêts à l’emploi que les développeurs peuvent déployer en libre-service.</p>'}, {'', '<p>Ces tendances comportent des risques inhérents. Elles nécessitent des compétences spécialisées. Lorsqu’elles sont mal mises en œuvre, les solutions d’ingénierie de plateforme et de PDI peuvent créer plus de problèmes qu’elles n’en résolvent. Cependant, si vous vous assurez que vos équipes disposent de l’expertise requise et que vous déployez un PDI soigneusement planifié qui donne aux développeurs l’accès aux ressources dont ils ont besoin, vous constaterez probablement une réduction significative des frictions au sein de votre organisation et une augmentation de la productivité et du bonheur des développeurs.</p>'}, {'', '<h3>Des changements dans le monde réel, au-delà du cycle du battage médiatique</h3>'}, {'', '<p>Certes, discuter des tendances DevOps axées sur la sécurité, l’automatisation et l’expérience des développeurs n’est peut-être pas aussi passionnant que de débattre de la question de savoir si l’IA va supprimer les emplois des ingénieurs DevOps. Mais si vous voulez savoir ce qui change réellement dans le monde de DevOps – par opposition aux discussions qui suscitent le plus d’intérêt – c’est là qu’il faut chercher.</p>'}, {'', '<p>La sécurité, l’automatisation et l’expérience des développeurs font également partie des domaines de DevOps où il existe de nombreuses opportunités d’innovation – et, en effet, où l’adoption de nouveaux outils et techniques sera essentielle pour les organisations qui ne veulent pas être laissées pour compte à mesure que DevOps évolue.</p>'}]"
Une enquête sur Harness révèle une série de défis DevOps,"[{'', ""<p>Une enquête menée auprès de 500 responsables de l'ingénierie logicielle (38 %) et de praticiens révèle que près de la moitié d'entre eux déclarent qu'ils ne peuvent pas publier de code en production sans risquer des échecs, et 39 % d'entre eux indiquent que leur code ne parvient pas à être mis en production au moins la moitié du temps.</p>""}, {'', ""<p>Réalisée par Wakefield Research pour le compte de Harness, un fournisseur d'une plateforme d'intégration continue/livraison continue (CI/CD), l'enquête révèle également que lorsque le code doit être restauré, plus des deux tiers ont recours à des processus manuels.</p>""}, {'', '<p>Dans l’ensemble, 60 % des répondants ont également indiqué qu’ils continuaient à publier du code sur une base mensuelle ou trimestrielle. 59 % des développeurs ont déclaré que les exigences de sécurité des applications limitaient leur capacité à publier du code fréquemment.</p>'}, {'', ""<p>Nick Durkin, directeur technique de terrain chez Harness, a déclaré que l'une des principales raisons pour lesquelles la sécurité reste un goulot d'étranglement est principalement due au fait qu'une trop grande partie de la responsabilité en la matière a été transférée aux développeurs, au lieu de s'appuyer sur des plateformes DevSecOps imprégnées d'intelligence artificielle (IA) pour identifier et résoudre automatiquement les problèmes d'une manière qui responsabilise toutes les personnes impliquées dans le développement de logiciels.</p>""}, {'', '<p>En général, l’IA devrait être utilisée pour éliminer des tâches fastidieuses telles que la création et l’exécution de tests dans le cadre d’un effort plus vaste visant à éliminer le besoin de surveiller les outils et les plateformes, a ajouté Durkin.</p>'}, {'', '<p>Par exemple, 42 % des professionnels interrogés ont déclaré que le déploiement du code n’était ni rapide ni efficace, et 44 % ont indiqué que tester le code de bout en bout n’était pas efficace. Plus des deux tiers (67 %) ont déclaré qu’ils devaient attendre une semaine pour tester complètement le code et, même dans ce cas, 32 % ont déclaré que la couverture des tests unitaires n’était pas élevée.</p>'}, {'', '<p>Plus de la moitié (52 %) des développeurs interrogés ont attribué l’épuisement professionnel à l’une des principales raisons pour lesquelles leurs collègues ont quitté leur emploi, et un peu moins d’un quart (23 %) d’entre eux ont fait des heures supplémentaires au moins 10 jours par mois. 97 % d’entre eux ont déclaré qu’ils changeaient régulièrement de contexte entre 14 outils différents en moyenne.</p>'}, {'', '<p>Plus de la moitié (54 %) des personnes interrogées ont indiqué qu’il leur fallait plus d’une semaine pour apprendre à utiliser un nouvel outil. 59 % ont déclaré qu’il leur fallait une semaine pour créer un outillage interne. Plus d’un quart (28 %) ont déclaré qu’il leur fallait une journée pour créer un artefact.</p>'}, {'', ""<p>Près des deux tiers (62 %) des développeurs ont également connu une dérive du périmètre à mesure que les exigences s'élargissent, ce qui les rend moins confiants dans leur capacité à exécuter.</p>""}, {'', ""<h3>Un rapport révèle que l'intégration des nouveaux employés prend trop de temps</h3>""}, {'', '<p>Les nouvelles recrues ne semblent pas non plus apporter de soulagement immédiat, car leur intégration prend en moyenne 100 jours, selon 71 % des répondants.</p>'}, {'', '<p>De plus, 40 % des développeurs ont déclaré que leur organisation n’appliquait pas de bonnes politiques de sécurité et de gouvernance. Au total, 41 % d’entre eux n’ont pas de politiques de sécurité et de gouvernance automatisées, tandis que 42 % ont déclaré ne pas disposer de politiques de gestion des identités et des accès solides.</p>'}, {'', '<p>62 % des dirigeants interrogés ont déclaré qu’ils préféreraient résoudre ces problèmes en adoptant une plateforme DevOps intégrée, mais le rythme auquel cette transition se produit n’est pas clair. De nombreuses organisations ont investi massivement dans des plateformes DevOps existantes qu’elles sont souvent réticentes à abandonner et à remplacer. Dans de nombreux cas, les organisations effectuent la transition vers une plateforme DevOps moderne pour les nouveaux projets de développement d’applications tout en continuant à utiliser des plateformes existantes pour mettre à jour les applications existantes.</p>'}, {'', '<p>Rares sont ceux qui contesteraient que les flux de travail de développement logiciel sont optimaux. Le défi consiste à déterminer la meilleure façon d’avancer par rapport à la situation actuelle de la plupart des organisations, de manière à minimiser autant que possible les perturbations à un moment où les organisations n’ont jamais été aussi dépendantes des logiciels.</p>'}]"
Le cadeau qui continue à donner,[{''}]
Est-ce que plus d’argent améliore la sécurité de l’open source ?,"[{'', '<p>Cela paraît simple : si vous payez plus d’argent aux développeurs, ils amélioreront la qualité de leur code, n’est-ce pas ? Les preuves ne sont pas aussi claires.</p>'}, {'', '<p>Jusqu’à présent, il n’existait que peu de preuves directes démontrant que le fait de rémunérer les développeurs open source permettait d’obtenir un code plus sûr. Le Digital Forensic Research Lab (DFRLab) de l’Atlantic Council a récemment montré une corrélation entre le financement des mainteneurs et la sécurité du code open source.</p>'}, {'', '<p>Plus précisément, les chercheurs ont trouvé « des preuves prima facie d’un effet positif du financement général des logiciels open source sur la sécurité des logiciels open source ». Ils ont examiné les 1 000 packages Python Package Index (PyPl) et npm JavaScript les plus téléchargés. En utilisant les outils de l’Open Source Security Foundation (OpenSSF) tels que « funder-finder » et « Security Scorecard », les chercheurs ont constaté un lien entre le soutien financier et les améliorations de sécurité.</p>'}, {'', '<p>Cela peut sembler une conclusion évidente, mais les preuves ne sont pas aussi claires qu’on pourrait le penser. Les chercheurs rapportent avec une « confiance modérée » qu’il existe un lien significatif « entre un financement accru des projets open source et une meilleure posture de sécurité. […] [L]’augmentation du financement est généralement corrélée à des pratiques de sécurité plus différenciées. »</p>'}, {'', '<p>Cela semble aller à l’encontre du bon sens. Comme l’a dit Dana Wang, architecte en chef d’OpenSSF, « trouver un équilibre entre la sécurité, la fiabilité, la disponibilité, les performances et le coût des logiciels open source n’est pas une mince affaire. Les mainteneurs doivent parfois choisir entre de nouvelles fonctionnalités, des corrections de bugs et des correctifs de sécurité moins critiques. » Et, même après des fiascos de sécurité de projets open source tels que Log4J, comme nous le savons tous, la sécurité arrive trop souvent en bas de la liste des priorités des développeurs.</p>'}, {'', '<p>D’autres recherches, comme le rapport 2023 State of the Open Source Maintainer Report de la société de sécurité de programmation Tidelift, ont montré que « les mainteneurs rémunérés étaient 25 à 30 % plus susceptibles d’avoir terminé le travail ou le plan [de sécurité] par rapport aux mainteneurs non rémunérés. Pour chaque pratique de développement étudiée, les mainteneurs rémunérés étaient nettement plus susceptibles de la mettre en œuvre que les mainteneurs non rémunérés. »</p>'}, {'', '<p>Parfois, des correctifs de sécurité sont nécessaires et disponibles, mais les entreprises ne les adoptent pas. Dans une autre étude de Synopsys, le rapport 2024 Open Source Security and Risk Analysis, moins de la moitié des bases de code contenaient des composants open source sans nouveau développement au cours des deux dernières années ; 91 % contenaient des composants dix versions ou plus en retard par rapport à la dernière version. Il s’agit d’un échec des utilisateurs de l’open source, pas des développeurs open source sous-payés. De mauvaises entreprises ! Mauvaises !</p>'}, {'', '<p>En revenant à l’étude du DFRLab, les chercheurs ont également constaté que la diversité des sources de financement semblait être bénéfique. En d’autres termes, les projets bénéficiant de plusieurs soutiens semblent mieux réussir (au moins en termes de sécurité) que ceux bénéficiant d’un seul soutien. Cela suggère que les investisseurs devraient envisager une variété de mécanismes de soutien plutôt qu’un financement par une seule source.</p>'}, {'', '<p>L’une des raisons pour lesquelles les résultats sont si flous est que nous n’avons pas assez de données. Comme l’a observé l’équipe du DFRLab, « l’outil OpenSSF Scorecard lui-même présente plusieurs particularités… Le scorecard ne capture pas nécessairement toutes les améliorations de sécurité qui peuvent survenir au cours d’un projet. Par exemple, un audit de sécurité, payé volontairement par les mainteneurs qui ont reçu un financement, peut rechercher et corriger de nouvelles vulnérabilités sans probablement améliorer directement aucune mesure du scorecard. Certaines pratiques peuvent également répondre en principe aux critères d’OpenSSF mais ne pas être prises en compte par la vérification automatisée du scorecard. Par exemple, un projet peut inclure une politique de sécurité solide mais avec un nom de fichier différent de celui recherché par la recherche du scorecard, et donc ne pas passer le sous-contrôle. »</p>'}, {'', '<p>Comme le souligne DFRLab, nous devons mener davantage de recherches pour comprendre l’impact du financement sur la sécurité. Personne ne peut vraiment douter que davantage d’argent aide, mais la manière la plus efficace de financer les projets, les mainteneurs et les développeurs – et la façon dont nous devrions mesurer les résultats – restent floues.</p>'}, {'', '<p>Étant donné l’importance de la sécurité open source pour l’ensemble de nos technologies, plus tôt nous la découvrirons, mieux ce sera.</p>'}, {''}, {'', '<p>Crédit photo : Jonathan Kemper sur Unsplash</p>'}]"
Le but de la vie,[{''}]
Cinq excellentes opportunités d'emploi DevOps,"[{'', '<p>DevOps.com fournit un rapport hebdomadaire sur les emplois DevOps à travers lequel les opportunités pour les professionnels DevOps sont mises en évidence pour mieux servir notre public.</p>'}, {'', '<p>En ces temps économiques difficiles, notre objectif est de faciliter l’évolution professionnelle des professionnels DevOps. Bien entendu, le vivier de talents DevOps disponibles est encore relativement restreint. Ainsi, lorsqu’un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres. Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché de l’emploi DevOps.</p>'}, {'', '<p>Ces cinq offres d’emploi sont sélectionnées en fonction de l’entreprise qui recrute, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>En attendant, pour votre considération.</p>'}, {'', '<p>Scientific American de Springer Nature GroupNew York/Washington D.C.Directeur de DevOps170 000 à 210 000 dollars</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', '<p>HRL LaboratoriesMalibu, CAIngénieur DevOps senior145\xa0745 $ à 186\xa0688 $</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>CAST.ERAArlington, VADevOps Engineer130 000 $ à 150 000 $</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>Ingénieur DevOps principal VetsEZRemote100\xa0000 à 125\xa0000\xa0USD</p>'}, {'', '<p>LinkedIn</p>'}, {'', '<p>GE DigitalRemoteIngénieur DevOps senior96\xa0000 à 144\xa0000\xa0USD</p>'}, {'', '<p>Photo de Scott Graham sur Unsplash</p>'}]"
Payer vos cotisations,[{''}]
Cinq excellentes opportunités d'emploi DevOps,"[{'', ""<p>DevOps.com fournit un rapport hebdomadaire sur les emplois DevOps à travers lequel les opportunités pour les professionnels DevOps sont mises en évidence dans le cadre d'un effort visant à mieux servir notre public.</p>""}, {'', ""<p>Notre objectif en cette période économique difficile est de permettre aux professionnels DevOps de faire progresser leur carrière plus facilement. Bien entendu, le vivier de talents DevOps disponibles est encore relativement limité. Ainsi, lorsqu'un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres.</p>""}, {'', '<p>Les cinq offres d’emploi partagées cette semaine sont sélectionnées en fonction de l’entreprise qui cherche à embaucher, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché du travail DevOps. En attendant, à votre attention.</p>'}, {'', '<p>LinkedIn</p>'}, {'', ""<p>VisaDirecteur principal de l'ingénierie DevOpsBellevue, WA173\xa0400 à 271\xa0000 $</p>""}, {'', '<p>SimplyHired.com</p>'}, {'', '<p>Publicis SapientDallasArchitecte DevOps – Kubernetes140 000 $ à 180 000 $</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>UBSNew York CityIngénieur logiciel – DevOps135\xa0000 $ à 165\xa0000 $</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>NBC UniversalEnglewood, NJResponsable de la surveillance et du contrôle DevOps130\xa0000 à 170\xa0000\xa0USD</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', ""<p>BAE SystemsNashua, NHAdministrateur des outils d'ingénierie logicielle DevOps112\xa0142 $ à 191\xa0070 $</p>""}]"
Une enquête CDF révèle les progrès et les défis de DevOps,"[{'', ""<p>Une enquête mondiale menée auprès de plus de 10 000 développeurs par la Continuous Delivery Foundation (CDF) révèle que 83 % des développeurs sont impliqués dans des activités liées à DevOps, et qu'un tiers (33 %) utilisent activement des outils d'intégration continue, des outils de surveillance pour suivre les performances de l'infrastructure et tester les applications pour détecter les vulnérabilités de sécurité.</p>""}, {'', ""<p>Aujourd'hui, lors de l'événement cdcon, 29 % des répondants ont déclaré qu'ils étaient activement impliqués dans la livraison/le déploiement continu. Les outils et plateformes DevOps les plus utilisés sont la gestion du contrôle des sources (29 %) et le suivi des problèmes (28 %), mais seulement (21 %) ont déclaré qu'ils construisaient des pipelines d'intégration continue/livraison continue (CI/CD).</p>""}, {'', '<p>Selon Mark Waite, responsable de la communauté CloudBees, les résultats de l’enquête montrent que même si les pratiques DevOps sont largement répandues, les organisations doivent clairement atteindre des niveaux de maturité plus élevés compte tenu de l’adoption inégale des meilleures pratiques. Par exemple, seulement un quart (25 %) des répondants ont déclaré gérer l’infrastructure par programmation.</p>'}, {'', '<p>Dans l’ensemble, l’enquête suggère que les organisations sont engagées dans un parcours DevOps qui aboutit à l’adoption de pratiques DevOps spécifiques pour répondre à des exigences uniques plutôt qu’à l’adoption d’un ensemble de normes universellement appliquées, a noté Waite.</p>'}, {'', '<p>Par exemple, l’enquête révèle que seulement 14 % des répondants mettent en œuvre des changements de code quotidiennement, tandis que 17 % d’entre eux ont besoin de moins d’une semaine. Plus des deux tiers (68 %) ont besoin d’une semaine ou plus, selon l’enquête. De même, seuls 9 % déploient du code plusieurs fois par jour, tandis que 20 % le font entre une fois par heure et une fois par semaine. Seuls 11 % ont déclaré pouvoir restaurer un service en moins d’une heure.</p>'}, {'', '<p>Ces pourcentages sont restés relativement constants au cours des trois années durant lesquelles la CDF a mené cette enquête. Toutefois, l’enquête indique que les organisations qui utilisent des plateformes CI/CD gérées sont légèrement plus productives que celles qui gèrent elles-mêmes ces plateformes. Cependant, le rapport note également que les organisations qui utilisent plusieurs plateformes CI/CD ont tendance à être moins productives que celles qui ont opté pour une plateforme unique.</p>'}, {'', '<p>Il n’est pas clair dans quelle mesure les entreprises font face à l’essor de l’ingénierie de plateforme. Cette méthodologie, destinée à gérer les flux de travail DevOps à grande échelle, standardise les outils et les plateformes DevOps. Historiquement, chaque équipe DevOps a tendance à privilégier les outils et les plateformes qu’elle sélectionne, mais au fil du temps, la multiplication des plateformes peut entraîner des niveaux de friction plus élevés et des coûts plus élevés.</p>'}, {'', '<p>En fin de compte, il n’existe pas d’approche unique de DevOps qui convienne à toutes les organisations. Les organisations qui s’engagent dans DevOps ont en commun un engagement envers des niveaux d’automatisation plus élevés. En fait, avec l’essor de l’intelligence artificielle (IA), la nouvelle ère de DevOps est en train de naître.</p>'}, {'', '<p>En attendant, trouver et retenir des ingénieurs logiciels reste un problème. Des efforts constants ont été déployés pour transférer davantage de responsabilités en matière d’opérations informatiques vers les développeurs. Cependant, à mesure que la charge cognitive imposée aux développeurs augmente, le temps dont ils disposent pour écrire du code diminue. Tous les développeurs n’écrivent pas du code 100 % du temps, mais moins ils passent de temps à se concentrer sur le code, moins ils seront productifs en termes de quantité de code qui sera intégrée dans un environnement de production. Le défi, comme toujours, consiste à trouver le bon équilibre DevOps.</p>'}, {'', '<p>Crédit photo : Marc A sur Unsplash</p>'}]"
Une question de mesure,[{''}]
La méthode Commonhaus pour gérer les projets Open Source,"[{'', ""<p>Les développeurs Java de longue date se souviennent peut-être de Codehaus, qui combinait un service d'hébergement de projets Java open source et une communauté. Aujourd'hui, inspiré par son héritage, un nouveau groupe de développeurs a créé la Fondation Commonhaus.</p>""}, {'', ""<p>À la base, Commonhaus incarne une vision qui consiste à fournir un havre neutre pour les bibliothèques et les frameworks open source établis en quête d'un foyer. La mission de la fondation est de garantir un environnement propice où les projets peuvent s'épanouir sans relâche, transcendant les générations d'évolution technologique.</p>""}, {'', '<p>Vous pouvez dire que nous avons déjà ce scénario avec des organisations comme Apache Software Foundation, Linux Foundation et OpenInfra Foundation. C’est tout à fait vrai, mais elles ont clairement défini des modèles pour leurs fondations filles.</p>'}, {'', ""<p>Ce qui distingue Commonhaus, c'est l'importance qu'elle accorde à l'accompagnement et au soutien au lieu d'imposer des mandats. Au lieu d'établir des règles sur la façon dont une organisation doit être mise en place et gérée, elle permet aux projets de se diriger à leur manière.</p>""}, {'', '<p>Ses principes clés incluent la planification de la succession, qui aborde la question toujours délicate du « facteur bus ». En d’autres termes, elle aborde la question de savoir comment un projet open source peut continuer à fonctionner si un ou plusieurs de ses dirigeants meurent dans un accident de bus. La fondation aborde cette question en fournissant un réseau complexe de transitions de direction et de changements de contributeurs avec grâce, préservant ainsi leur influence et leur fonctionnalité au fil du temps.</p>'}, {'', '<p>Erin Schnabel, membre fondateur et présidente de la Fondation Commonhaus, a expliqué les raisons qui ont conduit à cette initiative. « L’écosystème open source a subi de profondes transformations ces dernières années », a-t-elle fait remarquer. « Si les fondations existantes ont jeté les bases de nombreux projets réussis, l’avènement des plateformes d’hébergement budgétaire et des modèles d’auto-gouvernance a révélé la nécessité évidente d’une nouvelle approche. »</p>'}, {'', '<p>« Les structures de gouvernance traditionnelles ne sont pas toujours en phase avec les besoins spécifiques des projets qui ont développé leurs propres pratiques et infrastructures », a poursuivi Schnabel. « Ces projets se heurtent souvent à des obstacles lorsqu’ils envisagent de fusionner avec des fondations existantes, ce qui laisse des besoins cruciaux sans réponse. Commonhaus cherche à combler cette lacune en veillant à ce que les projets de toutes sortes reçoivent le soutien dont ils ont besoin pour prospérer. »</p>'}, {'', '<p>Trisha Gee, ingénieure en logiciel et championne Java, a fait écho aux sentiments de Schnabel. « Commonhaus comble un vide crucial dans l’écosystème de soutien aux projets open source », a affirmé Gee. « Son accent sur la communauté et la continuité est primordial pour assurer la durabilité et atténuer l’épuisement des mainteneurs. Les projets réussis ne devraient pas avoir à compromettre leur autonomie pour accéder au soutien de la fondation. »</p>'}, {'', '<p>La liste des projets qui ont rejoint Commonhaus à sa création ressemble à un Who’s Who du monde de l’open source, avec notamment Hibernate, Jackson, OpenRewrite, JBang, JReleaser et Morphia. Ces projets ont en commun le désir d’un environnement stable et stimulant sans avoir à modifier les structures de gouvernance existantes.</p>'}, {'', '<p>Gavin King, ingénieur émérite de Red Hat et société mère d’Hibernate, a donné une autre raison de rejoindre Commonhaus. « Nous n’avons jamais vraiment surmonté l’idée selon laquelle il s’agissait d’un projet dominé par une seule entreprise », a déclaré King. « C’est quelque chose que nous voulons enfin changer. Le leadership et le parrainage de Red Hat ont été une source de stabilité, de continuité et de confiance des utilisateurs, et nous ne souhaitons pas compromettre cela. Mais ce que nous aimerions faire maintenant, c’est ouvrir l’espace pour que d’autres groupes et entreprises se sentent également inclus dans le projet. »</p>'}, {'', ""<p>La Fondation invite les développeurs, les contributeurs, les projets et les sponsors à se joindre à sa cause. Grâce au parrainage sur des plateformes comme GitHub, les particuliers et les organisations peuvent non seulement apporter un soutien financier, mais aussi façonner l'orientation stratégique du développement open source.</p>""}, {'', ""<p>Alors que la Fondation Commonhaus entame son voyage inaugural, elle vise à tracer la voie vers un avenir dans lequel les projets open source pourront continuer à prospérer sans être entravés par le spectre de l'obsolescence.</p>""}, {'', '<p>Crédit photo : Luke Southern sur Unsplash</p>'}]"
SEO optimisé,[{''}]
La renaissance de Ruby on Rails,"[{'', ""<p>Ruby combine programmation fonctionnelle et impérative pour créer un langage puissant et facile à utiliser où tout est un objet. Introduit en 1995, le langage de programmation open source est devenu populaire dans les années 2000 à l'ère des dot-com, lorsque les développeurs des startups et des entreprises établies étaient sous pression pour lancer rapidement de nouvelles applications Web.</p>""}, {'', '<p>Ruby on Rails, sorti en 2004, est un framework pour Ruby qui fournit des structures de base pour la création et le déploiement d’applications Web. Ruby on Rails a permis un développement encore plus rapide car il fournissait la plupart des éléments essentiels. Grâce à Rails, la popularité de Ruby a continué de grimper jusqu’au début des années 2010. Parmi les nombreuses applications créées avec Ruby on Rails, on trouve Airbnb, Basecamp, Github, Hulu et Shopify.</p>'}, {'', ""<p>À la fin des années 2010, Ruby on Rails a été relégué au second plan par JavaScript, à mesure que les clients front-end riches et les applications monopages devenaient plus courants. Mais même dans ces cas d'utilisation, de nombreux développeurs ont continué à l'utiliser pour créer rapidement une couche API conçue pour les front-ends Javascript, en grande partie parce que Rails simplifie le développement. Bien que Ruby on Rails ait facilité le développement, il a également créé des problèmes, comme l'apparition de la logique dans les deux couches, en particulier avec des fonctions comme l'authentification.</p>""}, {'', '<p>Pourtant, la popularité de Ruby on Rails a regagné du terrain ces dernières années. Le rapport 2023 State of Software Engineers de Hired a révélé que Ruby on Rails était la compétence la plus demandée pour les postes d’ingénieur logiciel. La maîtrise de Ruby on Rails a donné lieu à 1,64 fois plus d’entretiens que ceux qui ne l’avaient pas.</p>'}, {'', '<p>Cette renaissance a été considérablement renforcée par des innovations telles que Hotwire et la mise au point de son intégration JavaScript. La domination de JavaScript dans la création d’applications interactives côté client a mis Ruby on Rails à rude épreuve, en particulier à mesure que les applications monopage gagnaient en popularité. Hotwire, un outil moderne conçu pour rationaliser l’utilisation du HTML sur le réseau, permet aux développeurs de créer des applications hautement interactives dans Ruby on Rails avec un minimum de JavaScript. Cette intégration simplifie le processus de développement en gardant Ruby on Rails à l’avant-garde des développements back-end et front-end, ce qui permet des expériences de développement full-stack plus fluides. En résolvant les complexités associées à l’utilisation de JavaScript, Ruby on Rails a renforcé son attrait, permettant des cycles de développement plus rapides et réduisant le besoin d’une expertise interdisciplinaire approfondie au sein des équipes de développement. Cette optimisation à double front est essentielle pour la pertinence et la compétitivité continues de Ruby on Rails dans un paysage technologique en évolution rapide.</p>'}, {'', '<p>Une autre raison pour laquelle Ruby on Rails connaît un regain d’intérêt est sa capacité à encourager la vitesse de développement, un élément important dans l’innovation commerciale.</p>'}, {'', '<p>L’une des raisons est que Ruby on Rails favorise la rapidité du développement, un élément important de l’innovation commerciale. Les entreprises sont toujours à la recherche d’innovations technologiques, et c’est particulièrement vrai lorsqu’elles doivent faire face aux défis de la conduite des affaires dans les années 2020. Elles ont besoin de résilience, de flexibilité et d’évolutivité pour rester compétitives et se développer. Les perturbations, et pas dans le bon sens du terme, sont devenues la norme pour les entreprises. Selon un rapport IDC de 2023, trois entreprises sur quatre déclarent que leurs fonctions commerciales dépendent de l’innovation, et près de la moitié (49 %) estiment que suivre le rythme de l’innovation technologique est un risque majeur pour 2024. Cette situation est exacerbée par les incertitudes liées aux chaînes d’approvisionnement des entreprises et d’autres incertitudes financières.</p>'}, {'', '<p>En bref, on demande aux équipes de développement de produire davantage avec les mêmes ressources, voire moins, et c’est précisément là que Rails brille.</p>'}, {'', '<p>Un autre facteur est la reconnaissance de l’importance du bonheur des développeurs. Le bonheur des développeurs professionnels est essentiel à la productivité, ainsi qu’à l’attraction et à la rétention des meilleurs talents. Selon Spiceworks, en 2023, le recrutement de talents qualifiés était le principal défi de l’industrie du logiciel.</p>'}, {'', '<p>De plus, dans le rapport Hired, les deux principaux atouts des ingénieurs logiciels pour leur carrière étaient\xa0:</p>'}, {'', '<li>Nouveaux défis et apprentissage continu (69%)</li>'}, {'', '<li>Produits de construction et résolution de problèmes (66 %)</li>'}, {'', ""<p>Ruby on Rails permet aux développeurs de s'adonner à ces activités. Ils passent beaucoup plus de temps sur les aspects créatifs et stimulants des projets, car le framework prend en charge les composants qui font partie de presque toutes les applications Web.</p>""}, {'', '<p>Ruby on Rails connaît un regain de popularité bien mérité, car il permet aux équipes de développer rapidement des applications Web innovantes pour les clients qui ont besoin de les voir déployées rapidement. Il est également important de noter qu’il améliore le bien-être des développeurs. Et, en tant que projet gratuit et open source, il est accessible à tous. Ainsi, même s’il ne s’agit pas du framework et du langage adaptés à tous les projets, il peut dans de nombreux cas être la recette secrète qui permet une livraison plus rapide que prévu et qui permet à davantage de développeurs de rentrer chez eux à temps pour le dîner après un trajet pénible depuis le bureau de la chambre.</p>'}]"
Cinq excellentes opportunités d'emploi DevOps,"[{'', ""<p>DevOps.com propose désormais un rapport hebdomadaire sur les emplois DevOps, qui met en avant les opportunités pour les professionnels DevOps. Notre objectif, en cette période économique difficile, est de faciliter l'évolution de la carrière des professionnels DevOps.</p>""}, {'', '<p>Bien entendu, le vivier de talents DevOps disponibles est encore relativement limité, donc lorsqu’un professionnel DevOps assume un nouveau rôle, cela a tendance à créer une opportunité pour les autres.</p>'}, {'', '<p>Les cinq offres d’emploi partagées cette semaine sont sélectionnées en fonction de l’entreprise qui recrute, du segment industriel vertical et, bien entendu, de l’échelle salariale proposée.</p>'}, {'', '<p>Nous nous engageons également à fournir des informations supplémentaires sur l’état du marché du travail DevOps. En attendant, voici quelques informations à prendre en compte :</p>'}, {'', '<p>Indeed.com</p>'}, {'', '<p>SAPBellevue, WAIngénieur DevOps182\xa0312\xa0$</p>'}, {'', '<p>CareerBuilder.com</p>'}, {'', '<p>HRL LaboratoriesMalibu, CAIngénieur DevOps senior145\xa0745 $ à 186\xa0688 $</p>'}, {'', '<p>LinkedIn</p>'}, {'', '<p>VisaAtlantaIngénieur de données DevOps142\xa0000 $ à 179\xa0900 $</p>'}, {'', '<p>SimplyHired.com</p>'}, {'', '<p>Amazon Web Services (AWS)SeattleIngénieur senior en développement logiciel134\xa0500\xa0$</p>'}, {'', '<p>Dés.com</p>'}, {'', '<p>TravelersHartford, CTIngénieur DevOps/Machine Learning Operations (MLOps)94\xa0900 $ à 156\xa0600 $</p>'}]"
Comment le coaching d’équipe en direct peut résoudre le problème des compétences technologiques,"[{'', '<p>Le secteur technologique a un problème de compétences, et celui-ci ne disparaîtra pas en 2024. Le coaching d’équipe en direct peut être un élément important de la solution.</p>'}, {'', '<p>« Le déficit de compétences est devenu un élément incontournable dans le secteur technologique et, après une année mouvementée, l’embauche rapide dans le secteur technologique n’est plus une option viable pour les nombreuses entreprises qui recherchent davantage de productivité ou d’innovation à moindre coût.</p>'}, {'', '<p>En 2023, les financements en capital-risque étant moins nombreux, les équipes ont dû réduire leurs effectifs pour joindre les deux bouts. Les dirigeants sont poussés à faire plus avec ce qu’ils ont déjà. Le rythme rapide des changements technologiques n’aide pas à y parvenir : on estime que la demi-vie des compétences techniques est déjà inférieure à 2,5 ans. Cela signifie que des lacunes en matière de compétences se creusent constamment au sein des équipes et que la concurrence est féroce pour les ingénieurs logiciels possédant les compétences adéquates (par exemple, une expertise approfondie en IA et en science des données). Après tout, les entreprises non technologiques, comme celles du commerce de détail et de la finance, veulent désormais aussi ces développeurs. Et le travail à distance signifie que les talents locaux sont recherchés par le monde entier.</p>'}, {'', '<p>Cette crise pourrait sérieusement freiner les ambitions des entreprises. Selon une étude Gartner de 2023, les dirigeants du secteur technologique considèrent la pénurie de talents comme le principal obstacle à l’adoption de 64 % des technologies émergentes qui favorisent l’innovation, contre 4 % en 2020. L’incapacité à utiliser la meilleure technologie entraîne des retards, une faible productivité, davantage d’erreurs et la sortie de produits inadéquats.</p>'}, {'', '<p>Le secteur technologique est pris entre le marteau et l’enclume, et quelque chose doit changer. En réfléchissant à la manière dont les compétences sont développées en interne, les startups et les scale-ups peuvent commencer à surmonter les obstacles qui les freinent.</p>'}, {'', ""<h3>Le coaching peut être la voie rapide vers le succès d'une équipe</h3>""}, {'', '<p>L’industrie technologique est accro à l’embauche comme moyen d’améliorer les capacités d’une équipe et la productivité d’une organisation. Cette option n’est plus viable. Le secteur doit opérer un changement radical en faveur du développement de ses employés actuels afin qu’ils soient agiles, résilients et capables d’acquérir rapidement une expertise dans les technologies avec facilité.</p>'}, {'', '<p>C’est également important pour les développeurs de logiciels. L’apprentissage et la croissance sont les deuxièmes priorités d’un développeur lorsqu’il choisit un emploi, avant sa rémunération. Historiquement, ce besoin a été en partie résolu en donnant aux gens l’accès à des ressources – livres, vidéos, déjeuners-conférences, etc. Ces types d’avantages sont devenus la norme et ne sont rien de plus que des avantages. Peu de dirigeants ont investi dans un apprentissage significatif et dans une réelle croissance des capacités de leurs développeurs existants en vue d’un objectif stratégique. À quoi cela ressemblerait-il ? Adopter des technologies, accroître les capacités et améliorer les résultats grâce à l’apprentissage plutôt qu’à l’embauche.</p>'}, {'', '<p>Le coaching d’équipe en direct exploite le potentiel des collaborateurs d’une entreprise. Il se concentre sur les besoins et les objectifs spécifiques d’une organisation et sur les lacunes en matière de compétences qui existent au sein des membres d’une équipe. Grâce à un coaching régulier d’un expert en direct, les ingénieurs logiciels peuvent acquérir une compréhension approfondie et développer de nouvelles capacités grâce à la résolution de problèmes et au feedback. Des fonctionnalités plus innovantes sont créées plus rapidement, avec un code de meilleure qualité et moins de bugs. La confiance et la résilience de l’équipe dans son ensemble sont améliorées. Les technologies et les objectifs qui semblaient autrefois hors de portée deviennent réalisables.</p>'}, {'', '<p>Cela présente des avantages évidents pour les entreprises. Grâce aux technologies de nouvelle génération, les développeurs peuvent travailler de manière plus productive et innovante. L’IA, par exemple, peut automatiser de grandes parties du codage et du débogage, ce qui laisse aux ingénieurs logiciels plus de capacité pour des tâches de plus haut niveau. Une étude menée par GitHub, qui a interrogé 90 000 développeurs lors de sa dernière enquête, a révélé qu’un tiers des développeurs ont déclaré que l’IA avait augmenté leur productivité et qu’un sur quatre obtenait une plus grande efficacité.</p>'}, {'', '<p>L’apprentissage ciblé peut également aider les développeurs à travailler plus intelligemment, en supprimant les goulots d’étranglement et en rationalisant les flux de travail. Près des deux tiers (63 %) des développeurs interrogés par GitHub ont passé plus de 30 minutes par jour à chercher des réponses ou des solutions à des problèmes, et 53 % ont convenu qu’ils étaient ralentis dans leur travail en attendant des réponses. Imaginez l’augmentation de la productivité s’ils avaient accès à un apprentissage ciblé, qui leur permettrait de trouver facilement des solutions à ces problèmes.</p>'}, {'', '<h3>Confiance et résilience</h3>'}, {'', '<p>C’est ce qui s’est passé chez Datamaran. L’entreprise a créé une plateforme d’analyse logicielle qui identifie et surveille les risques et les opportunités des stratégies ESG. Depuis un peu plus d’un an, elle propose à ses 20 développeurs un coaching d’équipe en direct, en mettant l’accent sur le développement de leurs compétences en Python et JavaScript.</p>'}, {'', '<p>Jérôme Basdevant, CTO et cofondateur de Datamaran, a constaté que l’impact était déjà considérable. L’efficacité s’est considérablement améliorée et l’équipe peut désormais utiliser de manière appropriée des modèles et des pratiques de codage plus avancés dans son travail. Basdevant affirme que ses employés sont désormais plus autonomes car il peut leur faire confiance pour écrire correctement le code. De plus, l’équipe a amélioré sa compréhension de la complexité de l’estimation, ce qui a donné lieu à un flux de travail plus prévisible. Il a également pu embaucher des personnes d’horizons plus divers et utiliser le coaching en direct pour les perfectionner sur le terrain.</p>'}, {'<h3>Combler constamment le fossé</h3>', ''}, {'', '<p>À certains égards, le secteur doit accepter le fait que le déficit de compétences est là pour durer. Avec l’évolution rapide des technologies, les compétences d’une équipe parfaite seront une cible mouvante. Cependant, si les dirigeants de l’organisation, c’est-à-dire l’ensemble de la haute direction, et pas seulement le directeur technique, trouvent une solution continue, les équipes atteindront leur potentiel et accompliront davantage. Si les managers changent d’état d’esprit et adoptent un apprentissage à long terme et continu, intégré à la journée de travail, leurs équipes auront la capacité non seulement de continuer à avancer, mais aussi d’accélérer.</p>'}, {''}]"
Une enquête révèle que l'IA joue un rôle plus important dans l'automatisation des tests,"[{'', ""<p>Une enquête menée auprès de 1 028 professionnels de l'informatique et développeurs d'applications au Royaume-Uni, aux États-Unis, en Allemagne et à Singapour révèle que près de la moitié (47 %) d'entre eux utilisent encore des tests manuels pour les applications mobiles. Plus d'un tiers (38 %) ont indiqué que leur organisation pourrait économiser entre la moitié et les trois quarts (51-75 %) du budget alloué aux tests par an en automatisant entièrement les tests des applications mobiles.</p>""}, {'', '<p>Réalisée par le cabinet d’études de marché Censuswide pour le compte de Tricentis, fournisseur d’une plateforme d’automatisation des tests, l’enquête révèle également qu’un peu moins de la moitié des personnes interrogées (49 %) ont indiqué que leur organisation appliquait déjà l’intelligence artificielle (IA) aux tests d’applications. 21 % prévoient d’appliquer l’IA dans les six prochains mois. Près des trois quarts (74 %) ont déclaré que le sentiment général de leur organisation à l’égard de l’IA dans les tests de développement de logiciels mobiles était positif.</p>'}, {'', ""<p>Les personnes interrogées s'attendent également à ce que l'IA améliore la qualité des applications mobiles (37 %), augmente la productivité (36 %), améliore l'expérience de l'utilisateur final (34 %) et réduise le nombre de vulnérabilités et/ou de bugs (32 %) dans leurs applications.</p>""}, {'', '<p>Mav Turner, responsable des produits et de la stratégie chez Tricentis, a déclaré que plutôt que de continuer à s’appuyer sur des services de test coûteux, de plus en plus d’organisations cherchent à réduire leurs coûts en automatisant une plus large gamme de flux de travail de test dans le cadre d’un flux de travail DevOps. En fait, l’enquête révèle qu’un peu moins d’un tiers des répondants (32 %) s’attendent à ce que leur organisation investisse plus d’un million de dollars pour automatiser davantage les tests.</p>'}, {'', '<p>À mesure que la modernisation des processus de test se poursuit, le retour sur investissement dans le développement d’applications mobiles ne fera que s’améliorer, a noté Turner.</p>'}, {'', ""<p>L'enquête identifie les principaux avantages de l'investissement dans l'automatisation des tests, à savoir une productivité accrue (32 %), une augmentation des revenus (31 %), une rétention accrue des utilisateurs (28 %) et une compatibilité accrue entre les appareils (28 %).</p>""}, {'', ""<p>Les principaux obstacles rencontrés par les organisations lorsqu'elles s'efforcent d'atteindre cet objectif sont les priorités concurrentes (28 %), le manque de technologie et de talent (25 %), le temps (25 %) et le coût (24 %), selon l'enquête.</p>""}, {'', '<p>87 % des personnes interrogées ont déclaré que la qualité des applications mobiles était essentielle à leur activité, et 90 % ont indiqué qu’une mauvaise qualité des applications mobiles leur coûtait jusqu’à 2,49 millions de dollars de pertes de revenus par an. Cependant, un peu plus d’un quart (27 %) ont déclaré qu’ils estimaient que la stratégie actuelle de développement et de test des applications mobiles de leur organisation dépassait les attentes.</p>'}, {'', '<p>Dans le cadre des efforts d’automatisation des tests, on ne sait pas exactement dans quelle mesure la responsabilité des tests est transférée aux développeurs, mais il ne fait aucun doute que de plus en plus de personnes sont exposées aux résultats plus tôt dans le cycle de vie du développement logiciel. L’objectif est de fournir des capacités de test en continu sans perturber excessivement l’écriture du code. Il devient également plus simple pour les développeurs d’exploiter des outils d’IA générative pour fournir des résumés de tests ainsi que des recommandations pour améliorer le code. Le résultat final devrait être des applications de meilleure qualité qui nécessitent moins de dépannage une fois déployées dans un environnement de production.</p>'}, {'', '<p>Dans le même temps, alors que les organisations continuent de dépendre de plus en plus des applications mobiles pour mener un large éventail d’initiatives de transformation numérique, le coût des tests continuera d’être dérisoire par rapport au montant potentiel des pertes de revenus qui pourraient survenir lorsque les utilisateurs finaux n’invoquent pas une fonctionnalité ou une capacité spécifique ou, plus généralement, abandonnent tout simplement l’application.</p>'}]"
Une étude révèle des gains substantiels en matière d'ingénierie des plateformes,"[{'', '<p>Une enquête mondiale menée auprès de 500 professionnels du développement et du déploiement d’applications révèle que même si 43 % d’entre eux travaillent pour des organisations qui disposent d’une équipe de plateforme depuis trois à cinq ans, il ne semble pas y avoir beaucoup de cohérence quant à l’endroit où cette équipe rend compte au sein d’une organisation.</p>'}, {'', ""<p>L'enquête, menée par Puppet by Perforce, un fournisseur d'un cadre d'automatisation, a révélé que parmi les organisations qui disposent d'équipes de plateforme, plus de la moitié (58 %) opèrent dans le contexte d'une organisation DevOps ou de gestion d'infrastructure plus vaste, contre 40 % qui ont leur propre direction dédiée.</p>""}, {'', ""<p>David Sandilands, architecte principal des solutions pour Puppet by Perforce, a déclaré que l'enquête montre clairement que l'ingénierie de plateforme, en général, n'est pas un concept nouveau, mais il est clair que de plus en plus d'organisations tentent de réduire le niveau de travail actuellement associé à la création et au déploiement d'applications.</p>""}, {'', '<p>Peu importe où se trouvent les équipes de plateformes au sein d’une organisation, près des deux tiers des répondants (65 %) ont déclaré qu’elles étaient importantes pour leur organisation et qu’elles recevraient un financement continu. L’objectif principal de la formation de ces équipes est d’augmenter la productivité (58 %) et d’automatiser les processus standardisés (51 %), selon l’enquête. Les principaux objectifs des équipes d’ingénierie de plateformes sont de résoudre les problèmes (30 %), d’appliquer les processus de sécurité (27 %) et d’accélérer les transitions vers des environnements informatiques natifs du cloud (26 %). 70 % des répondants ont déclaré que la sécurité était intégrée à leurs plateformes dès le départ.</p>'}, {'', ""<p>Cela suggère qu'en plus d'assumer la responsabilité des flux de travail DevOps traditionnels, de nombreuses équipes de plateformes sont désormais également invitées à garantir que les meilleures pratiques DevSecOps sont suivies à un moment où les exigences de sécurité des applications deviennent plus strictes, a noté Sandilands.</p>""}, {'', '<p>Plus des trois quarts (76 %) ont également indiqué avoir déployé deux ou plusieurs portails libre-service, et 27 % en avoir déployé cinq ou plus.</p>'}, {'', ""<p>Cependant, seulement 22 % ont déclaré avoir déployé des applications sur Kubernetes dans un environnement de production, et un peu moins de la moitié (46 %) ont déclaré qu'ils n'avaient pas actuellement l'intention de déployer une plate-forme informatique cloud native, qui est largement considérée comme difficile à déployer et à maintenir.</p>""}, {'', '<p>Dans l’ensemble, l’enquête montre clairement que l’objectif principal est de garantir que les plateformes continuent d’évoluer au rythme des besoins des développeurs, a déclaré Sandilands. Les équipes de plateformes ne cherchent pas nécessairement à dicter les outils à utiliser ; elles trouvent plutôt des moyens d’automatiser les processus qui augmentent le niveau de friction auquel les développeurs sont confrontés, a-t-il ajouté.</p>'}, {'', '<p>À plus long terme, les progrès de l’intelligence artificielle (IA) permettront d’atteindre plus facilement cet objectif en utilisant des interfaces en langage naturel que les équipes DevOps peuvent invoquer plus facilement, a noté Sandilands.</p>'}, {'', '<p>Chaque organisation devra décider elle-même si l’ingénierie de plateforme est une méthodologie judicieuse pour gérer DevOps à grande échelle, mais à mesure que le développement et le déploiement des applications continuent d’évoluer, des approches plus nuancées seront nécessaires. En général, les organisations tentent de trouver un équilibre entre l’autonomisation des développeurs et la nécessité de rationaliser les processus back-end pour augmenter la productivité tout en simplifiant la conformité et en améliorant la sécurité.</p>'}, {'', '<p>Le défi, bien sûr, est d’inciter les développeurs à adhérer à ce concept plutôt que d’utiliser leur expertise pour résister aux équipes de plateforme qui pourraient, de leur point de vue, limiter leurs prérogatives d’une manière qui, à terme, étouffe l’innovation.</p>'}]"
