Title,Content
Améliorer la sécurité DevOps : pourquoi l'intégration de la modélisation des menaces transforme les tests d'intrusion,"[{'', ""<p>Les tests de pénétration (pentesting) sont depuis longtemps une pierre angulaire des pratiques de sécurité, notamment pour répondre aux exigences de conformité. Cependant, une conversation récente avec un client a révélé une lacune cruciale dans cette approche. Des vulnérabilités critiques, notamment dans leurs API et leurs logiciels tiers, n'ont pas été traitées malgré la réussite de leur test de pénétration. Bien que le test de pénétration ait vérifié la conformité, il n'a pas pris en compte les menaces réelles et évolutives auxquelles leur système était confronté.</p>""}, {'', ""<p>Bien que les tests axés sur la conformité remplissent leur rôle, ils exposent souvent les organisations à des risques tels que l'utilisation abusive des API, les vulnérabilités de la chaîne d'approvisionnement et les menaces internes. De nombreuses organisations considèrent les tests d'intrusion comme une tâche de routine, omettant ainsi une stratégie plus large pour se défendre contre les menaces en constante évolution.</p>""}, {'', '<h3>Les points faibles des pentests traditionnels dans un environnement DevOps</h3>'}, {'', '<p>Les tests d’intrusion axés sur la conformité ont tendance à suivre des listes de contrôle statiques. Cette approche néglige souvent la nature dynamique des infrastructures modernes, en particulier dans les environnements avec des déploiements rapides, des services cloud et des intégrations tierces. Ces tests peuvent ne pas s’adapter assez rapidement aux nouveaux risques qui émergent à mesure que les systèmes évoluent.</p>'}, {'', ""<p>Par exemple, les vulnérabilités des composants open source ou des dépendances de la chaîne d'approvisionnement logicielle passent souvent inaperçues lors des tests d'intrusion traditionnels. Cela peut créer un faux sentiment de sécurité : votre système peut être conforme aux normes, mais rester vulnérable aux attaques du monde réel.</p>""}, {'<h3>Modélisation des menaces : une évolution vers des tests basés sur les risques</h3>', ''}, {'', '<p>L’intégration de la modélisation des menaces dans votre stratégie de sécurité offre une approche plus personnalisée et axée sur les risques. Au lieu de se demander « Qu’est-ce qui est vulnérable ? », la modélisation des menaces déplace l’attention vers « Qu’est-ce qui pourrait mal se passer ? » et « Comment un attaquant pourrait-il exploiter ce système ? » Cette méthode proactive s’aligne sur la nature rapide et itérative de DevOps, aidant à identifier les risques plus tôt dans le cycle de développement.</p>'}, {'', ""<p>Dans un cas récent, nous avons travaillé avec une entreprise basée sur le cloud qui avait réussi plusieurs tests d'intrusion, mais qui était préoccupée par la sécurité de ses API. Grâce à la modélisation des menaces, nous avons découvert une vulnérabilité critique dans la gestion des sessions que les tests précédents avaient manquée. L'entreprise a atténué un risque de sécurité sérieux en s'attaquant à ce problème au plus tôt, avant qu'il ne puisse être exploité.</p>""}, {'', '<h3>Optimiser les ressources grâce à des tests ciblés</h3>'}, {'', '<p>L’un des principaux avantages de l’intégration de la modélisation des menaces aux tests d’intrusion est la possibilité de concentrer les ressources là où elles sont les plus importantes. Pour les équipes DevOps qui gèrent des pipelines à évolution rapide, la modélisation des menaces garantit que les efforts de test d’intrusion sont concentrés sur les zones à haut risque plutôt que dispersés sur l’ensemble du système.</p>'}, {'', '<p>Prenons par exemple un test de sécurité d’infrastructure cloud qui a utilisé un cadre de modélisation des menaces pour cibler la gestion des identités. Le test a révélé des vulnérabilités liées à l’escalade des privilèges qu’un test d’intrusion plus large et axé sur la conformité aurait pu manquer. Cette approche ciblée a permis à l’équipe de résoudre les problèmes rapidement, réduisant ainsi les risques sans surcharger les ressources.</p>'}, {'', '<h3>Comment intégrer la modélisation des menaces dans votre flux de travail DevOps</h3>'}, {'', ""<p>Pour rendre les tests d'intrusion plus efficaces et aligner la sécurité sur vos processus DevOps, pensez à intégrer la modélisation des menaces à votre flux de travail. Voici quatre étapes concrètes pour commencer\xa0:</p>""}, {'', '<ol>Adoptez un cadre de modélisation des menacesUtilisez des cadres comme STRIDE ou PASTA pour structurer vos efforts de modélisation des menaces. Ces cadres permettent de hiérarchiser les vecteurs d’attaque spécifiques à votre environnement, ce qui vous permet de vous concentrer sur les risques les plus élevés.Automatisez le processus de modélisation des menacesDans les environnements DevOps au rythme rapide, l’automatisation est essentielle. L’automatisation de la modélisation des menaces garantit que les modèles évoluent à mesure que votre système change, en identifiant en permanence les risques potentiels et en mettant à jour les pratiques de sécurité. Cela évite que les vulnérabilités critiques ne soient négligées à mesure que le développement progresse.Intégrez la modélisation des menaces dans les pipelines CI/CDPour aligner la sécurité sur DevOps, la modélisation des menaces doit être intégrée à votre pipeline CI/CD. Cela permet aux équipes de détecter les vulnérabilités tôt avant qu’elles n’atteignent la production. L’intégration de la modélisation des menaces dans les processus de création et de déploiement garantit que la sécurité est proactive et non réactive.Favorisez la collaboration entre les équipesLa modélisation des menaces ne doit pas impliquer uniquement les professionnels de la sécurité. Les développeurs, les architectes et les équipes d’exploitation doivent collaborer pour garantir que le modèle de menace reflète l’architecture du système et les besoins de l’entreprise. Cette approche interfonctionnelle crée une vision holistique des risques potentiels et renforce vos défenses.</ol>'}, {'', ""<li>Adoptez un cadre de modélisation des menacesUtilisez des cadres tels que STRIDE ou PASTA pour structurer vos efforts de modélisation des menaces. Ces cadres permettent de hiérarchiser les vecteurs d'attaque spécifiques à votre environnement, vous permettant ainsi de vous concentrer sur les risques les plus élevés.</li>""}, {'', ""<li>Automatisez le processus de modélisation des menacesDans les environnements DevOps au rythme rapide, l'automatisation est essentielle. L'automatisation de la modélisation des menaces garantit que les modèles évoluent à mesure que votre système change, en identifiant en permanence les risques potentiels et en mettant à jour les pratiques de sécurité. Cela permet d'éviter que des vulnérabilités critiques ne soient négligées à mesure que le développement progresse.</li>""}, {'', ""<li>Intégrer la modélisation des menaces dans les pipelines CI/CDPour aligner la sécurité sur DevOps, la modélisation des menaces doit être intégrée à votre pipeline CI/CD. Cela permet aux équipes de détecter les vulnérabilités avant qu'elles n'atteignent la production. L'intégration de la modélisation des menaces dans les processus de création et de déploiement garantit que la sécurité est proactive et non réactive.</li>""}, {'', '<li>Favoriser la collaboration entre les équipesLa modélisation des menaces ne doit pas impliquer uniquement les professionnels de la sécurité. Les développeurs, les architectes et les équipes d’exploitation doivent collaborer pour garantir que le modèle de menace reflète l’architecture du système et les besoins de l’entreprise. Cette approche interfonctionnelle crée une vue globale des risques potentiels et renforce vos défenses.</li>'}, {'', '<h3>Étude de cas : modélisation des menaces pour la sécurité du cloud</h3>'}, {'', ""<p>Un prestataire de soins de santé a appliqué la méthodologie STRIDE à son infrastructure cloud, en se concentrant spécifiquement sur la gestion des identités et la gestion des sessions. En utilisant ce cadre de modélisation des menaces, ils ont identifié des vulnérabilités liées à l'escalade des privilèges que les tests d'intrusion précédents avaient manquées. Cela a permis à l'équipe de prioriser ses efforts de test d'intrusion sur les domaines critiques, en s'assurant que ces vulnérabilités étaient résolues avant que les attaquants ne puissent les exploiter.</p>""}, {'', '<h3>Pourquoi les tests axés sur les menaces sont essentiels pour DevOps</h3>'}, {'', '<p>L’avenir des tests d’intrusion dans DevOps réside dans le passage d’une approche axée sur la conformité à une approche axée sur les menaces. En alignant les tests sur les risques réels, les organisations peuvent aller au-delà d’une liste de contrôle statique et s’attaquer aux menaces réelles auxquelles elles sont confrontées. Cette approche offre une stratégie de sécurité plus globale et plus adaptable.</p>'}, {'', ""<p>Les équipes DevOps peuvent combiner la modélisation des menaces avec des exercices d'équipe rouge et des simulations d'adversaires pour tester leurs défenses contre des scénarios d'attaque sophistiqués. Ces simulations imitent des adversaires du monde réel, permettant aux organisations de voir comment elles s'en sortiraient face à des menaces internes ou à des menaces persistantes avancées (APT). Ce niveau de test, basé sur les risques identifiés, garantit que votre posture de sécurité peut évoluer à mesure que votre système évolue.</p>""}, {'<h3>Conclusion : aller au-delà de la conformité pour renforcer la sécurité</h3>', ''}, {'', '<p>Pour protéger les environnements DevOps modernes et en constante évolution, il ne suffit plus de s’appuyer uniquement sur des tests d’intrusion axés sur la conformité. Pour garder une longueur d’avance sur les menaces en constante évolution, les entreprises doivent intégrer la modélisation des menaces à leurs stratégies de sécurité. Cette approche va au-delà de la simple vérification des cases : elle permet aux équipes d’identifier les risques les plus critiques et de les traiter de manière proactive.</p>'}, {'', ""<p>En adoptant des cadres de modélisation des menaces structurés, en automatisant le processus et en l'intégrant dans les pipelines CI/CD, les équipes DevOps peuvent s'assurer que la sécurité fait partie intégrante et continue de leur flux de travail. La collaboration entre les équipes garantit en outre que le modèle de sécurité s'aligne à la fois sur l'architecture du système et sur les objectifs opérationnels.</p>""}, {'', ""<p>Les attaquants font évoluer en permanence leurs tactiques, et vos stratégies de test doivent elles aussi évoluer. Ne vous limitez pas à la conformité : adoptez des tests d'intrusion axés sur les menaces et créez une posture de sécurité adaptée aux menaces réelles auxquelles votre organisation est confrontée.</p>""}]"
Automatiser les tests de sécurité des applications Web pour lutter contre les cybermenaces,"[{'', '<p>Pour la plupart des professionnels de la cybersécurité, les tests de sécurité peuvent sembler une évidence, presque comme un pari risqué. Pourtant, rien n’est plus faux. Malgré les centaines d’applications Web et d’API exposées dans nos surfaces d’attaque, de nombreux actifs restent dangereusement non testés et vulnérables aux cyberattaques. Avec l’essor de l’IA, ce nombre ne fera qu’augmenter.</p>'}, {'', '<p>Cela n’a rien de surprenant. Une enquête récente menée auprès de plus de 100 professionnels de la cybersécurité au Royaume-Uni a révélé que les menaces pesant sur leurs applications Web étaient très préoccupantes. Pourtant, la plupart des équipes de sécurité ne parviennent à tester ces applications qu’une fois par mois, ce qui laisse une part importante d’entre elles vulnérables, ce qui met en évidence une lacune critique dans nos programmes de cybersécurité.</p>'}, {'', '<p>Alors pourquoi n’arrivons-nous pas à réaliser des tests corrects ?</p>'}, {'', '<h3>Les surfaces d’attaque deviennent ingérables</h3>'}, {'', ""<p>Les surfaces d'attaque ont toujours été des cibles mouvantes. Elles fluctuent à mesure que les organisations développent leurs piles technologiques et s'intègrent aux systèmes d'autres clients et partenaires. Mais à long terme, elles ne font que croître, ce qui rend difficile de suivre le rythme.</p>""}, {'', ""<p>Les mêmes professionnels de la cybersécurité britanniques ont révélé que leurs organisations ont du mal à faire face au volume considérable et à la nature dynamique des applications Web. En fait, 54,2 % des répondants ont admis que le nombre d'applications Web dans leur environnement est trop important pour permettre des tests adéquats.</p>""}, {'', '<p>D’autres obstacles importants incluent le nombre d’API à tester et le temps nécessaire pour tester chaque application Web, cités respectivement par 59,8 % et 55,1 % des répondants.</p>'}, {'', ""<p>Le sondage a également révélé un fait choquant : ces organisations subissent chaque trimestre des événements de sécurité importants liés à leur application Web, dont la résolution peut prendre jusqu'à huit heures.</p>""}, {'', '<h3>Alors, où sont les tests ?</h3>'}, {'', '<p>Les organisations utilisent diverses méthodes, notamment DAST, IAST et les tests de pénétration, pour identifier les vulnérabilités, les erreurs de configuration et autres faiblesses des applications Web.</p>'}, {'', '<p>Pourtant, plus d’un quart des personnes interrogées ont admis ne pas disposer d’un processus formel pour tester la sécurité de leurs applications Web. Près de la moitié d’entre elles ont déclaré qu’elles utilisaient rarement des outils ou des méthodes de test de sécurité pour découvrir les vulnérabilités de leurs applications Web.</p>'}, {'', '<p>Raisons des tests peu fréquents et de la couverture limitée :</p>'}, {'', ""<li>Trop d'applications et d'API : le nombre d'applications et d'API à tester peut être écrasant</li>""}, {'', '<li>Manque de temps : les contraintes de temps empêchent des tests approfondis et fréquents</li>'}, {'', ""<li>Mises à jour et modifications fréquentes des applications\xa0: les mises à jour et les modifications constantes des applications rendent difficile le maintien d'un calendrier de tests cohérent</li>""}, {'', '<li>Insuffisance de personnel : manque de personnel qualifié pour effectuer des tests approfondis</li>'}, {'', '<li>Limitations budgétaires : les contraintes financières limitent la capacité à investir dans des outils et des ressources de test complets.</li>'}, {'', ""<h3>S'attaquer au problème</h3>""}, {'', ""<p>Au-delà des contraintes de temps et de ressources, l'amélioration de la fréquence et de l'efficacité des tests n'est pas négociable. Voici quelques bonnes pratiques :</p>""}, {'', ""<li>Surveillance continue : la visibilité continue sur la surface d'attaque permet aux organisations d'être proactives et de guider efficacement les activités de correction. La surveillance continue permet d'identifier les vulnérabilités à un stade précoce, réduisant ainsi le risque d'attaques réussies.</li>""}, {'', ""<li>Automatisation : près des trois quarts des dirigeants britanniques interrogés ont déclaré qu'ils prévoyaient d'accroître l'automatisation de leurs flux de tests de sécurité des applications Web. L'automatisation peut permettre d'économiser du temps, de l'argent et des efforts, à condition qu'elle ne crée pas de problèmes supplémentaires tels que la génération de faux positifs. Elle peut rationaliser le processus de test, permettant des évaluations plus fréquentes et plus complètes.</li>""}, {'', ""<li>Tests de production : les tests effectués dans l'environnement de production, plutôt que dans des sandbox ou hors ligne, garantissent que tous les éléments affectant une application Web, y compris les bases de données, les bibliothèques open source et les mécanismes d'authentification, sont pris en compte. Cette approche fournit une représentation plus précise des vulnérabilités potentielles et de leurs impacts.</li>""}, {'', ""<li>Investissement dans DevSecOps : pour accélérer les cycles de développement et améliorer les délais de mise sur le marché, les entreprises ont investi dans des logiciels DevOps pour publier du code plus rapidement. Cependant, elles n'ont pas investi dans des logiciels de sécurité (DevSecOps). L'intégration de la sécurité dans le pipeline DevOps est essentielle pour garantir qu'un développement rapide ne se fasse pas au détriment d'une sécurité compromise.</li>""}, {'', '<h3>Prendre du recul</h3>'}, {'', '<p>Le message principal ici est que les organisations sont de plus en plus exposées et que les méthodes de test sont inadéquates pour sécuriser les environnements.</p>'}, {'', '<p>Les méthodes de test automatisées ne sont pas une mince affaire. Un changement rapide peut fournir une couverture plus complète, une identification plus rapide des vulnérabilités et un processus de correction plus rapide.</p>'}, {'', ""<p>Il peut rationaliser les processus manuels à forte intensité de main-d'œuvre en effectuant des tests continus ou fréquents de toutes les applications Web et des API associées dans l'environnement, en identifiant avec précision les risques et en filtrant les problèmes ou événements de faible priorité.</p>""}, {'', '<p>Non seulement cela améliorera considérablement la posture de sécurité d’une organisation, mais cela soulagera également une partie de la pression sur l’équipe de sécurité.</p>'}]"
Mener la charge : le rôle des cadres dirigeants dans la culture DevOps et DevSecOps,"[{'', '<p>À mesure que la frontière numérique évolue, il devient de plus en plus impératif pour les cadres dirigeants de cultiver une solide culture DevOps et DevSecOps. Ces méthodologies vont au-delà de la simple accélération des versions de logiciels, en se concentrant plutôt sur l’optimisation de l’ensemble de la chaîne de valeur, de la conception au déploiement. L’intégration de la sécurité dans ce cadre est essentielle, l’intégrant comme un élément essentiel du développement. Pour prospérer dans cet environnement, les cadres dirigeants doivent non seulement prôner des transformations culturelles et procédurales, mais aussi montrer l’exemple.</p>'}, {'', '<p>L’un des principaux défis de la mise en œuvre de DevOps et DevSecOps est la multitude d’outils disponibles. Chaque client peut avoir ses propres outils préférés, ce qui rend essentiel pour les fournisseurs de services de se tenir au courant des dernières technologies. Cependant, la technologie à elle seule n’est pas la solution. Une mise en œuvre réussie de DevOps implique de rationaliser les processus et de s’assurer que l’utilisation de la technologie est conforme aux objectifs de l’entreprise. La direction doit mener ces initiatives en approuvant les bons outils, en investissant dans des programmes de formation et en promouvant une culture qui valorise les processus rationalisés plutôt que l’adoption technologique.</p>'}, {'', '<h3>Trouver les bons outils — Un défi</h3>'}, {'', ""<p>Différentes équipes au sein d'une organisation peuvent privilégier différents outils d'intégration continue/déploiement continu (CI/CD). Harmoniser ces préférences et garantir la compatibilité peut être un défi de taille. La complexité augmente lorsque l'on considère les différents ensembles de compétences au sein d'une équipe, ce qui nécessite un programme de formation complet pour mettre tout le monde à niveau. Dans ce cas, le soutien de la direction est essentiel pour allouer les ressources nécessaires et favoriser l'adoption d'outils et de pratiques standardisés.</p>""}, {'', '<p>Selon le rapport The State of CI/CD, environ 83 % des développeurs sont aujourd’hui impliqués dans des activités liées à DevOps, ce qui reflète des taux d’adoption élevés au sein des entreprises. Cependant, les développeurs moins expérimentés affichent des taux d’adoption plus faibles, un quart d’entre eux ayant moins de deux ans d’expérience et n’étant impliqués dans aucune activité liée à DevOps. Cela souligne la nécessité d’une meilleure éducation et formation pour les nouveaux développeurs. L’engagement de la haute direction en faveur de l’apprentissage continu est essentiel pour combler cette lacune.</p>'}, {'', '<h3>Déplacement vers la gauche : intégrer la sécurité dès le début</h3>'}, {'', ""<p>Les avis des professionnels sur la manière dont DevSecOps doit évoluer vont de l'implication totale des développeurs à la création d'équipes dédiées à la sécurité. Cependant, l'intégration de la sécurité dès le début de la phase de développement est essentielle.</p>""}, {'', ""<p>En adoptant une approche shift-left, les entreprises peuvent identifier et atténuer les problèmes de sécurité potentiels pendant la phase de développement plutôt qu'après le déploiement. Cette attitude proactive permet de réduire les vulnérabilités et d'améliorer la posture de sécurité globale du logiciel.</p>""}, {'', '<p>L’intégration de l’assurance qualité (AQ) plus tôt dans le processus, en la transformant en ingénierie de la qualité, peut également accélérer la chaîne de valeur. Cette intégration garantit que la sécurité et la qualité ne sont pas de simples cases à cocher finales, mais des composants essentiels de la conception et de l’architecture.</p>'}, {'', '<p>Un exemple des avantages d’une transition vers la gauche et de l’intégration de la qualité dès le début du processus est celui d’une grande banque américaine qui avait besoin d’améliorer ses pratiques de test système pour favoriser la livraison agile de logiciels. En adoptant une approche d’ingénierie de la qualité, qui comprend l’acceptation du développement piloté par les tests, des environnements de test automatisés et une gestion robuste des données de test, la banque a obtenu des résultats remarquables.</p>'}, {'', ""<p>La mise en œuvre a permis d'améliorer de 45 % le temps de cycle des équipes agiles grâce aux tests automatisés en cours de sprint et de réduire le besoin de sprints de renforcement. L'approche a également amélioré la vitesse de résolution des défauts de neuf fois, grâce à une meilleure traçabilité automatisée du code, et a par conséquent réduit l'effort d'assurance qualité dédié de 80 %.</p>""}, {'', '<p>Les dirigeants jouent un rôle essentiel dans ces approches en formulant une vision claire de l’intégration de la sécurité et en garantissant une allocation adéquate des ressources. Il convient également de briser les cloisonnements pour encourager la collaboration interfonctionnelle et d’établir des indicateurs de performance clés pour surveiller l’efficacité de la stratégie de déplacement vers la gauche. Ils doivent promouvoir l’adoption d’outils d’IA tels que les frameworks GitHub Copilot et CodeWhisperer, qui peuvent aider les développeurs à intégrer la sécurité dès le départ.</p>'}, {'', '<h3>Comprendre DevOps et DevSecOps comme une solution de processus</h3>'}, {'', '<p>Les prestataires de services jouent un double rôle en aidant les clients à mettre en place et à optimiser leurs chaînes de valeur DevOps et en développant des applications. Cela garantit que les meilleures pratiques sont intégrées dans les environnements des prestataires de services et des clients. Il est essentiel de comprendre DevOps comme une solution de processus, plutôt que comme une simple solution technologique.</p>'}, {'', '<p>Si vous demandez aux cadres supérieurs d’une entreprise de choisir entre l’importance de DevOps ou de DevSecOps, vous obtiendrez un regard vide. Cependant, si vous leur demandez s’ils sont satisfaits de la vitesse à laquelle une idée commerciale se traduit en réalité, vous obtiendrez une réponse passionnée. Vous constaterez le même type d’enthousiasme et d’intérêt si vous évoquez la sécurité. Par conséquent, DevOps et DevSecOps sont les moyens d’atteindre une vitesse de réponse plus élevée sans compromettre la sécurité et d’aider la haute direction à prendre conscience de l’importance de cultiver ces disciplines.</p>'}, {'', '<h3>Participation des parties prenantes</h3>'}, {'', ""<p>Une mise en œuvre réussie de DevOps et DevSecOps nécessite l'implication de toutes les parties prenantes, des chefs d'entreprise aux équipes de déploiement. Cet engagement global garantit que DevOps constitue une stratégie commerciale globale.</p>""}, {'', '<p>Les dirigeants doivent favoriser la collaboration entre les fonctions informatiques et commerciales pour combler les écarts et améliorer les performances.</p>'}, {'', '<p>L’engagement des parties prenantes est essentiel pour hiérarchiser les efforts de développement et les aligner sur les objectifs de l’entreprise. Une communication et des boucles de rétroaction régulières entre les développeurs, les équipes de sécurité et les dirigeants de l’entreprise permettent d’identifier les goulots d’étranglement et les domaines à améliorer. Le rôle de la direction dans la facilitation de ces interactions et la garantie d’une harmonisation à tous les niveaux est également crucial.</p>'}, {'', '<p>L’exemple de la transformation DevOps menée par la direction de l’entreprise américaine Target, dirigée par Mike McNamara, est un parfait exemple de réussite. En supprimant les cloisonnements, en investissant dans la formation et en adoptant l’automatisation, Target a amélioré la vitesse de livraison de ses logiciels et l’expérience client. La direction a joué un rôle essentiel dans la responsabilisation des équipes et la promotion de la collaboration entre le développement et les opérations, montrant ainsi comment la vision et l’engagement peuvent favoriser l’adoption réussie de DevOps.</p>'}, {'', '<h3>La sécurité au premier plan</h3>'}, {'', ""<p>La sécurité est devenue une priorité absolue, les failles de sécurité attirant l'attention au plus haut niveau des organisations. À mesure que les applications s'ouvrent à davantage d'utilisateurs externes, les préoccupations en matière de sécurité augmentent. La complexité du paysage DevSecOps peut être écrasante pour les organisations. Cependant, se concentrer sur le processus global, plutôt que simplement sur la sélection des outils, peut simplifier la transition.</p>""}, {'', '<p>L’intégration de la sécurité dans le processus de développement nécessite un changement de mentalité. Des formations régulières sur la sécurité pour les développeurs, des évaluations continues des menaces et l’adoption de bonnes pratiques peuvent contribuer à créer une culture de sécurité solide. La direction doit mener ces initiatives, en veillant à ce que la sécurité soit une valeur organisationnelle fondamentale.</p>'}, {'', ""<h3>L'avenir de DevOps et DevSecOps</h3>""}, {'', '<p>À l’avenir, nous pouvons nous attendre à voir apparaître des outils d’automatisation plus intelligents, capables de prédire les vulnérabilités potentielles en matière de sécurité et de suggérer des mesures correctives. Ces outils amélioreront l’efficacité et renforceront la qualité et la sécurité globales des produits logiciels. La direction doit adopter ces technologies de manière proactive, en veillant à ce que les équipes soient équipées des outils les plus récents pour conserver un avantage concurrentiel.</p>'}, {'', '<p>Les organisations qui adoptent une approche holistique des principes DevOps et DevSecOps sont mieux placées pour relever les défis et saisir les opportunités de l’ère numérique. Le parcours peut être complexe, mais avec les bonnes stratégies et l’engagement des dirigeants, les avantages sont à portée de main.</p>'}]"
PDG de JFrog : les développeurs doivent s'adapter à l'IA pour conserver leur emploi,"[{'', ""<p>Le PDG de JFrog, Shlomi Ben Haim, a déclaré aux participants de la conférence swampUP 2024 de la société qu'à moins que les développeurs d'applications ne s'adaptent, leurs emplois sont effectivement menacés en raison de la montée en puissance de l'intelligence artificielle générative (IA).</p>""}, {'', '<p>Selon Ben Haim, de nombreuses enquêtes menées auprès de DSI et de dirigeants d’entreprise montrent clairement que l’IA générative est la priorité d’investissement principale de la plupart des organisations. La quantité de code générée à l’aide de l’IA générative ne fera qu’augmenter à mesure que les dirigeants d’entreprise et informatiques chercheront à stimuler l’innovation.</p>'}, {'', '<p>De plus, les équipes DevSecOps sont désormais sollicitées pour soutenir les data scientists qui créent et déploient des modèles d’IA dans des environnements de production aux côtés d’autres classes d’artefacts. La plupart de ces modèles sont déployés à l’aide de pratiques identiques à celles des workflows DevOps et DevSecOps déjà utilisés, a noté Ben Haim.</p>'}, {'', '<p>L’intégration des pratiques DevOps et des opérations d’apprentissage automatique (MLOps) est donc inévitable, a-t-il ajouté.</p>'}, {'', '<p>JFrog investit dans le MLOps depuis plus d’un an et a récemment acquis Qwak AI en plus d’intégrer sa plateforme DevSecOps aux microservices NIM fournis par NVIDIA. Les data scientists ne sont qu’une autre personne qui doit être intégrée à l’équipe DevSecOps, a noté Ben Haim.</p>'}, {'', '<p>En même temps, DevSecOps devrait s’efforcer de consolider ses outils et ses plateformes afin de réduire les coûts et d’optimiser les flux de travail, a-t-il ajouté. Il est tout simplement impossible qu’une équipe DevOps puisse maîtriser, par exemple, 20 outils et plateformes différents, a noté Ben Haim. Une plateforme DevSecOps intégrée qui comprend, par exemple, des extensions de code source gérées dans des référentiels GitHub rend les équipes DevSecOps beaucoup plus productives en leur fournissant une source unique de vérité, a déclaré Ben Haim.</p>'}, {'', '<p>On ne sait pas exactement à quel rythme les entreprises fusionnent les workflows DevOps et MLOps, mais à mesure que les modèles d’IA sont de plus en plus intégrés aux applications, ils deviendront bientôt un simple type d’artefact logiciel à déployer. Si la première vague de modèles d’IA a été initialement déployée par des data scientists travaillant avec des data engineers, l’expertise disponible pour déployer des modèles d’IA dans des environnements de production à grande échelle est tout simplement insuffisante.</p>'}, {'', '<p>Quelle que soit la manière dont les modèles d’IA sont déployés, une chose est sûre : ils seront bientôt beaucoup plus nombreux. Les organisations ont passé la majeure partie de l’année 2024 à déterminer la meilleure façon d’opérationnaliser l’IA générative en vue de les déployer dans des environnements de production dans les mois à venir. En plus d’utiliser des techniques de génération augmentée de récupération (RAG) pour personnaliser davantage les modèles d’IA, bon nombre de ces modèles d’IA devront au fil du temps être remplacés par des modèles d’IA formés à l’aide de données plus récentes.</p>'}, {'', '<p>Le défi, comme toujours, sera de définir les flux de travail nécessaires pour automatiser autant que possible le processus à une époque où l’on s’attend à ce que la quantité de logiciels déployés dans les prochaines années dépasse de loin tous les logiciels déployés au cours de la dernière décennie.</p>'}]"
Recherche sur la frontière homme/machine : exploiter l'IA générative dans l'ingénierie logicielle,"[{'', '<p>Dans le paysage technologique actuel, l’IA générative n’est pas seulement un mot à la mode : c’est une force transformatrice qui redéfinit la manière dont les logiciels sont conçus, développés et livrés. ArchAITecture Research Collaborative (A²RC), une initiative de recherche à but non lucratif dirigée par la MITRE Corporation, se concentre sur l’intégration de l’IA générative dans le cycle de vie du développement logiciel (SDLC). Ce projet va au-delà de l’exploration technique ; il plonge dans l’avenir de la collaboration homme/machine. Il est important de noter qu’A²RC partagera les résultats de cette recherche avec la communauté au sens large pour favoriser l’innovation et la prise de décision éclairée.</p>'}, {""<h3>IA générative : la nouvelle frontière de l'ingénierie logicielle</h3>"", ''}, {'', ""<p>L'IA générative (GAI) révolutionne chaque phase du cycle de vie du développement logiciel, de l'idéation et de la conception au codage, aux tests et au déploiement. Contrairement à l'IA traditionnelle, qui s'appuie sur des règles et des ensembles de données prédéfinis, l'IA générative peut créer de nouveaux contenus, de nouvelles solutions et même du code à partir de zéro. Cette capacité a un potentiel révolutionnaire pour l'ingénierie logicielle.</p>""}, {'', '<p>Mais la véritable question est la suivante : comment pouvons-nous combiner l’intelligence artificielle et l’expertise humaine pour créer un processus d’ingénierie logicielle plus puissant et plus innovant ? Cette recherche explore la manière dont les humains et les machines peuvent collaborer, l’intelligence artificielle agissant comme un partenaire créatif plutôt que comme un simple outil.</p>'}, {'', '<h3>Au-delà de l’automatisation : le potentiel créatif de l’IA générative</h3>'}, {'', '<p>Le potentiel de l’IAG va au-delà de l’automatisation. Il offre une nouvelle dimension de créativité et de résolution de problèmes. Si l’IAG peut générer du code, concevoir des interfaces et même proposer des solutions architecturales, les humains apportent des éléments essentiels comme l’intuition, la créativité et la compréhension contextuelle.</p>'}, {'', '<p>Cette recherche vise à harmoniser l’intelligence humaine et l’IAG pour repousser les limites du possible en matière de développement logiciel. Notre objectif est de guider le futur SDLC afin qu’il soit non seulement efficace, mais aussi plus innovant et optimisé pour les complexités des besoins logiciels modernes.</p>'}, {'', '<h3>Le rôle du projet collaboratif de recherche ArchAITecture (A²RC)</h3>'}, {'', ""<p>A²RC est à l'avant-garde de cette exploration. Notre équipe comprend des chercheurs, des ingénieurs et des leaders d'opinion qui se consacrent à faire progresser l'intégration sûre et sécurisée de l'IAG dans l'ingénierie logicielle. La recherche est guidée par une vision d'un avenir où l'IAG et la créativité humaine travaillent main dans la main pour fournir des logiciels de qualité à la vitesse de la pertinence.</p>""}, {'', ""<p>L'accent n'est pas uniquement mis sur les aspects techniques de l'IA, mais aussi sur la manière dont elle peut améliorer l'expérience humaine dans l'ingénierie logicielle. Notre équipe étudie des questions telles que : Comment pouvons-nous intégrer l'IA dans les flux de travail existants sans perturber la créativité humaine ? Quelles sont les principales pratiques en matière de collaboration homme/IA dans le développement de logiciels ? Comment pouvons-nous maintenir la transparence, l'éthique et la responsabilité dans les résultats générés par l'IA ?</p>""}, {'', '<p>En outre, A²RC explore les discussions cruciales qui pourraient redéfinir l’avenir de l’ingénierie logicielle :</p>'}, {'', '<li>D’outil à coéquipier : imaginez GAI évoluant d’un simple outil vers un agent autonome, remodelant la dynamique d’équipe et les processus de prise de décision.</li>'}, {'', '<li>Plateformes numériques pilotées par l’IA : Considérez le potentiel des plateformes centrées sur l’IA qui pourraient révolutionner la distribution de logiciels, en transformant les rôles et les flux de travail à l’image des plateformes low-code et no-code d’aujourd’hui.</li>'}, {'', ""<h3>Une invitation à participer : façonner l'avenir avec l'IA générative</h3>""}, {'', ""<p>GAI est sur le point de révolutionner l'ingénierie logicielle. Il est essentiel de disposer de perspectives et d'idées diverses issues des nombreux rôles du SDLC pour comprendre l'évolution du paysage.</p>""}, {'', ""<p>Nous menons une enquête pour recueillir des informations auprès de toutes les personnes associées à la conception et à la distribution de logiciels dans le monde entier. Cette enquête joue un rôle crucial pour comprendre comment l'IA générative est utilisée dans des scénarios réels et comment elle impacte les pratiques logicielles modernes et les humains.</p>""}, {'', '<p>Cette enquête se concentre sur l’intersection dynamique de la collaboration entre l’homme et la machine, dans le but de :</p>'}, {'', '<li>Identifier les facteurs clés pour un logiciel humain-IA efficace et efficient</li>'}, {'', '<li>Comprendre les cas d’utilisation, les risques et les récompenses associés à l’intégration des outils GAI dans le SDLC.</li>'}, {'', ""<li>Découvrez l'impact de l'IA générative sur le cycle de vie du développement logiciel</li>""}, {'', '<p>En participant, vous contribuerez à élaborer un rapport complet qui reflète l’état actuel de la pratique et favorise les innovations futures.</p>'}, {'', ""<p>Nous avons conçu l'enquête anonyme pour recueillir un large éventail d'expériences et de points de vue. Les informations que nous recueillerons éclaireront nos recherches en cours et nous aideront à développer de nouveaux outils, cadres et meilleures pratiques pour intégrer GAI dans le SDLC. Pour participer à l'enquête, veuillez consulter ce lien.</p>""}, {'', '<p>En plus de l’enquête, nous invitons les organisations à participer à l’élaboration d’études de cas. Ces études de cas incluront l’utilisation d’un outil d’aide à la décision léger conçu pour aider les équipes et les organisations à définir leurs objectifs et à mesurer efficacement leur réussite. Cette approche pratique offre une occasion unique d’explorer les avantages et les défis de la collaboration homme/machine avec l’IA générative.</p>'}, {'<h3>Pourquoi la participation est importante</h3>', ''}, {'', '<p>Le succès de cette recherche dépend de la participation d’individus et d’organisations passionnés par la technologie et son avenir. Que vous soyez architecte logiciel, développeur ou leader technologique, votre contribution est inestimable pour façonner l’avenir de l’IA générative en ingénierie logicielle.</p>'}, {'', '<p>En participant à l’enquête ou en menant une étude de cas, vous jouerez un rôle essentiel dans l’exploration du potentiel de l’IA générative. Les informations que vous fournirez auront un impact direct sur le développement de systèmes d’IA non seulement innovants, mais également éthiques, transparents et alignés sur les valeurs humaines.</p>'}, {'', ""<h3>Participez à la révolution de l'IA générative</h3>""}, {'', '<p>L’avenir de l’ingénierie logicielle se dessine aujourd’hui, avec l’IA générative comme élément central. Cette recherche offre l’opportunité de participer à cette transformation, en contribuant à définir la manière dont l’IA et la créativité humaine collaboreront dans les années à venir.</p>'}, {'', '<p>A²RC estime que l’avenir de l’ingénierie logicielle réside dans l’intégration transparente de l’IA générative dans chaque phase du SDLC. Cette recherche marque une étape passionnante vers cet avenir, mais nous avons besoin de la participation de la communauté technologique mondiale pour réussir.</p>'}, {'', ""<h3>Participez à l'enquête, menez une étude de cas, façonnez l'avenir</h3>""}, {'', '<p>Que vous choisissiez de participer à cette recherche révolutionnaire en répondant à l’enquête ou en menant une étude de cas, vos connaissances contribueront à façonner l’avenir de l’ingénierie logicielle, en garantissant que l’IA générative améliore, plutôt que de remplacer, la créativité et l’expertise humaines.</p>'}, {'', '<p>Cette recherche ne porte pas uniquement sur la technologie : elle porte sur l’avenir du travail, de la créativité et du potentiel humain. Rejoignez A²RC dans cette importante exploration et contribuez à façonner l’avenir de l’ingénierie logicielle grâce à l’IA générative.</p>'}, {'', ""<p>Pour toute demande de renseignements ou pour vous impliquer, contactez Trac Bannon à [email\xa0protected] ou l'ArchAITecture Research Collaborative à [email\xa0protected].</p>""}]"
Le coût croissant des incidents numériques : comprendre et atténuer l'impact des pannes,"[{'', '<p>Les perturbations numériques ont atteint des niveaux alarmants. La réponse aux incidents dans les environnements d’application modernes est fréquente, chronophage et demande beaucoup de travail. Notre équipe a une expérience directe de la gestion des impacts à grande échelle de ces perturbations et pannes, ayant passé des décennies dans les opérations informatiques. PagerDuty a récemment publié une étude1 qui met en lumière à quel point nos systèmes et pratiques de réponse aux incidents existants sont défaillants. La récente débâcle de Crowdstrike en est une preuve supplémentaire. Malgré tous les investissements dans l’observabilité, les opérations d’IA, l’automatisation et les manuels, la situation ne s’améliore pas. À certains égards, elle est pire : nous collectons de plus en plus de données et nous sommes surchargés d’outils, ce qui crée une confusion entre les utilisateurs et les équipes qui ont du mal à comprendre l’environnement holistique et toutes ses interdépendances. Avec un temps de résolution moyen de 175 minutes, chaque incident numérique ayant un impact sur le client coûte à la fois du temps et de l’argent. Le secteur doit réinitialiser et revoir les processus actuels afin que nous puissions évoluer et changer la trajectoire.</p>'}, {'', ""<h3>L'impact des pannes et des temps d'arrêt des applications</h3>""}, {'', '<p>Les pannes sapent la confiance des clients. 90 % des responsables informatiques déclarent que les perturbations numériques ont réduit la confiance des clients. La protection des données sensibles, la garantie d’une restauration rapide du service et la fourniture de mises à jour en temps réel aux clients sont essentielles pour maintenir la confiance en cas d’incident numérique. Des analyses approfondies et orientées vers l’action sont essentielles après l’incident pour éviter qu’il ne se reproduise. Et — au risque de renforcer l’évidence — les organisations informatiques doivent mettre en place des pratiques opérationnelles pour minimiser les pannes en premier lieu.</p>'}, {'', ""<p>Pourtant, même si les responsables informatiques comprennent les implications sur la confiance des clients, la fréquence des incidents continue d'augmenter. 59 % des responsables informatiques signalent une augmentation des incidents ayant un impact sur les clients, et la situation ne s'améliorera pas à moins que nous ne changions la façon dont nous observons et atténuons les problèmes dans nos applications.</p>""}, {'', '<h3>L’automatisation peut aider, mais son adoption est lente</h3>'}, {'', '<p>Malgré la menace croissante, de nombreuses organisations sont à la traîne en matière d’automatisation de la réponse aux incidents :</p>'}, {'', '<li>Plus de 70 % des responsables informatiques signalent que les tâches clés de réponse aux incidents ne sont pas encore entièrement automatisées</li>'}, {'', '<li>38 % du temps des intervenants est consacré à la gestion des processus manuels de réponse aux incidents</li>'}, {'', '<li>Les organisations dotées de processus manuels mettent en moyenne trois heures et 58 minutes pour résoudre les incidents ayant un impact sur les clients, contre deux heures et 40 minutes pour celles dotées de processus automatisés.</li>'}, {'', '<p>Il n’est pas nécessaire d’être un expert en informatique pour savoir que passer près de la moitié de son temps sur des processus manuels est un gaspillage de ressources. Et les entreprises qui ont automatisé leurs opérations mettent encore près de trois heures à résoudre les incidents. Pourquoi la réponse aux incidents est-elle toujours aussi lente ?</p>'}, {'', '<p>Il ne s’agit pas seulement d’automatiser les processus. Nous devons également accélérer l’automatisation des décisions, en nous appuyant sur une compréhension approfondie de l’état des applications et de l’infrastructure.</p>'}, {'', '<h3>IA causale pour DevOps : le chaînon manquant</h3>'}, {'', '<p>L’IA causale pour DevOps promet de créer un pont entre l’observabilité et la réponse automatisée aux incidents numériques. Par « IA causale pour DevOps », j’entends un logiciel de raisonnement causal qui applique l’apprentissage automatique (ML) pour capturer automatiquement les relations de cause à effet. L’IA causale a le potentiel d’aider les équipes de développement et d’exploitation à mieux planifier les modifications apportées au code, aux configurations ou aux modèles de charge, afin qu’elles puissent rester concentrées sur la réalisation des objectifs de niveau de service et d’entreprise au lieu de lutter contre les incendies.</p>'}, {'', '<p>Avec Causal AI for DevOps, de nombreuses tâches de réponse aux incidents qui sont actuellement manuelles peuvent être automatisées\xa0:</p>'}, {'', '<li>Lorsque les entités de service sont dégradées ou défaillantes et affectent d’autres entités qui composent les services métier, un logiciel de raisonnement causal fait apparaître la relation entre le problème et les symptômes qu’il provoque.</li>'}, {'', ""<li>L'équipe responsable du service défaillant ou dégradé est immédiatement informée afin de pouvoir se mettre au travail pour résoudre le problème. Certains problèmes peuvent être résolus automatiquement.</li>""}, {'', ""<li>Des notifications peuvent être envoyées aux utilisateurs finaux et aux autres parties prenantes, leur faisant savoir que leurs services sont affectés, ainsi qu'une explication des raisons pour lesquelles cela s'est produit et du moment où les choses reviendront à la normale.</li>""}, {'', '<li>La documentation post-mortem est générée automatiquement.</li>'}, {'', ""<li>Il n'existe plus de processus de tri complexes qui nécessiteraient autrement l'intervention de plusieurs équipes et responsables. Les incidents et pannes numériques sont réduits et l'analyse des causes profondes est automatisée, ce qui permet aux équipes DevOps de passer moins de temps à résoudre les problèmes et plus de temps à expédier le code.</li>""}, {""<h3>Il est temps d'automatiser la réponse aux incidents</h3>"", ''}, {'', ""<p>Il est temps de passer d'une réponse manuelle aux incidents à une réponse automatisée. L'IA causale pour DevOps peut aider les équipes à prévenir les pannes, à réduire les risques, à diminuer les coûts et à instaurer une confiance durable des clients. C'est un sujet qui nous tient à cœur chez Causely, où nous construisons une plateforme de raisonnement causal pour aider les organisations à garantir la fiabilité continue des applications et à éliminer le dépannage humain. Vous pouvez en savoir plus sur nous et notre plateforme sur Causely.io.</p>""}]"
CISA : une faille critique de Jenkins exploitée dans des attaques de ransomware,"[{'', '<p>Une faille de sécurité critique dans le populaire serveur d’automatisation open source Jenkins figure sur la liste des vulnérabilités connues de la Cybersecurity and Infrastructure Security Agency (CISA) après avoir été exploitée dans un ransomware et d’autres attaques.</p>'}, {'', ""<p>L'agence de cybersécurité la plus importante du gouvernement américain a ajouté le bug - identifié comme CVE-2024-23897 et avec un score de gravité CVSS de 9,8 sur 10 - à son catalogue de vulnérabilités exploitées connues, ce qui met en garde les agences fédérales contre la nécessité de sécuriser leurs serveurs Jenkins, bien que la CISA ait également averti toutes les organisations exploitant de tels serveurs de s'assurer qu'ils sont sécurisés.</p>""}, {'', ""<p>La vulnérabilité dans l'interface de ligne de commande (CLI) de Jenkins est une faille de parcours de chemin causée par une faiblesse dans l'analyseur de commandes args4j, qui peut être exploitée par des acteurs malveillants pour obtenir l'exécution de code à distance (RCE) et pour lire des fichiers arbitraires sur le serveur Jenkins.</p>""}, {'', ""<p>Le serveur Jenkins basé sur Java, maintenu par CloudBees et la communauté Jenkins, est utilisé par les développeurs dans leur intégration continue et leur développement continu (CI/CD) et automatise les étapes du cycle de vie du développement logiciel, y compris le développement et le déploiement. L'outil, soutenu par des sociétés telles qu'Amazon Web Services (AWS), GitHub et JFrog, compte plus d'un million d'utilisateurs.</p>""}, {'', '<h3>Une faille devient publique et est corrigée</h3>'}, {'', '<p>Yaniv Nizry, chercheur en vulnérabilité chez SonarSource, développeur de logiciels open source, a été le premier à signaler cette faille de sécurité en janvier, soulignant qu’avec une part de marché d’environ 44 %, « la popularité de Jenkins est évidente. Cela signifie que l’impact potentiel des vulnérabilités de sécurité de Jenkins est important ».</p>'}, {'', ""<p>Un correctif a été publié en janvier avec Jenkins 2.442, LTS 2.426.3 en désactivant la fonctionnalité d'analyse de commandes, les responsables expliquant que Jenkins est livré avec une CLI intégrée pour accéder à Jenkins à partir d'un environnement de script ou de shell. Il utilise la bibliothèque args4j pour analyser les arguments et les options de commande sur le contrôleur Jenkins lors du traitement des commandes CLI.</p>""}, {'', ""<p>« Cet analyseur de commandes possède une fonctionnalité qui remplace un caractère @ suivi d'un chemin de fichier dans un argument par le contenu du fichier (expandAtFiles) », ont écrit les responsables. « Cela permet aux attaquants de lire des fichiers arbitraires sur le système de fichiers du contrôleur Jenkins en utilisant l'encodage de caractères par défaut du processus du contrôleur Jenkins. »</p>""}, {'', '<h3>Les cybercriminels se lancent</h3>'}, {'', ""<p>Des preuves de concept (POC) auraient commencé à émerger peu après la publication du correctif par Jenkins. Les chercheurs de Trend Micro ont signalé en mars qu'ils avaient observé plusieurs attaques exploitant la faille, 28 des 44 adresses IP sources des attaques provenant des Pays-Bas, les autres de pays comme Singapour et l'Allemagne. La plupart des cibles se trouvaient en Afrique du Sud.</p>""}, {'', '<p>Ils ont également constaté des cas où des exploits RCE étaient échangés.</p>'}, {'', '<p>D’autres chercheurs ont découvert des attaques plus récentes exploitant la vulnérabilité de Jenkins. En juillet, CloudSEK a signalé une attaque de la chaîne d’approvisionnement contre Born Group, une agence internationale de conseil et d’expérience client basée à New York, par le groupe de menaces IntelBroker, spécialisé dans les violations de données, l’extorsion et la vente d’accès à des systèmes compromis.</p>'}, {'', ""<p>Les chercheurs de CloudSEK ont déclaré qu'IntelBroker avait exploité CVE-2024-23897 pour obtenir un accès initial via un serveur Jenkins vulnérable avant d'accéder au référentiel GitHub de Born Group.</p>""}, {'', '<h3>Attaque de ransomware en Inde</h3>'}, {'', ""<p>Plus tôt ce mois-ci, les chercheurs du Juniper Threat Lab ont écrit sur une attaque de ransomware contre Brontoo Technology Solutions, une société de services et de conseil informatique en Inde qui collabore avec C-Edge Technologies, une coentreprise entre Tata Consultancy Services et la State Bank of India. Juniper et CloudSEK ont attribué l'attaque au groupe de ransomware RansomXXX, qui existe depuis 2018, opère depuis la Russie ou l'Europe de l'Est et cible les agences gouvernementales, les banques et les organismes de santé.</p>""}, {'', '<p>L’attaque a perturbé les paiements de détail dans les banques indiennes. Une fois encore, les acteurs malveillants ont obtenu un accès initial à l’environnement informatique de Brontoo via la vulnérabilité Jenkins.</p>'}, {'', '<p>« Cette vulnérabilité permet à un utilisateur non authentifié de lire les premières lignes de n’importe quel fichier du système de fichiers », ont écrit les chercheurs. « Elle existe parce que la fonction intégrée de l’analyseur de commandes n’a pas été désactivée par défaut. Si elle est exploitée avec succès, cette vulnérabilité peut entraîner la fuite de fichiers et de données sensibles, l’exécution potentielle de commandes et permettre une attaque par ransomware. »</p>'}]"
Changer le visage de la sécurité du développement logiciel : CodeOps,"[{'', '<p>Le développement de logiciels est devenu un véritable champ de mines. Tout au long du cycle de développement de logiciels, environ 60 % des entreprises américaines seront confrontées à des attaques de sécurité de la chaîne d’approvisionnement. Selon Gartner, cela représente une augmentation à trois chiffres de ce type d’attaques au cours des dernières années. Pour atténuer ce problème, les entreprises ont opté pour des stratégies DevSecOps, en s’orientant vers des principes qui implémentent des protocoles de sécurité dans le logiciel le plus tôt possible dans le processus.</p>'}, {'', ""<p>Avec cette mentalité de sécurité, un cadre de développement logiciel étroitement lié à DevSecOps a émergé : CodeOps. Pour garantir le plus haut niveau de sécurité possible à chaque étape du processus de développement, les organisations doivent savoir ce qu'est CodeOps, comment il fonctionne et comment il contribue à sécuriser les logiciels nouveaux et en développement.</p>""}, {""<h3>Qu'est-ce que CodeOps ?</h3>"", ''}, {'', ""<p>CodeOps est une approche de pointe du développement logiciel qui utilise du code réutilisable et détenu en interne pour rationaliser le processus de développement. Basé sur l'IA générative (GenAI) et exploitant le codage modulaire, CodeOps accélère le développement et encourage l'innovation. Grâce à une efficacité et une sécurité accrues, les produits numériques peuvent évoluer et s'améliorer en permanence.</p>""}, {'', ""<p>Les grandes entreprises et organisations telles que l'US Air Force, confrontées à des problèmes de sécurité à haut risque, ont commencé à utiliser cette technologie innovante pour créer rapidement des applications et des logiciels essentiels à leur mission. L'exploitation de GenAI pour générer des composants de code basés sur des spécifications préexistantes et l'utilisation de concepts de codage modulaires permettent aux organisations de créer du code réutilisable et interne, qui constitue la base de CodeOps.</p>""}, {'', '<p>Pour la plupart des entreprises, l’aspect le plus attrayant est l’efficacité. Les spécifications réutilisables et les composants de code pré-certifiés permettent aux entreprises de réduire considérablement le temps de développement, ce qui garantit une mise sur le marché plus rapide des produits numériques. La flexibilité garantit un processus de développement rationalisé sans compromettre la sécurité, ce qui permet aux équipes de s’adapter rapidement aux nouvelles technologies et aux nouvelles demandes à mesure de leur évolution. Grâce à l’automatisation, une grande partie du codage répétitif a été retirée des épaules d’une entreprise, les développeurs peuvent désormais se concentrer sur l’idéation et la conception de niveau supérieur.</p>'}, {'', '<h3>Comment CodeOps sécurise-t-il les logiciels\xa0?</h3>'}, {'', '<p>Si une sécurité rigoureuse semble être une exigence évidente pour les applications bancaires contenant des données financières importantes, les applications de santé contenant des informations médicales sensibles ou les logiciels militaires traitant des renseignements hautement classifiés, elle n’est pas moins cruciale pour les applications à vocation plus générale. Toutes les applications traitent des données sous une forme ou une autre ; par conséquent, toutes les applications doivent fonctionner avec une sécurité rigoureuse qui protège l’intégrité des données et la confidentialité des utilisateurs. Même dans les entreprises dont les données sont moins sensibles, les répercussions des failles de sécurité peuvent être extrêmement coûteuses, tant sur le plan financier que sur la réputation de la marque.</p>'}, {'', '<p>Voici les moyens par lesquels CodeOps peut garantir une meilleure sécurité\xa0:</p>'}, {'', ""<li>Tirer parti des modules de code éprouvés. L'un des aspects clés de CodeOps est de s'appuyer sur le code existant pour gagner du temps, et l'utilisation du code existant signifie que tous les modules sont pré-approuvés et conformes aux directives de sécurité existantes. Tous les nouveaux composants doivent être sécurisés, pré-sélectionnés et pré-testés sur l'ensemble de la pile (échafaudages, écrans, connecteurs, modèles, déployeurs, etc.), ce qui signifie qu'il n'est pas nécessaire de recertifier individuellement les morceaux de code pour les nouveaux projets avant qu'ils ne soient utilisés.</li>""}, {'', ""<li>Audits de code de routine. Lors du développement de logiciels avec CodeOps, l'intégralité de la base de code est entièrement vérifiable, ce qui permet aux équipes de sécurité de déterminer que le code déployé : est conforme aux mesures de sécurité internes telles que les configurations de ports réseau et le principe du moindre accès ; ne porte atteinte à aucun droit de propriété intellectuelle ; empêche les problèmes de sécurité connus via des bibliothèques importées ou autres de corrompre les logiciels.</li>""}, {'', '<li>Conforme aux mesures de sécurité internes telles que les configurations de ports réseau et le principe du moindre accès</li>'}, {'', '<li>Ne porte atteinte à aucun droit de propriété intellectuelle</li>'}, {'', '<li>Empêche les problèmes de sécurité connus via des bibliothèques importées ou similaires de corrompre les logiciels.</li>'}, {'', '<li>Utiliser les mesures de sécurité les plus récentes. Les meilleures pratiques en matière de développement de logiciels doivent évoluer au rythme des nouvelles technologies. De même, à mesure que de nouvelles tendances et techniques émergent dans le domaine de la sécurité logicielle, les modules de code sont mis à jour pour permettre aux organisations de mettre en œuvre plus facilement les dernières exigences de sécurité. Cela garantit une conformité cohérente et fiable aux normes de sécurité, protégeant les données à chaque étape du développement logiciel.</li>'}, {'', '<p>En fin de compte, avec l’adoption rapide de GenAI, le code sera de plus en plus écrit à la demande par des machines plutôt que par des humains. Même si cela peut sembler peu sûr à première vue, le fait est que CodeOps permet une telle approche. CodeOps est axé sur la réutilisation, pas seulement des composants logiciels sur mesure, mais la réutilisation de tout logiciel antérieur. Il permet aux organisations d’auditer, d’approuver et de stocker le code créé à partir de n’importe quelle source dans leurs catalogues privés. Ce code peut ensuite être facilement découvert au stade de la spécification afin que les efforts ne soient pas dupliqués.</p>'}, {'', '<p>Essentiellement, CodeOps et GenAI sont alignés : CodeOps traite le code produit à l’aide de GenAI comme une autre source de code et se concentre sur la résolution des problèmes de sécurité et de découvrabilité inhérents à la réutilisation des actifs existants.</p>'}]"
Libérez-vous des ransomwares : sécurisez votre CI/CD contre les RaaS,"[{'', ""<p>Pour les développeurs, peu de choses sont plus précieuses que leur base de code. Pourtant, une tendance effrayante émerge : les attaques de type Ransomware-as-a-Service (RaaS) ciblant les pipelines CI/CD, prenant en otage du code précieux. En 2023, le nombre d'attaques de ransomware a augmenté de près de 70 %, transformant cette menace autrefois théorique en une réalité bien réelle pour les équipes de développement de logiciels du monde entier.</p>""}, {'', '<p>Avant de nous plonger dans les tactiques RaaS qui exploitent les pipelines CI/CD, prenons du recul et comprenons le cycle de vie typique des ransomwares.</p>'}, {'', ""<li>Infection\xa0: les attaquants s'infiltrent dans votre système, souvent via des dépendances malveillantes, des vulnérabilités de script ou des serveurs de build compromis</li>""}, {'', '<li>Mouvement latéral : ils explorent furtivement votre réseau, à la recherche de ressources critiques et de référentiels de code</li>'}, {'', '<li>Cryptage : une fois intégrée, la charge utile du ransomware entre en action, cryptant vos fichiers et bases de code précieux</li>'}, {'', ""<li>Extorsion : le rideau se lève sur le véritable motif : une demande de rançon, souvent accompagnée d'un compte à rebours et de menaces terribles de perte permanente de données ou d'exposition publique.</li>""}, {'', '<h3>Comment les ransomwares en tant que service ciblent les pipelines CI/CD</h3>'}, {'', '<p>Cette vulnérabilité résulte d’une confluence de facteurs :</p>'}, {'', ""<ol>Dépendance accrue aux dépendances tierces : le développement de logiciels modernes repose largement sur un vaste écosystème de bibliothèques tierces open source et commerciales. Bien que cela soit pratique, cela introduit une surface d'attaque critique. Les acteurs malveillants peuvent intégrer des charges utiles de ransomware dans des dépendances apparemment légitimes, les transformant en chevaux de Troie pour infiltrer des communautés de développeurs entières. Un rapport récent de Sonatype a révélé que le nombre de packages open source malveillants a triplé en 2023, soulignant le risque généralisé posé par les dépendances compromises.</ol>""}, {'', ""<li>Dépendance accrue aux dépendances tierces : le développement de logiciels modernes repose largement sur un vaste écosystème de bibliothèques tierces open source et commerciales. Bien que cela soit pratique, cela introduit une surface d'attaque critique. Les acteurs malveillants peuvent intégrer des charges utiles de ransomware dans des dépendances apparemment légitimes, les transformant en chevaux de Troie pour infiltrer des communautés de développeurs entières. Un rapport récent de Sonatype a révélé que le nombre de packages open source malveillants a triplé en 2023, soulignant le risque généralisé posé par les dépendances compromises.</li>""}, {''}, {'', ""<li>Paquets trojanisés : les attaquants injectent des charges utiles de ransomware dans des logiciels open source ou commerciaux populaires ou largement utilisés. L'attaque de la chaîne d'approvisionnement de SolarWinds en 2023, où les attaquants ont compromis un serveur de création de logiciels pour injecter du code malveillant dans les mises à jour, en sert d'exemple.</li>""}, {'', ""<li>Dépendances invisibles : 80 % du code des applications modernes est du code open source et, comme le rapportent les résultats, 95 % des vulnérabilités se trouvent dans les dépendances transitives. La plupart des menaces de sécurité, y compris les vulnérabilités connues, se cachent dans la mer de dépendances transitives. Le problème est que les développeurs ont rarement une visibilité sur leur arborescence de dépendances ou sur sa profondeur. Log4Shell est un exemple célèbre qui a eu un impact sur 93 % des environnements cloud d'entreprise !</li>""}, {'', ""<ol>Vulnérabilités d'automatisation : les pipelines CI/CD prospèrent grâce à l'automatisation, mais les scripts et configurations d'automatisation peuvent contenir des erreurs de syntaxe, des paramètres de configuration non sécurisés et des contrôles d'accès inadéquats qui peuvent fournir des points d'appui aux attaquants pour compromettre les processus de construction et manipuler le code. En 2022, GitHub a signalé une vulnérabilité dans sa plateforme Actions qui permettait un accès non autorisé aux référentiels, illustrant l'impact potentiel de telles failles de script. Attaques par injection : les attaquants exploitent les erreurs de syntaxe ou les paramètres de configuration non sécurisés dans les scripts CI/CD pour injecter du code malveillant ou manipuler la construction. Escalade des privilèges : en exploitant les vulnérabilités des outils de construction ou de l'infrastructure sous-jacente, les attaquants peuvent augmenter leurs privilèges au sein du pipeline, accédant ainsi à des ressources sensibles et</ol>""}, {'', ""<li>Vulnérabilités d'automatisation : les pipelines CI/CD prospèrent grâce à l'automatisation, mais les scripts et configurations d'automatisation peuvent contenir des erreurs de syntaxe, des paramètres de configuration non sécurisés et des contrôles d'accès inadéquats qui peuvent fournir des points d'appui aux attaquants pour compromettre les processus de construction et manipuler le code. En 2022, GitHub a signalé une vulnérabilité dans sa plateforme Actions qui permettait un accès non autorisé aux référentiels, illustrant l'impact potentiel de telles failles de script. Attaques par injection : les attaquants exploitent les erreurs de syntaxe ou les paramètres de configuration non sécurisés dans les scripts CI/CD pour injecter du code malveillant ou manipuler la construction. Escalade des privilèges : en exploitant les vulnérabilités des outils de construction ou de l'infrastructure sous-jacente, les attaquants peuvent augmenter leurs privilèges au sein du pipeline, accédant ainsi à des ressources sensibles et</li>""}, {'', '<li>Attaques par injection : les attaquants exploitent les erreurs de syntaxe ou les paramètres de configuration non sécurisés dans les scripts CI/CD pour injecter du code malveillant ou manipuler la build.</li>'}, {'', ""<li>Escalade des privilèges : en exploitant les vulnérabilités des outils de création ou de l'infrastructure sous-jacente, les attaquants peuvent élever leurs privilèges au sein du pipeline, accédant ainsi à des ressources sensibles et</li>""}, {''}, {'', ""<ol>Visibilité et contrôle limités : la nature rapide des déploiements CI/CD dépasse souvent les outils traditionnels de surveillance de la sécurité et d'analyse des journaux qui ont du mal à suivre le rythme des processus de construction en constante évolution, créant ainsi des angles morts que les attaquants peuvent exploiter. 68 % des organisations rencontrent des vulnérabilités dans leurs applications pendant les phases de construction et de déploiement, ce qui reflète les défis liés à la sécurisation de ces environnements dynamiques.</ol>""}, {'', ""<li>Visibilité et contrôle limités : la nature rapide des déploiements CI/CD dépasse souvent les outils traditionnels de surveillance de la sécurité et d'analyse des journaux qui ont du mal à suivre le rythme des processus de construction en constante évolution, créant ainsi des angles morts que les attaquants peuvent exploiter. 68 % des organisations rencontrent des vulnérabilités dans leurs applications pendant les phases de construction et de déploiement, ce qui reflète les défis liés à la sécurisation de ces environnements dynamiques.</li>""}, {''}, {'', '<li>Exploits zero-day : les attaquants exploitent les vulnérabilités zero-day des serveurs de build ou des plateformes CI/CD pour obtenir un accès non autorisé et déployer des charges utiles de ransomware</li>'}, {'', ""<li>Mouvement latéral : une fois qu'un point d'appui est établi, les attaquants se déplacent latéralement au sein de l'infrastructure CI/CD, compromettant ainsi des ressources et du code supplémentaires</li>""}, {''}, {'', ""<p>Ces tactiques mettent en évidence la sophistication croissante des acteurs du RaaS. Leur impact peut être dévastateur, allant du cryptage des données et des demandes de rançon à l'atteinte à la réputation et à la paralysie opérationnelle.</p>""}, {'', ""<h3>Création de pipelines à l'épreuve des rançons</h3>""}, {'', '<p>En adoptant une mentalité DevSecOps proactive, nous pouvons repousser les attaques RaaS et protéger notre code. Voici votre boîte à outils\xa0:</p>'}, {'', '<ol>Shift Security Left : n’attendez pas le déploiement pour resserrer les vis. Intégrez la sécurité tout au long du cycle de vie du développement logiciel (SDLC). Tirez parti de l’analyse de la composition logicielle (SCA) et de la création de la nomenclature logicielle (SBOM), qui vous aident à examiner les dépendances pour détecter les vulnérabilités et à conserver un enregistrement transparent de chaque composant logiciel de votre pipeline.</ol>'}, {'', '<li>Shift Security Left : n’attendez pas le déploiement pour resserrer les vis. Intégrez la sécurité tout au long du cycle de vie du développement logiciel (SDLC). Tirez parti de l’analyse de la composition logicielle (SCA) et de la création de la nomenclature logicielle (SBOM), qui vous aident à examiner les dépendances pour détecter les vulnérabilités et à conserver un enregistrement transparent de chaque composant logiciel de votre pipeline.</li>'}, {''}, {'', '<ol>Vigilance continue : vos pipelines ne sont pas des entités statiques, ce sont des écosystèmes vivants qui exigent une surveillance et une journalisation constantes de l’activité des pipelines. Recherchez les anomalies, les comportements suspects et les tentatives d’accès non autorisées. Considérez cela comme un faucon de la cybersécurité qui surveille en permanence vos pipelines, détectant les menaces avant qu’elles ne prennent racine.</ol>'}, {'', '<li>Vigilance continue : vos pipelines ne sont pas des entités statiques, ce sont des écosystèmes vivants qui exigent une surveillance et une journalisation constantes de l’activité des pipelines. Recherchez les anomalies, les comportements suspects et les tentatives d’accès non autorisées. Considérez cela comme un faucon de la cybersécurité qui surveille en permanence vos pipelines, détectant les menaces avant qu’elles ne prennent racine.</li>'}, {''}, {'', ""<ol>Forteresse de contrôle d'accès\xa0: minimisez les accès inutiles à votre environnement CI/CD. Appliquez des contrôles d'accès stricts basés sur les rôles et le principe du moindre privilège. Utilisez des outils de contrôle d'accès pour gérer étroitement les rôles et les autorisations des utilisateurs, en veillant à ce que seuls les utilisateurs autorisés puissent interagir avec les ressources sensibles. N'oubliez pas que la vulnérabilité GitHub de 2022 a exposé les dangers d'un contrôle d'accès laxiste dans les environnements CI/CD.</ol>""}, {'', ""<li>Forteresse de contrôle d'accès\xa0: minimisez les accès inutiles à votre environnement CI/CD. Appliquez des contrôles d'accès stricts basés sur les rôles et le principe du moindre privilège. Utilisez des outils de contrôle d'accès pour gérer étroitement les rôles et les autorisations des utilisateurs, en veillant à ce que seuls les utilisateurs autorisés puissent interagir avec les ressources sensibles. N'oubliez pas que la vulnérabilité GitHub de 2022 a exposé les dangers d'un contrôle d'accès laxiste dans les environnements CI/CD.</li>""}, {''}, {'', '<ol>Automatisation avec garde-fous : l’automatisation est votre amie, mais ne la laissez pas de côté. Sécurisez vos pratiques de création de scripts en adoptant des outils d’analyse statique et testez vos scripts de build pour détecter les vulnérabilités. Mettez en œuvre des systèmes automatisés de détection des anomalies, par exemple pour détecter les écarts suspects dans le comportement du pipeline avant qu’ils ne s’aggravent.</ol>'}, {'', '<li>Automatisation avec garde-fous : l’automatisation est votre amie, mais ne la laissez pas de côté. Sécurisez vos pratiques de création de scripts en adoptant des outils d’analyse statique et testez vos scripts de build pour détecter les vulnérabilités. Mettez en œuvre des systèmes automatisés de détection des anomalies, par exemple pour détecter les écarts suspects dans le comportement du pipeline avant qu’ils ne s’aggravent.</li>'}, {''}, {'', ""<ol>Infrastructure immuable : envisagez des pratiques d'infrastructure immuables, où l'infrastructure est provisionnée et configurée sous forme de code, puis jamais modifiée. Cette approche, défendue par des outils comme Terraform, garantit des environnements cohérents et sécurisés en minimisant l'intervention humaine et les erreurs de configuration potentielles.</ol>""}, {'', ""<li>Infrastructure immuable : envisagez des pratiques d'infrastructure immuables, où l'infrastructure est provisionnée et configurée sous forme de code, puis jamais modifiée. Cette approche, défendue par des outils comme Terraform, garantit des environnements cohérents et sécurisés en minimisant l'intervention humaine et les erreurs de configuration potentielles.</li>""}, {''}, {'', '<p>L’émergence du RaaS ciblant les pipelines CI/CD exige un changement fondamental dans les pratiques de développement logiciel. Les mesures de sécurité réactives traditionnelles ne suffisent plus dans ce nouveau paysage de menaces. Au lieu de cela, une approche DevSecOps proactive, pilotée par des outils et des méthodologies robustes, est primordiale. Si aucun des points de cet article n’était suffisamment alarmant, terminons avec quelques citations de Christopher Wray, directeur du FBI : « Dans le cyberespace, les menaces ne semblent qu’évoluer et les enjeux n’ont jamais été aussi élevés. Et au cours des dernières années, nous avons vu de plus en plus de cybercriminels utiliser des ransomwares contre le secteur des infrastructures critiques aux États-Unis. Les victimes ciblées par le groupe Hive ont renforcé ce que nous savons : les groupes de ransomware ne font pas de discrimination. Ils s’en sont pris aux grandes et aux petites entreprises. »</p>'}]"
Les équipes AppSec et DevOps confrontées à des problèmes de sécurité,"[{'', ""<p>Selon un rapport d'ESG, les équipes de sécurité des applications (AppSec) sont confrontées à une pression accrue à mesure que les organisations accélèrent leur adoption des pratiques DevSecOps.</p>""}, {'', '<p>La tendance vers l’intégration des équipes de développement, de sécurité et d’exploitation se développe rapidement, l’adoption de DevSecOps devant passer de 38 % aujourd’hui à 48 % au cours des deux prochaines années.</p>'}, {'', '<p>Cependant, ce rythme accéléré crée une pression considérable sur des équipes de sécurité déjà surchargées et sous-dotées en ressources.</p>'}, {'', '<p>Le rapport indique également que l’essor de l’IA générative (GenAI) ajoute une couche supplémentaire de complexité, l’intégration posant des défis en matière de sécurité.</p>'}, {'', ""<p>La majorité (97 %) des organisations interrogées ont déclaré qu'elles utilisaient ou prévoyaient de mettre en œuvre l'IA générative dans leurs processus de développement logiciel, mais les équipes de sécurité expriment de profondes inquiétudes quant à la protection de l'utilisation de l'IA.</p>""}, {'', '<h3>Manque de visibilité</h3>'}, {'', '<p>Un problème clé qui exacerbe ces défis est le manque de visibilité entre les équipes de sécurité et de développement.</p>'}, {'', ""<p>L'enquête a révélé que 42 % des personnes interrogées peuvent tester et corriger leur code de manière indépendante, sans faire appel aux équipes de sécurité, ce qui entraîne des failles de sécurité et souligne le besoin urgent d'une meilleure intégration.</p>""}, {'', ""<p>Melinda Marks, directrice de la pratique de la cybersécurité pour ESG, a encouragé les équipes AppSec à discuter avec les développeurs et les équipes DevOps pour en savoir plus sur leurs flux de travail, leurs processus, leur sensibilisation à la sécurité et les tests de sécurité qu'ils ont mis en place, et à s'aligner sur des objectifs pour sécuriser leurs applications.</p>""}, {'', ""<p>« Ces éléments devraient se chevaucher dans des domaines tels que la disponibilité des applications, la garantie du service client et la protection des données de l'entreprise et des clients », a-t-elle déclaré.</p>""}, {'', '<p>Deuxièmement, réfléchissez aux moyens d’intégrer les outils et processus de sécurité dans la façon dont les développeurs travaillent, notamment en définissant des politiques et en automatisant les tests dès le début des processus de développement.</p>'}, {'', ""<p>« Troisièmement, assurez-vous que la sécurité dispose du contrôle et de la visibilité nécessaires pour déployer des outils et des processus de sécurité qui soutiennent le développement afin qu'ils puissent gérer efficacement les risques et résoudre les problèmes de sécurité », a déclaré Marks.</p>""}, {'', ""<p>Karthik Swarnam, responsable de la sécurité et de la confiance chez ArmorCode, a déclaré que pour gérer efficacement le rythme et l'échelle croissants de DevSecOps, même avec des ressources limitées, les équipes AppSec devraient exploiter les capacités de l'IA pour des tests de sécurité améliorés.</p>""}, {'', '<p>« L’automatisation du pipeline DevSecOps est essentielle pour maintenir l’efficacité sans sacrifier la sécurité », a-t-il déclaré. « Les équipes doivent également privilégier l’utilisation d’outils qui offrent une visibilité sur les risques de sécurité et aident à hiérarchiser les efforts de remédiation. »</p>'}, {'', ""<p>Il a déclaré qu'il est essentiel que les équipes restent concentrées sur les tâches critiques, telles que l'identification des vulnérabilités nécessitant une attention immédiate, la détermination des déficiences spécifiques à corriger et l'identification des domaines dans lesquels les développeurs ont besoin d'une formation ciblée, évitant ainsi l'inefficacité de la formation sur tous les sujets possibles.</p>""}, {'', ""<p>Marks a déclaré que la sécurité veut aider à permettre l'utilisation de l'IA car elle contribuera à la productivité, mais elle doit s'assurer qu'elle est sécurisée car en cas d'incident, comme un partage inapproprié de données ou l'introduction de vulnérabilités par l'utilisation de l'IA, cela peut constituer un revers pour l'adoption de l'IA.</p>""}, {'', '<p>« Nous ne voulons pas non plus que les mesures de sécurité et les mesures informatiques bloquent l’utilisation de l’IA, car cela entrave la capacité des entreprises à utiliser ses avantages », a-t-elle déclaré.</p>'}, {'', '<p>Swarnam a déclaré que pour combler efficacement les failles de sécurité, les entreprises doivent améliorer la visibilité et la communication entre les équipes de sécurité et de développement.</p>'}, {'', '<p>« Une stratégie clé consiste à intégrer ces équipes dans un programme complet de gestion des vulnérabilités », a-t-il déclaré.</p>'}, {'', ""<p>La fourniture de tableaux de bord au niveau de l'entreprise et de la direction, ainsi que de rapports de visibilité qui mesurent l'état de la sécurité, permet une priorisation claire des efforts de correction.</p>""}, {'', '<p>Ces rapports doivent mettre en évidence « ce qui compte » le plus, garantissant que les failles de sécurité critiques sont rapidement traitées.</p>'}, {'', ""<p>« L'intégration de ces outils dans les systèmes de gestion des flux de travail, associée à des capacités de priorisation qui mettent l'accent sur l'efficacité, garantit que les équipes de sécurité et de développement sont alignées dans leurs efforts pour combler les lacunes et renforcer la posture de sécurité globale de l'organisation », a déclaré Swarnam.</p>""}]"
La Maison Blanche va dépenser 11 millions de dollars pour étudier l'utilisation des logiciels open source,"[{'', '<p>Le renforcement de la sécurité autour des logiciels open source est un élément clé des efforts plus vastes de la Maison Blanche en matière de cybersécurité depuis que le président Biden a publié son décret visant à améliorer la posture de sécurité des États-Unis en mai 2021, quelques mois seulement après son entrée en fonction.</p>'}, {'', '<p>L’administration Biden et le ministère de la Sécurité intérieure (DHS) investissent désormais 11 millions de dollars dans le lancement d’un programme visant à évaluer l’utilisation de logiciels open source dans les environnements d’infrastructures critiques et comment mieux les protéger.</p>'}, {'', '<p>S’exprimant lors du salon Def-Con à la fin de la semaine dernière à Las Vegas, le directeur national de la cybersécurité, Harry Coker Jr., a annoncé le projet de lancement de l’initiative gouvernementale pour la prévalence des logiciels open source, à laquelle participent les laboratoires nationaux du pays.</p>'}, {'', '<p>« Nous savons que l’open source est à la base de notre infrastructure numérique, et il est essentiel qu’en tant que gouvernement, nous contribuions à la communauté dans le cadre de nos efforts plus larges en matière d’infrastructure », a déclaré Coker lors de la conférence.</p>'}, {'', '<p>Il a ajouté que même si le gouvernement crée l’initiative et y consacre de l’argent, il aura besoin de la participation de professionnels de la cybersécurité.</p>'}, {'', '<p>« Ces propositions politiques reposent sur le dévouement des chercheurs et sur leur volonté de partager librement leurs découvertes afin de travailler », a déclaré Coker. « Dans nos discussions sur l’élaboration d’un régime de responsabilité logicielle, nous cherchons également de plus en plus à tirer parti de cette communauté unique dans le cadre de solutions politiques novatrices. »</p>'}, {'', '<p>L’un des éléments clés de l’initiative de l’administration Biden en matière de cybersécurité pour améliorer la cybersécurité du pays consiste à transférer la responsabilité des utilisateurs de la technologie vers ses créateurs, par le biais d’efforts tels que son message logiciel Secure By Design. Coker a réitéré cela lors de son discours, en expliquant à l’auditoire d’experts en cybersécurité la nécessité de « faire peser davantage de responsabilités en matière de cybersécurité sur les acteurs les plus compétents de l’écosystème. Cela concerne les producteurs de technologie, oui, et certainement le gouvernement fédéral. Mais cela concerne également vous tous… Je sais que le même ensemble de valeurs qui motive la divulgation responsable des vulnérabilités vous conduira à continuer à intensifier vos efforts pour la protection d’Internet. »</p>'}, {'', '<p>Le pouvoir du gouvernement n’est pas illimité, a-t-il déclaré. Le président ne peut pas résoudre les problèmes en émettant simplement un ordre. Coker a fait remarquer que le gouvernement et l’industrie technologique sont au courant depuis des décennies des failles de sécurité du Border Gateway Protocol, mais qu’une grande partie du trafic Internet américain reste vulnérable au piratage. Il en va de même pour l’utilisation de langages de programmation à mémoire sécurisée comme Rust et Go pour éliminer un pourcentage important de vulnérabilités trouvées dans les logiciels actuels.</p>'}, {'', '<p>« Pourtant, les logiciels essentiels qui sous-tendent notre société sont écrits en C, simplement parce que c’est pratique », a-t-il déclaré. « La « tragédie des biens communs » autour du développement de logiciels open source est un phénomène bien connu ; pourtant, des logiciels vitaux sont maintenus par de minuscules groupes de bénévoles qui travaillent avec un budget très serré. »</p>'}, {'', ""<p>Katie Teitler-Santullo, stratège en cybersécurité chez OX Security, a déclaré que l'efficacité d'un programme comme l'Open Source Software Prevalence Initiative était incertaine.</p>""}, {'', '<p>« D’un côté, des initiatives comme celle-ci émanant de la Maison Blanche et du DHS signalent au secteur privé qu’une surveillance accrue est en vue », a déclaré Teitler-Santullo, dont la société propose une plateforme de gestion de la sécurité des applications. « Étant donné la dépendance croissante aux logiciels open source – et aux composants open source de la plupart des logiciels – les entreprises doivent avoir une meilleure compréhension des logiciels, à toutes les étapes de leur cycle de vie. »</p>'}, {'', '<p>Pourtant, les programmes gouvernementaux de ce type ne sont assortis d’aucune garantie de faisabilité ou d’impact. De nombreuses organisations ont du mal à surveiller et à trier ce qu’elle appelle la « longue traîne des logiciels » et les équipes de sécurité et de développement d’applications ont du mal à suivre le rythme de l’évolution rapide de l’écosystème open source.</p>'}, {'', '<p>« Ce qui est incontestable, c’est l’importance pour les organisations, publiques et privées, de comprendre et d’agir sur les vulnérabilités de l’open source ainsi que sur les logiciels personnalisés construits sur des composants open source », a déclaré Teitler-Santullo. « Comprendre votre code à plusieurs niveaux et tout au long du cycle de vie du développement logiciel… n’est plus une option. Une petite vulnérabilité peut causer des dommages à grande échelle. »</p>'}, {'', '<p>Les remarques de Coker au Def-Con sont intervenues un jour après que la Maison Blanche a publié un résumé des réponses à sa demande d’informations sur ce qui devrait figurer parmi les priorités à long terme du gouvernement en matière de sécurité des logiciels open source.</p>'}, {'', '<p>La création de l’Open-Source Software Prevalence Initiative est l’une des réponses du gouvernement à ce qu’il a entendu de la part de ceux qui ont répondu à la demande d’information.</p>'}, {'', ""<p>Le rapport appelle l'administration à faire appel aux agences fédérales pour accélérer la sécurité des logiciels open source. Il s'agit notamment de développer davantage de listes de composants logiciels ainsi que de créer un bureau du programme open source du gouvernement américain. Selon le résumé, les réponses se sont concentrées sur un certain nombre de mesures, notamment la promotion de l'utilisation élargie des listes de composants logiciels (SBOM), le renforcement de la chaîne d'approvisionnement en logiciels et la sécurisation des référentiels de packages, qui ont été la cible d'acteurs malveillants cherchant à diffuser leurs codes malveillants par le biais d'organisations installant et exécutant par inadvertance ce qui semble être un logiciel légitime.</p>""}, {'', '<p>Ils ont également recommandé au gouvernement d’offrir davantage d’incitations pour utiliser des langues sans danger pour la mémoire.</p>'}, {'', '<p>« Il y a également eu un consensus sur le fait que la mise en œuvre d’une programmation sécurisée en mémoire serait beaucoup plus facile pour les nouveaux projets que pour les projets existants », selon les auteurs du rapport. « Pour ces derniers, de nombreux répondants ont soutenu l’utilisation d’une approche hiérarchisée et hiérarchisée comme moyen d’optimiser les ressources tout en se concentrant sur les projets les plus importants. »</p>'}, {'', '<p>Le lancement récent par la DARPA (Defense Advanced Research Project Agency) de son programme TRACTOR (Translating All C to Rust) pour automatiser de nombreuses tâches nécessaires à la réécriture de code C et C++ en Rust en est un exemple.</p>'}, {'', '<p>D’autres recommandations comprenaient le financement du développement d’outils et de bibliothèques pour sécuriser l’écosystème des logiciels open source, la création de partenariats public-privé au sein de la communauté, l’aide à l’élargissement du vivier de talents des développeurs, l’expansion de la coopération internationale et la recherche sur l’utilisation de l’IA, des modèles à grands langages et des techniques d’apprentissage automatique.</p>'}]"
DevSecOps : Intégration de la sécurité dans le cycle de vie DevOps,"[{'', ""<p>Tout comme un livre captivant transformé en film se déroule scène par scène, DevSecOps intègre la sécurité dans le processus DevOps, en dressant un tableau vivant de la protection à chaque étape. Intégrer la sécurité dans le flux DevOps ne consiste pas seulement à cocher des cases ; il s'agit d'intégrer la protection dans la structure de la création de logiciels, du début à la fin.</p>""}, {'', '<p>DevSecOps intègre la sécurité dans le flux de travail DevOps. Il intervient pour remédier aux failles de sécurité sur lesquelles le DevOps traditionnel trébuche souvent, en intégrant des mesures de protection du début à la fin. DevSecOps ne se contente pas de cocher des cases ; il s’agit d’intégrer la sécurité dans la création de logiciels du début à la fin, ce qui non seulement renforce la protection, mais accélère également les choses et nous permet de rester du bon côté des réglementations. Les consultants DevOps jouent un rôle clé dans ce processus, en fournissant une expertise et des conseils pour garantir que les mesures de sécurité s’alignent parfaitement sur la stratégie DevOps globale, favorisant ainsi un environnement de développement harmonieux et sécurisé.</p>'}, {'', '<h3>Comprendre DevSecOps</h3>'}, {'', ""<p>DevSecOps est une approche stratégique qui intègre la sécurité dans le pipeline DevOps plutôt que de la traiter comme une réflexion ultérieure ou un processus séparé. Passer à DevSecOps signifie que nous intégrons la sécurité directement dans le mix de développement, de sorte qu'il ne s'agit pas d'une simple vérification de dernière minute, mais d'une partie intégrante de chaque étape du déploiement de nouveaux éléments. Le principal avantage de DevSecOps est la création d'un produit final plus sécurisé, car la sécurité est une préoccupation constante tout au long du processus de développement, plutôt qu'un obstacle final à franchir.</p>""}, {'', '<h3>Principes clés de DevSecOps</h3>'}, {'', '<p>Le cœur de DevSecOps est la « sécurité en tant que code », un principe qui impose d’intégrer la sécurité dans le processus de développement logiciel. Pour que chaque version soit rigoureusement sécurisée, nous intégrons ces pratiques au cœur de notre flux CI/CD. L’automatisation est ici essentielle, car elle simplifie l’ensemble du processus de sécurité dans notre processus de développement, garantissant que nous sommes en sécurité dès le départ sans nous ralentir.</p>'}, {'', '<p>Le modèle de responsabilité partagée est un autre pilier de DevSecOps. La sécurité n’est plus le domaine exclusif d’une équipe de sécurité distincte, mais une préoccupation partagée par toutes les équipes impliquées dans le cycle de développement. En travaillant ensemble, la sécurité n’est pas simplement appliquée à la fin, mais intégrée à chaque étape du début à la fin.</p>'}, {'', '<h3>Mise en œuvre de DevSecOps dans le cycle de vie du développement</h3>'}, {'', ""<p>L'intégration de la sécurité à chaque phase du cycle de vie DevOps nécessite des outils et des pratiques spécifiques :</p>""}, {'', '<li>Planification et codage : les exigences de sécurité sont identifiées en amont et des pratiques de codage sécurisées sont adoptées. Des outils tels que les tests de sécurité statique des applications (SAST) peuvent être utilisés pour analyser le code source à la recherche de vulnérabilités de sécurité.</li>'}, {'', ""<li>Création et test : des outils de test de sécurité automatisés tels que les tests de sécurité dynamique des applications (DAST) sont intégrés au processus de création pour détecter les vulnérabilités d'exécution.</li>""}, {'', ""<li>Publication et déploiement\xa0: des contrôles de sécurité sont intégrés à l'étape de prépublication pour garantir la sécurité de l'environnement de déploiement. Des contrôles de conformité automatisés peuvent également être intégrés ici.</li>""}, {'', ""<li>Exploitation et surveillance : des outils de surveillance continue sont utilisés pour détecter et répondre aux menaces de sécurité en temps réel, garantissant ainsi une protection continue de l'application déployée.</li>""}, {'', ""<h3>Surmonter les défis liés à l'adoption de DevSecOps</h3>""}, {'', '<p>Adopter DevSecOps n’est pas sans poser quelques défis. Passer à DevSecOps signifie que nous devons abattre les murs qui ont longtemps séparé nos développeurs, nos opérateurs et nos équipes de sécurité. Il peut être difficile de trouver un équilibre entre la nécessité d’un déploiement rapide et les considérations de sécurité. Pour réussir DevSecOps, les équipes doivent améliorer leurs compétences grâce à des formations ciblées. Associer des systèmes éprouvés à des tactiques DevSecOps de pointe nécessite une approche stratégique pointue.</p>'}, {'', '<h3>Tendances futures en matière de DevSecOps</h3>'}, {'', '<p>À mesure que DevSecOps gagne en maturité, plusieurs tendances clés émergent qui devraient façonner son avenir :</p>'}, {'', '<li>IA et Machine Learning (ML) dans la sécurité automatisée : l’intégration de l’IA et du Machine Learning dans DevSecOps devient de plus en plus répandue. Les systèmes de sécurité automatisés peuvent désormais détecter et arrêter les menaces plus rapidement. Tirant parti des leçons des erreurs de sécurité précédentes, les systèmes d’IA évoluent pour se protéger de manière proactive contre les menaces émergentes avec une précision accrue.</li>'}, {'', '<li>Accent accru sur la conformité et la gouvernance : avec des réglementations de protection des données et des normes industrielles plus strictes, la conformité et la gouvernance occupent une place centrale dans DevSecOps. Des contrôles de conformité automatisés et des outils de gouvernance sont intégrés au pipeline CI/CD pour garantir que le logiciel répond aux exigences réglementaires à chaque étape du développement.</li>'}, {'', ""<li>Tout comme un film doit rester fidèle au livre dont il est tiré, la sécurité cloud-native doit adhérer étroitement aux principes DevSecOps pour vraiment fonctionner. Alors que le cloud computing continue de dominer, les pratiques de sécurité cloud-native deviennent partie intégrante de DevSecOps. L'adaptation des mesures de sécurité à la configuration cloud en constante évolution et évolutive est essentielle pour maintenir la cohérence dans un monde axé sur le cloud.</li>""}, {'', '<h3>Conclusion</h3>'}, {'', ""<p>DevSecOps facilite le développement de logiciels plus sûrs et plus efficaces. L'adoption de DevSecOps renforce la sécurité tout en améliorant l'efficacité et la fiabilité du développement logiciel. Adopter DevSecOps, c'est comme se préparer pour un marathon : il s'agit de rester agile, de s'adapter aux nouvelles technologies à la volée et de suivre le rythme d'un environnement commercial en constante évolution.</p>""}, {'', '<p>À l’avenir, DevSecOps continuera de façonner la manière dont nous créons des logiciels, restant crucial dans notre monde axé sur la technologie. En intégrant la sécurité directement dans le flux de travail de développement, DevSecOps garantit que nos logiciels sont non seulement robustes et rapides, mais également sécurisés et conformes, tout cela grâce à l’utilisation intelligente de l’IA. À l’ère numérique effrénée dans laquelle nous vivons, l’adoption de DevSecOps est essentielle pour créer une technologie robuste qui résiste à l’épreuve du temps.</p>'}]"
La DARPA se tourne vers l'IA pour transformer le code C et C++ en Rust,"[{'', ""<p>La DARPA, l'agence de recherche et développement du ministère de la Défense (DOD), s'appuiera sur les capacités émergentes de l'IA dans un nouveau programme pour relever le défi coûteux et chronophage de la réécriture du code C et C++ en Rust, dans le cadre d'une démarche conçue pour répondre à la pression exercée sur les agences fédérales et les organisations privées pour adopter des langages de programmation sûrs en mémoire.</p>""}, {'', ""<p>La DARPA (Defense Advanced Research Projects Agency) a annoncé ce mois-ci son programme Translating All C to Rust (TRACTOR), qui utilisera de grands modèles de langage (LLM) et d'autres techniques d'apprentissage automatique pour automatiser la majeure partie des tâches nécessaires pour déplacer plus de deux décennies de code hérité vers le langage plus sûr Rust.</p>""}, {'', ""<p>Le Bureau du directeur national de la cybersécurité de la Maison Blanche (ONCD) et la CISA exhortent depuis des mois les développeurs à adopter Rust ou d'autres langages modernes, tels que Python ou C#, pour mieux protéger leurs logiciels en éliminant toute une classe de vulnérabilités de sécurité de la mémoire qui représentent les vulnérabilités les plus courantes dans des langages comme C et C++.</p>""}, {'', ""<p>Ces défauts peuvent inclure des dépassements de tampon, l'utilisation de mémoire non initiée et l'utilisation après libération, qui augmente lorsqu'un programme continue d'utiliser un emplacement mémoire après qu'il a été libéré ou désalloué.</p>""}, {'', '<p>La directrice de la CISA, Jen Easterly, a déclaré à la fin de l’année dernière que jusqu’à deux tiers de toutes les vulnérabilités logicielles sont le résultat d’un manque de codage sécurisé en mémoire.</p>'}, {'', ""<h3>C'est beaucoup de code</h3>""}, {'', ""<p>Cependant, les responsables de la DARPA ont déclaré que même s'il existe un large consensus au sein de la communauté des ingénieurs logiciels sur la nécessité de langages sûrs en termes de mémoire, le problème est que C et C++ sont utilisés dans les organisations des secteurs public et privé depuis des décennies, ce qui rend la tâche de déplacer les quantités massives de ce code vers Rust considérablement difficile.</p>""}, {'', '<p>Ils ont souligné que le langage C a été créé dans les années 1970 et a été utilisé pour créer des applications pour tout, des smartphones aux véhicules spatiaux. Le DOD lui-même « dispose de systèmes de longue durée qui dépendent de manière disproportionnée de langages de programmation comme C », ont-ils écrit dans un communiqué, ajoutant qu’il fallait trouver un moyen de réécrire « le code hérité à une échelle qui corresponde à l’ampleur du problème ».</p>'}, {'', '<p>C’est là qu’intervient l’IA, selon Dan Wallach, responsable du programme TRACTOR de la DARPA.</p>'}, {'', '<p>« Vous pouvez désormais vous rendre sur n’importe quel site Web de LLM, commencer à discuter avec l’un des chatbots IA, et tout ce que vous avez à dire est « voici du code C, veuillez le traduire en code Rust idiomatique sûr », copier, coller et quelque chose sort, et c’est souvent très bon, mais pas toujours », a déclaré Wallach dans un communiqué. « Le défi de la recherche est d’améliorer considérablement la traduction automatique du C vers Rust, en particulier pour les constructions de programme les plus pertinentes. »</p>'}, {'', '<h3>Solliciter l’aide des développeurs</h3>'}, {'', ""<p>L'objectif de TRACTOR est de créer un programme qui produira la même qualité et le même style que ceux développés par un programmeur Rust qualifié. La DARPA se tourne vers la communauté des développeurs de logiciels pour l'aider à trouver ce programme en organisant des concours publics où les propositions basées sur le LLM seront testées.</p>""}, {'', ""<p>Selon Wallach, les propositions incluront probablement de nouvelles combinaisons incluant l'analyse logicielle, y compris l'analyse statique et dynamique, et les LLM.</p>""}, {'', ""<p>Le programme débute le 26 août avec une journée des proposants, à laquelle les ingénieurs logiciels intéressés peuvent assister en personne ou virtuellement. Les participants doivent s'inscrire avant le 19 août. Les détails et les informations d'inscription sont disponibles sur SAM.Gov.</p>""}, {'', '<h3>Un problème mondial</h3>'}, {'', '<p>Dans un rapport technique de 19 pages, l’ONCD a écrit que les vulnérabilités de sécurité de la mémoire « représentent un problème majeur pour l’industrie du logiciel car elles obligent les fabricants à publier continuellement des mises à jour de sécurité et leurs clients à appliquer continuellement des correctifs. Ces vulnérabilités persistent malgré les efforts déployés par les fabricants de logiciels pour tenter de réduire leur prévalence et leur impact par diverses méthodes, notamment l’analyse, la correction, la publication de nouveaux codes et l’investissement dans des programmes de formation pour les développeurs. »</p>'}, {'', '<p>Dans le même temps, les clients sont obligés de consacrer des ressources importantes pour remédier aux failles au moyen de programmes complexes de gestion des correctifs et d’initiatives de réponse aux incidents.</p>'}, {'', ""<p>Ils affectent la mémoire d'un ordinateur en permettant aux programmeurs de manipuler directement la mémoire, ce qui facilite l'introduction par inadvertance d'erreurs de codage qui pourraient conduire à une opération apparemment routinière corrompant l'état ou la mémoire, ont écrit les responsables de la DARPA.</p>""}, {'', '<p>De plus, des problèmes de sécurité peuvent survenir lorsqu’un langage de programmation présente ce que l’agence appelle un « comportement indéfini », ce qui se produit lorsque la norme du langage ne contient aucune spécification ou directive sur la manière dont le programme doit se comporter dans des conditions qui ne sont pas explicitement définies dans la norme.</p>'}, {'', '<p>Un rapport de 23 pages de la CISA et d’autres agences de cybersécurité américaines et internationales de pays tels que le Canada, le Royaume-Uni, l’Australie et la Nouvelle-Zélande a révélé qu’environ 70 % des CVE de Microsoft et des failles du projet Chromium de Google sont des vulnérabilités de sécurité de la mémoire. De plus, pour Mozilla, 32 des 34 failles critiques ou hautement classées entraient dans cette catégorie.</p>'}]"
Une enquête révèle que la vitesse de déploiement des logiciels dépasse la sécurité,"[{'', ""<p>Une enquête menée auprès de 5 315 contributeurs individuels et dirigeants du développement, des opérations informatiques et de la sécurité révèle que les deux tiers (66 %) d'entre eux publient des logiciels plus rapidement qu'il y a un an.</p>""}, {'', ""<p>Réalisée par le cabinet d'études de marché Omdia pour le compte de GitLab, l'enquête révèle également que parmi les 40 % des développeurs ayant participé à l'enquête, 24 % ont déclaré qu'ils poussaient du code dans des environnements de production au moins une fois par jour, et 13 % poussaient du code plusieurs fois par jour.</p>""}, {'', '<p>Dans le même temps, plus des trois quarts (78 %) des personnes interrogées ont déclaré qu’elles utilisaient déjà l’intelligence artificielle (IA) ou qu’elles prévoyaient de l’utiliser dans les deux prochaines années pour développer des logiciels. Plus de la moitié (55 %) ont reconnu que l’introduction de l’IA dans le cycle de développement logiciel était risquée, la confidentialité et la sécurité des données étant la principale préoccupation.</p>'}, {'', '<p>Malheureusement, l’enquête suggère également que les meilleures pratiques en matière de sécurisation des logiciels sont encore en retard. L’enquête révèle que parmi les 27 % de personnes interrogées qui travaillent dans le domaine de la sécurité, seulement 38 % déclarent avoir transféré la responsabilité de la sécurité des applications aux développeurs, et seulement 34 % déclarent proposer une formation à la sécurité aux développeurs.</p>'}, {'', '<p>Du côté positif, 32 % prévoient de commencer à proposer cette formation cette année, et plus d’un quart (26 %) de ceux qui utilisent actuellement l’IA pour le développement d’applications ont identifié l’amélioration de la sécurité comme l’un des principaux avantages de l’IA. Plus de la moitié (52 %) ont déclaré qu’ils étaient intéressés par l’utilisation ou prévoyaient de s’appuyer sur les explications de l’IA sur les vulnérabilités de sécurité pour améliorer le code.</p>'}, {'', ""<p>Dans l'ensemble, plus des deux tiers des développeurs (67 %) ont déclaré que plus d'un quart du code sur lequel ils travaillent provient de bibliothèques open source, et 40 % d'entre eux ont indiqué que les composants logiciels open source constituaient plus de la moitié du code de leur application. À l'heure actuelle, cependant, seuls 20 % d'entre eux travaillent pour des organisations utilisant des nomenclatures de logiciels (SBOM).</p>""}, {'', ""<p>Plus inquiétant encore, seulement 34 % déclarent utiliser des outils de test de sécurité des applications dynamiques (DAST), suivis de près par 33 % utilisant des outils de test de sécurité des applications statiques (SAST), l'analyse des conteneurs (29 %) et la détection des secrets (24 %).</p>""}, {'', '<p>Plus de la moitié des personnes interrogées dans le domaine de la sécurité ont également déclaré avoir du mal à convaincre les équipes de développement de donner la priorité à la correction des vulnérabilités, et 52 % ont indiqué que la bureaucratie ralentit souvent leurs efforts pour corriger rapidement les vulnérabilités.</p>'}, {'', ""<p>Josh Lemos, responsable de la sécurité des systèmes d'information de GitLab, a déclaré que même si des progrès ont été réalisés en termes d'adoption des meilleurs processus DevSecOps, il reste encore beaucoup à faire. La sécurité des applications ne fera que devenir un problème plus urgent à mesure que la quantité de code créée à l'aide d'outils d'IA augmentera, a-t-il ajouté.</p>""}, {'', '<h3>Le rythme de développement des logiciels</h3>'}, {'', '<p>Plutôt que de simplement traiter la sécurité des applications comme une autre porte à ajouter à un flux de travail DevOps, les organisations doivent, autant que possible, fournir aux développeurs le contexte dont ils ont besoin pour résoudre les problèmes de sécurité au moment où ils écrivent du code, a déclaré Lemos.</p>'}, {'', '<p>Le défi, bien sûr, est de trouver des moyens de continuer à créer des logiciels plus sûrs sans ralentir le rythme auquel ils sont créés, a-t-il noté.</p>'}, {'', ""<p>Chaque organisation devra naturellement déterminer elle-même le rythme auquel elle souhaite développer ses logiciels. Cependant, plus une entreprise dépend des logiciels pour générer des revenus, plus la pression pour créer de nouvelles applications tout en mettant à jour en permanence les applications existantes ne cesse d'augmenter.</p>""}]"
Rapport : les risques élevés pour les chaînes d'approvisionnement de logiciels sont monnaie courante,"[{'', ""<p>Une analyse de neuf mois portant sur plus de 100 millions d'alertes, des dizaines de milliers de référentiels de code et 140 000 applications réelles révèle que 95 % des organisations présentent au moins un risque élevé, critique ou apocalyptique au sein de leur chaîne d'approvisionnement en logiciels.</p>""}, {'', ""<p>Réalisées par OX Security, fournisseur d'une plateforme de gestion de la posture de sécurité des applications (ASPM), les données ont été collectées puis normalisées à l'aide du framework Open Software Supply Chain Attack Reference (OSC&R) que la société a développé en collaboration avec des experts de Google, Microsoft et GitLab. En moyenne, chaque organisation est confrontée à neuf problèmes de ce type, une application sur cinq présentant une exposition au moment de l'exécution, selon l'analyse.</p>""}, {'', ""<p>Les trois vulnérabilités les plus fréquemment observées sont l'injection de commandes (15 %), suivie des données sensibles dans les fichiers journaux (12 %) et des scripts intersites (11 %). Six des dix vulnérabilités les plus fréquemment observées sont liées à une mauvaise mise en œuvre de pratiques de sécurité fondamentales telles que l'authentification, le chiffrement, les informations exploitables dans les journaux et les privilèges surprovisionnés.</p>""}, {'', ""<p>Plus d'un tiers (36 %) des applications étaient vulnérables aux exploits lors de la phase initiale d'attaque d'accès, tandis que 20 % étaient également vulnérables aux exploits de persistance ou d'exécution. Au total, 12 % d'entre elles présentaient des vulnérabilités liées aux tactiques utilisées dans les trois phases.</p>""}, {'', ""<p>Les techniques d'attaque les plus courantes découvertes sont les portes dérobées dans le code (31 %), suivies des comptes utilisateurs surprivilégiés (29 %) et de l'injection de commandes (27 %), selon le rapport.</p>""}, {'', '<p>Le défi est qu’en moyenne, les équipes de sécurité des applications surveillent 129 applications, avec plus de 119 000 alertes de sécurité générées chaque année.</p>'}, {'', '<p>Katie Teitler-Santullo, stratège en sécurité chez OX Security, a déclaré que la seule façon de gérer ce nombre d’alertes est de s’appuyer davantage sur l’automatisation pour corréler les alertes qui sont toutes liées au même problème principal. Ce niveau d’analyse contextuelle réduit le volume global des alertes de plus de 97 %, affirme OX Security.</p>'}, {'', ""<p>Au cœur de cette capacité se trouve un cadre OSC&R propriétaire qui fournit un modèle grâce auquel les risques peuvent être facilement identifiés en identifiant les chemins d'attaque potentiels. Armées de ces informations, il devient plus simple pour les équipes DevSecOps de prioriser les efforts de remédiation, a noté Teitler-Santullo.</p>""}, {'', '<p>Bien que des progrès considérables aient été réalisés dans l’amélioration des chaînes d’approvisionnement en logiciels, il est clair qu’il reste encore beaucoup à faire. Aujourd’hui, les développeurs ne consacrent généralement qu’une fraction de leur temps à corriger les vulnérabilités. Les équipes DevSecOps doivent donc s’assurer que ces efforts sont concentrés sur les problèmes qui représentent le plus grand risque potentiel pour l’organisation.</p>'}, {'', '<p>Le plus grand défi consiste toutefois à convaincre les développeurs d’applications d’adhérer au processus DevSecOps. La plupart des développeurs vont s’opposer activement à toute approche visant à corriger les vulnérabilités qui prendrait du temps pour créer de nouvelles applications. Il incombe donc à une équipe DevSecOps de trouver des moyens de résoudre les problèmes de sécurité des applications sans nuire à la productivité des développeurs.</p>'}, {'', '<p>En attendant, un nombre croissant de réglementations obligent les entreprises à revoir leurs workflows DevSecOps, par exemple en s’attaquant plus rapidement aux vulnérabilités connues. La seule façon de faire valoir cet argument consiste à s’appuyer davantage sur l’automatisation pour garantir que le code exécuté dans un environnement de production est aussi sécurisé que possible.</p>'}]"
PDG de CrowdStrike : 97 % des systèmes Windows sont à nouveau en ligne après une panne,"[{'', ""<p>Selon le directeur général de l'entreprise de cybersécurité, plus de 97 % des postes de travail Windows qui ont été soudainement perturbés il y a une semaine par une mise à jour logicielle problématique de CrowdStrike sont de nouveau en ligne, mais les conséquences de la panne mondiale continueront de se faire sentir.</p>""}, {'', '<p>Dans un message sur LinkedIn, le PDG de CrowdStrike, George Kurtz, a écrit que les efforts de récupération du fournisseur ont été aidés par « le développement de techniques de récupération automatique et par la mobilisation de toutes nos ressources pour soutenir nos clients ».</p>'}, {'', '<p>Microsoft estime qu’au total, 8,5 millions de PC et autres appareils Windows – soit moins de 1 % de toutes les machines Windows – ont été mis hors service et ont affiché l’écran bleu de la mort (BSOD) après l’envoi de la mise à jour défectueuse aux capteurs Falcon de CrowdStrike. Les appareils Linux et Mac n’ont pas été affectés par la mise à jour.</p>'}, {'', '<p>Aux quelques utilisateurs qui tentent encore de se reconnecter, Kurtz a écrit que l’entreprise « ne se reposera pas tant que nous n’aurons pas complètement récupéré. Chez CrowdStrike, notre mission est de gagner votre confiance en protégeant vos opérations. Je suis profondément désolé pour la perturbation que cette panne a causée et je présente mes excuses personnelles à toutes les personnes touchées ».</p>'}, {'', ""<p>Dans un rapport préliminaire post-incident (PIR) du 24 juillet, Kurtz a écrit que son outil Content Validator, qui est un élément clé d'un processus de test de mise à jour en plusieurs étapes, a validé une instance de modèle qui avait un contenu problématique qui a déclenché la panne de Windows pour être déployée en production. Le validateur de contenu aurait dû détecter le problème, a-t-il écrit.</p>""}, {'', '<p>CrowdStrike a publié un correctif et le fournisseur et Microsoft ont travaillé pour remettre les systèmes en marche, mais certains appareils ont mis plus de temps à revenir en ligne.</p>'}, {'', '<h3>Un problème persistant</h3>'}, {'', '<p>Les perturbations se poursuivent de plusieurs manières. Parmi les secteurs les plus touchés figurent les services financiers, les soins de santé, les services d’urgence et les compagnies aériennes. La plupart des compagnies aériennes ont pu se rétablir en quelques jours, mais Delta est celle qui a mis le plus de temps à revenir à la normale. Le 22 juillet, quatre jours après le crash, Delta a annulé 1 160 vols, selon USA Today, et ce nombre a régulièrement diminué, tombant à 47 le 25 juillet.</p>'}, {'', '<p>Cependant, Delta – la plus grande compagnie aérienne du monde – devra désormais faire face à une enquête du ministère américain des Transports. Le secrétaire aux Transports Pete Buttigieg a déclaré dans un message sur X (anciennement Twitter) qu’il voulait « s’assurer que la compagnie aérienne respecte la loi et prenne soin de ses passagers pendant les perturbations généralisées qui se poursuivent. Tous les passagers des compagnies aériennes ont le droit d’être traités équitablement, et je veillerai à ce que ce droit soit respecté. »</p>'}, {'', ""<p>Delta a déclaré dans un communiqué qu'elle essayait de répondre aux besoins des passagers dont les vols ont été annulés ou retardés, notamment en payant les frais engagés par les clients qui ont payé pour d'autres moyens de transport. Elle a également déclaré que la compagnie aérienne continuerait à offrir des bons de repas, des transports terrestres et des chambres d'hôtel aux passagers « dont le voyage a été perturbé par des vols annulés ou considérablement retardés ».</p>""}, {'', '<h3>De lourdes pertes, mais peu d’aide de la part des assurances</h3>'}, {'', '<p>Les clients touchés par la situation devront également s’orienter vers l’assurance cyber. Parametrix, dont l’activité comprend les services d’assurance cloud, a déclaré dans un rapport que les entreprises américaines du Fortune 500 – dont environ un quart ont été touchées – subiront des pertes pouvant atteindre 5,4 milliards de dollars. Cela dit, les polices d’assurance cyber ne couvriront probablement que 10 à 20 % de ce coût « en raison des importantes rétentions de risque de nombreuses entreprises et des limites de police faibles par rapport aux pertes potentielles dues aux pannes », a écrit Parametrix.</p>'}, {'', '<p>La panne « nous en dit plus sur les moyens par lesquels les assureurs et les réassureurs peuvent diversifier leurs portefeuilles de cyber-risques afin de minimiser les impacts potentiels du cyber-risque systémique », a déclaré Jonatan Hatzor, cofondateur et PDG de Parametrix. « Cependant, notre analyse ne montre pas l’ensemble de la situation en matière de diversification. Un assureur cyber axé sur les très grandes entreprises subira certainement une perte CrowdStrike bien plus importante par rapport aux primes qu’un assureur ayant un portefeuille important de PME. »</p>'}, {'', '<p>Les maux de tête ne sont pas réservés aux utilisateurs. Le Congrès souhaite que Kurtz, de CrowdStrike, témoigne lors d’une audience, affirmant dans une lettre que « les Américains méritent de savoir en détail comment cet incident s’est produit et les mesures d’atténuation prises par CrowdStrike ».</p>'}, {'', '<h3>Les cartes-cadeaux de 10 $ ne servent à rien</h3>'}, {'', ""<p>Un autre casse-tête a été la carte-cadeau Uber Eats de 10 $ envoyée aux membres du personnel et aux partenaires qui ont aidé à résoudre le problème et à remettre en marche les systèmes concernés. CrowdStrike leur aurait dit dans un e-mail que l'entreprise comprenait que la panne avait entraîné un surcroît de travail et des maux de tête. Certains n'ont pas été impressionnés.</p>""}, {'', '<p>Sur Reddit, une personne a écrit : « Il aurait été préférable de ne rien donner aux gens, mais maintenant Crowdstrike suggère que les heures que les gens ont investies pour corriger leur erreur ne valent que 10 $ ? »</p>'}, {'', ""<p>« Est-ce que c'est pour vous dire que nous vous avons fait enregistrer plus de 40 heures de réparations d'urgence, alors voilà, vous avez moins d'un demi-déjeuner à notre charge ? Sérieusement, c'est insultant », a écrit un autre.</p>""}, {'', '<p>Une personne a écrit : « Je prendrai tout ce que je pourrai obtenir, je suppose. Puis-je avoir un chapeau aussi ? Je veux le porter avec mon t-shirt Solarwinds. Je me drape dans mes horreurs. »</p>'}, {'', ""<h3>De plus en plus d'escrocs se lancent dans la mêlée</h3>""}, {'', ""<p>Le chaos créé par le crash a donné aux cybercriminels l'occasion de lancer des opérations de phishing et une myriade d'autres escroqueries dans l'espoir de voler de l'argent ou des informations aux victimes en se faisant passer pour du personnel de support technique de CrowdStrike ou d'autres sociétés ou en promettant des solutions au problème.</p>""}, {'', '<p>Les chercheurs de CrowdStrike ont identifié une campagne dans laquelle un acteur malveillant utilise un domaine de phishing comprenant le nom de l’entreprise et Office 365 pour se faire passer pour CrowdStrike et diffuser des fichiers ZIP et RAR malveillants contenant un chargeur Microsoft Installer. Si la cible ouvre le fichier, le chargeur exécute Lumma Stealer, un malware de vol d’informations, contenant CypherIt, un chargeur fortement obscurci utilisé pour entraver l’analyse statique.</p>'}, {'', ""<p>Lumma Stealer est utilisé pour collecter des données à partir des navigateurs, telles que les identifiants, les cookies et les extensions de navigateur. Les chercheurs ont ajouté que, d'après l'horodatage de la création, l'acteur de la menace a très probablement créé l'échantillon le lendemain de l'identification de la mise à jour du contenu problématique et du déploiement du correctif.</p>""}]"
Réussir dans DevSecOps nécessite une grille d'évaluation pour la gouvernance du SDLC,"[{'', ""<p>En janvier 2024, le New York Times a connu une faille importante en raison d'un jeton GitHub exposé, entraînant le vol de 270 Go de données sensibles, notamment de la documentation informatique et des outils d'infrastructure. Cet incident n'est qu'un exemple parmi tant d'autres qui soulignent le besoin urgent de mesures de sécurité robustes tout au long du cycle de vie du développement logiciel (SDLC).</p>""}, {'', '<p>Dans le monde d’aujourd’hui, les développeurs de logiciels sont notre source de production ; ils sont les bêtes de somme d’une économie numérique en plein essor. Cependant, les exigences de productivité imposées aux développeurs conduisent souvent à une sous-priorité des mesures de sécurité du cycle de développement logiciel. Par exemple, lorsque les vice-présidents de l’ingénierie accordent à de grandes équipes de développeurs des autorisations étendues sur un référentiel de code dans un souci de rapidité, ils peuvent par inadvertance créer une vaste surface d’attaque vulnérable à un seul compte compromis.</p>'}, {'', ""<p>DevSecOps, un terme qui englobe les efforts combinés de développement, de sécurité et d'exploitation agissant comme une seule unité, est une exigence de sécurité urgente pour tout RSSI. En décomposant DevSecOps en quatre piliers essentiels (gouvernance des identités, gouvernance CI/CD, gouvernance du code et conformité SDLC), les organisations disposent d'une grille d'évaluation pour prévenir les violations SDLC. Ce cadre permet également de définir une nouvelle catégorie de sécurité pour les environnements de développement, appelée gouvernance SDLC.</p>""}, {'<h3>Les quatre piliers de la gouvernance du cycle de vie du développement logiciel</h3>', ''}, {'', '<p>La sécurisation d’un cycle de développement logiciel (SDLC) est une tâche monumentale. Il ne s’agit pas d’un simple changement d’infrastructure cloud. Un environnement SDLC comprend plutôt des référentiels de code, des environnements d’exécution, des référentiels d’artefacts, des scanners de code open source, des gestionnaires de secrets, des outils CI/CD et bien plus encore. Voici quatre piliers pour bien cerner l’ensemble des problèmes de gouvernance du SDLC :</p>'}, {'', ""<li>Gouvernance des identités : assurez-vous que chaque développeur et compte de service dispose des droits nécessaires pour effectuer son travail, ni plus, ni moins. La mise en œuvre de politiques strictes de gouvernance des identités limite l'accès à ce qui est nécessaire, réduisant ainsi le risque d'accès non autorisé pouvant conduire à des violations. En outre, il est essentiel de veiller à ce que les risques internes et les comportements à risque en matière d'identité externe soient rapidement détectés et contenus afin d'atténuer les risques d'identité liés au SDLC.</li>""}, {'', ""<li>Gouvernance CI/CD : Maintenez des postures de sécurité cohérentes pour les outils d'intégration et de déploiement en fonction du contexte dans lequel l'application est déployée. Cela signifie comprendre les besoins spécifiques de chaque application pour laquelle les outils CI/CD appliquent des procédures d'intégration et de déploiement personnalisées.</li>""}, {'', ""<li>Gouvernance du code\xa0: attribuez une identité, une date et une heure pour l'importation de chaque package dans le référentiel. Cela inclut la surveillance des fuites de secrets, les vulnérabilités des tests de sécurité des applications statiques (SAST) et la réalisation d'analyses Terraform d'infrastructure en tant que code (IaC).</li>""}, {'', ""<li>Conformité : automatisez la détection et la correction continues de la conformité conformément aux normes en vigueur. En détectant automatiquement les manquements à la conformité et en les corrigeant en temps réel, les organisations peuvent se conformer aux normes du secteur et éviter d'éventuelles amendes ou pénalités.</li>""}, {'', ""<p>Avant de mettre en œuvre un modèle de gouvernance SDLC efficace, il est essentiel d'impliquer les parties prenantes de l'ensemble de l'organisation. Les RSSI doivent collaborer avec les responsables de l'ingénierie, les responsables AppSec, les responsables DevOps et les responsables de la conformité sur les politiques de sécurité et de gouvernance SDLC afin de garantir que tous les aspects de la sécurité sont pris en compte et traités.</p>""}, {'', '<h3>Mise en œuvre du cadre et résolution des défis</h3>'}, {'', '<p>Un leadership fort de la part du RSSI est essentiel pour mettre en œuvre ce cadre avec succès. Cependant, la plupart des défis auxquels les RSSI sont confrontés ne sont pas des problèmes technologiques, mais des problèmes culturels. En tant que principal défenseur de la sécurité, le RSSI doit mener des recherches approfondies pour comprendre les besoins et les défis spécifiques de l’organisation en matière de sécurité. En impliquant le personnel et les responsables fonctionnels, le RSSI doit présenter des preuves des menaces potentielles et élaborer des politiques qui équilibrent la productivité avec des mesures de sécurité robustes.</p>'}, {'', '<p>L’un des principaux défis est la culture dans laquelle les RSSI peuvent s’en remettre à des fonctions où l’informatique est une compétence clé, en présumant souvent qu’ils comprennent les risques de sécurité que prennent les équipes. Un autre défi découle de la nature des entreprises technologiques à forte croissance, où les objectifs de croissance agressifs poussent les équipes d’ingénierie à privilégier la vitesse au détriment de la sécurité. Cette mentalité du « go, go, go » conduit à ce que les mesures de gouvernance et de sécurité deviennent des préoccupations secondaires.</p>'}, {'', '<h3>Adopter la gouvernance SDLC pour un avenir sûr</h3>'}, {'', '<p>Même si les défis liés à la mise en œuvre de la gouvernance SDLC peuvent être décourageants, les succès obtenus par les RSSI dans la sécurisation de l’infrastructure cloud démontrent ce qui est possible. Songez à l’évolution rapide de la sécurité sur site, qui a pris des décennies à perfectionner, à l’adoption transparente de solutions de cloud public et privé en quelques années seulement. Les RSSI ont joué un rôle déterminant dans cette transition, en apportant de nombreux outils de développement et en aidant à promouvoir rapidement les produits. Sans oublier que les RSSI ne sont jamais reconnus pour toutes les violations qui ne se produisent pas, mais ils restent sur leurs gardes et sont prêts à discuter avec les innovateurs pour trouver des solutions. Grâce à leur travail, je crois vraiment que ce secteur peut tout résoudre.</p>'}, {'', '<p>Les entreprises de tous les secteurs dépendent désormais fortement du développement logiciel. Il n’a jamais été aussi urgent d’intégrer la sécurité dans le processus DevOps. Les attaquants malveillants continuent d’expérimenter et d’exploiter les faiblesses des infrastructures critiques. La récente série d’attaques axées sur le cycle de vie du développement logiciel met en évidence la nécessité de mesures de sécurité robustes dans la manière dont les logiciels sont créés. Il ne suffit plus de protéger uniquement le cloud dans lequel l’application est hébergée.</p>'}, {'', '<p>Si vous attendez que le marché ASPM se déplace vers la gauche, je dirais que la gouvernance SDLC est trop complexe pour être réalisée de manière exhaustive par un fournisseur de sécurité cloud classique. DevSecOps est sa compétence principale et nécessite des outils et services spécialisés pour la sécuriser. Il est désormais temps d’impliquer les parties prenantes de votre SDLC et de commencer à sécuriser vos pipelines de développement : l’avenir de la sécurité de votre organisation en dépend. La mise en œuvre d’un cadre de gouvernance SDLC qui englobe l’identité, le CI/CD et la gouvernance du code, ainsi que la conformité, garantira que la sécurité fait partie intégrante de votre processus de développement, protégeant les actifs critiques et favorisant une culture de responsabilité partagée.</p>'}]"
Backslash Security ajoute des outils de simulation et d'IA générative à sa plateforme DevSecOps,"[{'', ""<p>Backslash Security a ajouté aujourd'hui la possibilité de simuler des mises à niveau vers une version supérieure d'une application à sa plate-forme de sécurité des applications pour analyser le code et créer des nomenclatures de logiciels (SBOM).</p>""}, {'', ""<p>De plus, l'entreprise utilise désormais également de grands modèles de langage (LLM) pour fournir aux équipes DevSecOps des conseils pour résoudre les problèmes sans jamais exposer de code au LLM.</p>""}, {'', ""<p>Amit Bismut, responsable produit chez Backslash Security, a déclaré que l'un des défis auxquels les équipes DevSecOps sont régulièrement confrontées est qu'une mise à jour d'un package ou d'un module tiers inclus dans une application peut introduire des vulnérabilités supplémentaires. La fonctionnalité Fix Simulation ajoutée à la plateforme SaaS (Software-as-a-Service) Backslash permet aux équipes DevSecOps de vérifier l'impact de ce logiciel sur leurs applications sans avoir à le déployer au préalable dans leurs environnements informatiques, a déclaré Bismut.</p>""}, {'', '<p>C’est essentiel car les équipes DevSecOps débattent souvent de la mesure dans laquelle une mise à jour mineure ou majeure d’un progiciel ou d’un composant pourrait être nécessaire pour sécuriser définitivement une application, a noté Bismut.</p>'}, {'', ""<p>Parallèlement, les équipes DevSecOps peuvent tirer parti de la plateforme BackSlash pour exposer les métadonnées d'un environnement d'application collectées par Backslash à un LLM, qui peut ensuite générer des recommandations de correction du chemin d'attaque pour corriger les vulnérabilités. Cette approche élimine la nécessité d'exposer le code créé par un développeur d'application directement à un LLM, a déclaré Bismut.</p>""}, {'', '<h3>Gestion de la posture de sécurité des applications</h3>'}, {'', ""<p>La plateforme de gestion de la posture de sécurité des applications (ASPM) Backslash identifie et hiérarchise les vulnérabilités en fonction de leur facilité d'exploitation et d'accès. Cette approche permet de modéliser visuellement les menaces dans le contexte de l'architecture réelle de l'application, jusqu'aux lignes de code spécifiques et au développeur qui les a écrites.</p>""}, {'', ""<p>Les fonctionnalités incluent une plate-forme d'échange d'exploitabilité de vulnérabilité (VEX) intégrée à des outils d'analyse de la composition logicielle (SCA), de tests de sécurité des applications statiques (SAST), de détection de secrets et de création de SBOM.</p>""}, {''}, {'', '<p>La rationalisation des flux de travail DevSecOps est devenue cruciale à une époque où, grâce à l’essor de l’intelligence artificielle (IA), la quantité de code écrit et déployé est sur le point d’augmenter de manière exponentielle. Malheureusement, les développeurs ne consacrent encore qu’environ 10 % de leur temps à la correction des vulnérabilités. Les organisations doivent s’assurer que le temps est consacré à la résolution des problèmes qui pourraient avoir le plus d’impact sur l’entreprise. Sinon, un certain niveau de fatigue s’installe, ce qui conduit les développeurs à répéter sans cesse les mêmes erreurs de cybersécurité. La plupart des vulnérabilités découvertes dans les applications aujourd’hui sont les mêmes problèmes qui ont tourmenté les équipes d’ingénierie logicielle au cours de la dernière décennie.</p>'}, {'', '<p>Il existe bien sûr de nombreuses options DevSecOps, allant de la fourniture aux développeurs d’outils supplémentaires qui détectent les vulnérabilités et écrivent le code, à l’ajout de portes supplémentaires aux flux de travail DevOps existants pour garantir que les vulnérabilités ne sont pas intégrées à une version logicielle. Quelle que soit l’approche adoptée, il est clair que les cybercriminels deviennent de plus en plus habiles à exploiter les vulnérabilités logicielles connues. Ainsi, ce n’est qu’une question de temps avant que la prochaine fois qu’une de ces vulnérabilités sera exploitée, on pourra remonter jusqu’au développeur qui l’a créée.</p>'}]"
CrowdStrike : un logiciel de test défectueux a provoqué un crash mondial de Windows,"[{'', '<p>Un bug dans un outil de test a validé de manière incorrecte une mise à jour de contenu du logiciel Falcon de CrowdStrike, provoquant l’envoi d’un « contenu problématique » dans un fichier à des millions d’appareils Windows et déclenchant une panne mondiale des systèmes informatiques dont les ramifications se font encore sentir.</p>'}, {'', ""<p>Dans un rapport préliminaire publié mercredi, la société de cybersécurité a déclaré que son outil Content Validator, qui fait partie d'un processus en plusieurs étapes pour fournir des mises à jour de configuration de contenu au capteur Falcon, contenait deux instances de modèle fournissant du contenu à réponse rapide. L'une des instances contenait le contenu problématique, mais sur la base des résultats des contrôles effectués plus tôt dans le processus, « ces instances ont été déployées en production », a écrit CrowdStrike.</p>""}, {'', ""<p>Le résultat fut que lorsque le capteur reçut le contenu du fichier de canal 291 et le chargea dans l'interpréteur de contenu, cela provoqua une lecture de mémoire hors limites qui déclencha une exception inattendue qui « ne pouvait pas être gérée correctement, entraînant un crash du système d'exploitation Windows » et l'écran bleu de la mort (BSOD).</p>""}, {'', ""<p>Selon Microsoft, 8,5 millions de systèmes Windows dans le monde ont été touchés par la panne, qui a touché de nombreux secteurs comme le tourisme, la santé et les services financiers et a entraîné l'immobilisation d'avions, le report d'opérations chirurgicales et le retard des opérations bancaires. Certaines entreprises sont encore en phase de rétablissement, Delta Airlines continuant d'annuler des vols cinq jours plus tard.</p>""}, {'', '<p>La panne a également fait chuter le cours de l’action de CrowdStrike et a donné aux cybercriminels l’occasion de lancer des escroqueries en exploitant le crash.</p>'}, {'', ""<p>En outre, le Congrès exerce désormais un contrôle strict sur cette affaire : les responsables du Comité de la sécurité intérieure et du Sous-comité de la cybersécurité et de la protection des infrastructures de la Chambre des représentants ont envoyé cette semaine une lettre donnant au PDG de CrowdStrike, George Kurtz, jusqu'à mercredi pour planifier une audience avec le sous-comité.</p>""}, {'', '<p>« Bien que nous apprécions la réponse de CrowdStrike et sa coordination avec les parties prenantes, nous ne pouvons ignorer l’ampleur de cet incident, que certains ont qualifié de la plus grande panne informatique de l’histoire », ont écrit Mark Green (R-TN), président du Comité de la sécurité intérieure, et Andrew Garbarino (R-NY), président du sous-comité. « Sachant que les Américains ressentiront sans aucun doute les conséquences durables et réelles de cet incident, ils méritent de savoir en détail comment cet incident s’est produit et les mesures d’atténuation prises par CrowdStrike. »</p>'}, {'', ""<p>Le rapport PIR de CrowdStrike fournit une analyse détaillée des problèmes survenus le 19 juillet, indiquant que les hôtes Windows exécutant la version 7.11 du capteur de CrowdStrike qui étaient en ligne pendant une période de 90 minutes ce matin-là ont reçu la mise à jour du problème. Les systèmes qui se sont connectés après ou qui n'étaient pas connectés pendant cette période n'ont pas été affectés. De plus, les systèmes Mac et Linux n'ont pas été affectés.</p>""}, {'', ""<p>CrowdStrike envoie des mises à jour de configuration du contenu de sécurité à ses capteurs de deux manières, notamment via le contenu du capteur qui est livré directement avec le capteur. Ce contenu n'est pas mis à jour de manière dynamique à partir du cloud et comprend des types de modèles, qui ont des champs prédéfinis écrits dans le code que les ingénieurs de détection des menaces peuvent utiliser dans le contenu de réponse rapide. Les types de modèles « passent par un processus d'assurance qualité approfondi, qui comprend des tests automatisés, des tests manuels, des étapes de validation et de déploiement », a écrit le fournisseur.</p>""}, {'', ""<p>Le contenu de réponse rapide est utilisé pour répondre rapidement aux changements dans le paysage des menaces et peut être mis à jour de manière dynamique en dehors du capteur Falcon. Le contenu est fourni sous forme d'instances de modèle qui correspondent à des comportements spécifiques que le capteur peut voir, détecter ou empêcher et qui disposent d'un ensemble de champs correspondant au comportement souhaité. Trois systèmes clés sont utilisés pour tester et déployer le contenu de réponse rapide, notamment le système de configuration de contenu, qui crée des instances de modèle et inclut le validateur de contenu.</p>""}, {'', '<p>Les deux autres sont l’interpréteur de contenu sur le capteur, qui permet au moteur de détection du capteur de détecter et de prévenir les activités malveillantes.</p>'}, {'', ""<p>CrowdStrike a indiqué qu'en février, il a introduit un nouveau type de modèle InterProcessCommunication (IPC) pour détecter de nouvelles techniques d'attaque. Le mois suivant, le type de modèle IPC a été soumis à un test de résistance dans un environnement de test comprenant des systèmes d'exploitation et des charges de travail. Après avoir réussi le test de résistance et avoir été validé pour l'utilisation, l'instance de modèle IPC et trois autres ont été déployées en avril et ont fonctionné comme prévu en production.</p>""}, {'', '<p>Deux instances de modèle IPC supplémentaires ont été déployées le 19 juillet – y compris celle avec le contenu problématique – sur la base des tests effectués avant le déploiement initial du type de modèle en mars, des vérifications effectuées dans le validateur de contenu et du fait que les instances de modèle IPC précédentes ont été déployées sans déclencher de problèmes dans les systèmes Windows, a écrit CrowdStrike.</p>'}, {'', ""<p>En réponse, le fournisseur a déclaré qu'il améliorait les tests de contenu de réponse rapide en utilisant des types de tests supplémentaires, notamment des tests de développement local et des tests de mise à jour et de restauration de contenu, en ajoutant davantage de contrôles de validation à Content Validator pour le contenu de réponse rapide et en améliorant la gestion des erreurs existante dans Content Interpreter.</p>""}, {'', ""<p>De nouveaux contrôles ont également été introduits dans le déploiement du contenu de réponse rapide, notamment le déploiement progressif des mises à jour, l'amélioration de la surveillance et l'octroi aux utilisateurs d'un meilleur contrôle sur le moment et le lieu de déploiement des mises à jour.</p>""}]"
Secure Code Warrior dévoile un agent pour gérer les autorisations de validation,"[{'', ""<p>Secure Code Warrior (SCW) a ajouté aujourd'hui un agent à son portefeuille de sécurité des applications qui évalue la compétence en matière de sécurité des développeurs lorsqu'ils valident du code dans un référentiel.</p>""}, {'', ""<p>L'agent de confiance SCW est basé sur une capacité à évaluer l'expertise en sécurité des développeurs que SCW a déployée plus tôt cette année.</p>""}, {'', ""<p>L'agent de confiance SCW peut être déployé sur n'importe quel référentiel de code basé sur Git, notamment Github, Gitlab et Atlassian Bitbucket, afin de garantir que seuls les développeurs ayant atteint une note de sécurité spécifique sont autorisés à effectuer un commit. Ces notes sont basées sur plus de 20 millions de points de données collectés auprès de 250\xa0000 développeurs du monde entier.</p>""}, {'', '<p>En fonction de la criticité du projet, les équipes DevSecOps peuvent personnaliser la configuration des politiques en fonction du niveau de risque que représente chaque projet d’application.</p>'}, {'', ""<p>Matias Madou, directeur technique de SCW, a déclaré que l'objectif global est non seulement de rendre les bases de code plus sûres, mais également de permettre aux organisations d'identifier plus facilement les développeurs d'applications qui ont besoin d'une formation supplémentaire en matière de sécurité.</p>""}, {'', '<p>De plus, restreindre les membres d’une équipe de développement d’applications qui sont réellement autorisés à effectuer une validation permet également de rationaliser tout audit qui pourrait être effectué à une date ultérieure.</p>'}, {'', '<p>Pour garantir la sécurité des chaînes d’approvisionnement de logiciels, il faut non seulement fournir aux développeurs les meilleurs outils possibles, mais aussi verrouiller les processus. Dans la course à la création d’applications plus rapides, de nombreuses entreprises ont négligé la nécessité de s’assurer que les commits dans les référentiels sont d’abord examinés par des développeurs expérimentés. Cela n’empêchera peut-être pas toutes les erreurs commises d’être enregistrées dans un référentiel, mais cela devrait au moins en réduire la fréquence.</p>'}, {'', '<p>L’un des problèmes les plus exaspérants rencontrés par les équipes DevSecOps est sans doute le fait que les développeurs d’applications continuent de commettre la même erreur de sécurité de base plusieurs fois. Les vulnérabilités les plus courantes trouvées dans le code sont à peu près les mêmes depuis une décennie, a noté Madou.</p>'}, {'', '<p>On ne sait pas encore dans quelle mesure les entreprises seront obligées de déployer des applications moins vulnérables. L’Union européenne a adopté une loi sur la cyber-résilience qui oblige les entreprises à créer des logiciels plus sécurisés. Cependant, une récente décision de la Cour suprême des États-Unis dans l’affaire Chevron a limité l’autorité des agences fédérales et étendu les statuts en vertu desquels elles ont été créées pour appliquer de nouvelles réglementations qui n’ont pas été spécifiquement approuvées par le Congrès américain. Il est donc de moins en moins probable que les exigences de conformité relatives à la sécurité des logiciels soient appliquées dans un avenir proche.</p>'}, {'', '<p>Toutefois, les entreprises sont susceptibles d’être tenues responsables devant les tribunaux pour avoir déployé des logiciels présentant des vulnérabilités connues. La seule chose qui devra être déterminée dans chaque cas est le degré auquel le déploiement de logiciels présentant des vulnérabilités connues est considéré comme imprudent par le tribunal. Plus un acte est imprudent, plus les sanctions généralement appliquées sont élevées.</p>'}, {'', '<p>Par conséquent, quelles que soient les réglementations de conformité, les organisations de toutes tailles ont désormais un intérêt plus grand à s’assurer qu’un maximum de vulnérabilités connues ne se retrouvent pas dans les environnements de production.</p>'}]"
La mise à jour du logiciel CrowdStrike provoque une panne chez Microsoft et un chaos mondial,"[{'', '<p>Les mondes de la technologie et des affaires continuent de ressentir les effets mondiaux d’une mise à jour logicielle défectueuse qui a rapidement fait boule de neige, perturbant les compagnies aériennes, les services financiers, les services d’urgence, les hôpitaux et les médias.</p>'}, {'', '<p>La cause apparente du chaos est une mise à jour de routine du logiciel Falcon Sensor de la société de cybersécurité CrowdStrike, qui a mal tourné, forçant les utilisateurs de Microsoft Windows à quitter leur PC et leur poste de travail, avec des répercussions qui se sont rapidement propagées dans le monde entier. Sensor est un outil de la plateforme du centre d’opérations de sécurité Falcon (SOC) de la société, utilisé pour détecter les virus et toute autre cybermenace sur un système.</p>'}, {'', '<p>Les systèmes hébergeant les systèmes d’exploitation Mac et Linux n’ont pas été affectés.</p>'}, {'', ""<p>Le PDG de CrowdStrike, George Kurtz, a déclaré dans une publication sur X (anciennement Twitter) qu'un correctif au problème avait été identifié et qu'un correctif avait été déployé.</p>""}, {'', '<p>« Il ne s’agit pas d’un incident de sécurité ou d’une cyberattaque », a écrit Kurtz, ajoutant que les utilisateurs doivent se rendre sur le portail d’assistance du fournisseur pour obtenir des mises à jour. « Nous recommandons également aux organisations de s’assurer qu’elles communiquent avec les représentants de CrowdStrike via les canaux officiels. »</p>'}, {'', '<p>Entre-temps, Microsoft a déclaré par l’intermédiaire de son équipe de mise à jour Microsoft 365 sur X que « la cause sous-jacente a été corrigée, mais que l’impact résiduel continue d’affecter certaines applications et services Microsoft 365. Nous procédons à des atténuations supplémentaires pour apporter un soulagement. »</p>'}, {'', '<p>Microsoft a également suggéré que les utilisateurs pourraient restaurer leur PC Windows 365 Cloud à un état connu avant la sortie de la mise à jour de CrowdStrike plus tôt vendredi.</p>'}, {'', ""<p>Bien que CrowdStrike ait publié un correctif pour le problème et que Microsoft guide les utilisateurs tout au long du processus de récupération, les conséquences de cette panne massive continuent de nuire aux entreprises du monde entier. Selon le site Web FlightAware, en milieu de matinée vendredi, 22 156 vols ont été retardés à l'intérieur, à l'entrée et à la sortie des États-Unis, et 2 117 vols ont été annulés.</p>""}, {'', ""<p>Les systèmes hospitaliers comme le Mass General Brigham, le plus grand système de santé de Boston, ont reporté les opérations chirurgicales non urgentes prévues et les visites médicales ont été annulées. DownDetector, qui suit les pannes technologiques, a répertorié une série d'entreprises touchées, des services financiers et de paiement (Visa, Bank of America, Charles Schwab et d'autres), des entreprises basées sur le cloud et en ligne (Ancestry.com, Amazon, Ticketmaster, DoorDash), des communications (AT&T, Verizon, T-Mobile), des fournisseurs de services cloud (Azure, Amazon Web Services, Google) et diverses autres entreprises, comme Starbucks et Walmart.</p>""}, {'', '<p>Même l’IRS a été touché par la panne.</p>'}, {'', '<p>Cet incident est un rappel brutal de la vulnérabilité d’un monde hautement connecté, dont une grande partie de la technologie est entre les mains d’un nombre relativement restreint d’acteurs majeurs.</p>'}, {'', '<p>« Bien que les pannes généralisées dues à un problème logiciel ne soient pas courantes, elles mettent en évidence le problème d’une dépendance excessive à une seule technologie ou à un seul fournisseur », a déclaré Mitch Ashley, conseiller en chef en technologie chez The Futurum Group et CTO chez Techstrong, à Security Boulevard, un site d’information Techstrong. « Ce problème n’est pas la faute de Microsoft, mais il incitera les clients à envisager une plus grande diversité dans leurs plateformes technologiques, du bureau au cloud. »</p>'}, {'', '<p>Ashley a également déclaré que la panne avait également attiré l’attention du Congrès américain ainsi que d’autres législateurs et régulateurs du monde entier.</p>'}, {'', ""<p>« Bien que cela ne semble pas être lié à la sécurité, les pannes avec ce type d'impact mondial sur les transports, les communications, les secteurs bancaires et plus encore obligent les clients à repenser leurs stratégies de fournisseurs de technologie », a-t-il déclaré.</p>""}, {'', ""<p>Nick France, CTO du fournisseur de cybersécurité Sectigo, a noté la rapidité avec laquelle une mise à jour ratée d'un seul élément matériel pouvait se propager via le cloud.</p>""}, {'', ""<p>« Cela a créé la tempête parfaite pour provoquer une panne mondiale », a déclaré France. « CrowdStrike est un logiciel de sécurité que de nombreuses entreprises utilisent et ont installé sur leurs systèmes. Ainsi, lorsqu'une mise à jour provoque un problème, elle peut affecter les entreprises du monde entier. … De mauvaises mises à jour peuvent se produire et cela montre l'impact mondial qu'elles peuvent avoir lorsqu'elles proviennent d'un logiciel intégré, tel que CrowdStrike. »</p>""}, {'', ""<p>Les analystes du cloud et des centres de données d'Omdia mettent en garde depuis longtemps contre la dépendance croissante aux services cloud, selon Maxine Holt, directrice principale de la cybersécurité au sein du cabinet d'analystes.</p>""}, {'', '<p>« Les pannes d’aujourd’hui vont amener les entreprises à repenser le transfert des applications critiques hors site », a déclaré Holt. « L’effet d’entraînement est énorme, touchant CrowdStrike, Microsoft, AWS, Azure, Google et au-delà. Les actions de CrowdStrike ont chuté de plus de 20 % lors des échanges non officiels avant l’ouverture des marchés aux États-Unis, ce qui se traduit par une perte de valeur stupéfiante de 16 milliards de dollars. »</p>'}, {'', '<p>Le fait qu’une panne aussi mondiale soit le résultat d’une mauvaise mise à jour logicielle de CrowdStrike illustre à quel point les logiciels de cybersécurité peuvent être profondément intégrés aux systèmes d’exploitation exécutés sur les ordinateurs du monde entier. Ashley de Futurum a noté que la panne de Microsoft « a les caractéristiques d’un événement auto-infligé de l’ampleur de l’an 2000 ».</p>'}, {'', '<p>« Les logiciels de sécurité comme Falcon bénéficient d’autorisations de sécurité de type administrateur sur les systèmes informatiques et les serveurs », a-t-il déclaré. « [Si] une faille de gravité 1 (niveau de panne de service) est introduite, elle peut facilement faire tomber les systèmes, provoquer des problèmes d’intégrité des données et, dans certains cas, annihiler les fonctions de sécurité. Lorsqu’un correctif est disponible, ses mises à jour critiques sont testées et appliquées pour garantir que les systèmes basés sur Microsoft Windows sont non seulement opérationnels mais également sécurisés. »</p>'}, {'', '<p>Josh Thorngren, stratège en sécurité chez ForAllSecure, a déclaré que la panne « est en quelque sorte une tempête parfaite ».</p>'}, {'', '<p>« CrowdStrike protège des millions d’ordinateurs dans le monde entier, mais pour cela, il faut un accès profond au système sur ces machines », a déclaré Thorngren. « Ce même accès profond signifie que lorsqu’un bug dans CrowdStrike se produit, il peut paralyser l’ensemble du système d’exploitation, comme nous l’avons vu aujourd’hui. Il n’y a pas de « bonne » réponse à cela. Il y a toujours un compromis à faire entre le degré d’intégration de votre sécurité (pour une meilleure protection) et le risque qu’un bug détruise votre système. »</p>'}, {'', '<p>Cette panne devrait également servir de leçon aux éditeurs de logiciels, qui doivent veiller à ce que les procédures de test évoluent avec l’utilisation croissante du cloud et un environnement de bureau et de serveur hautement diversifié. Dror Kashti, cofondateur et PDG de Sweet Security, a déclaré que le cloud nécessite des solutions conçues pour le cloud.</p>'}, {'', '<p>« Lorsque des bugs peuvent se propager rapidement dans le monde entier et mettre hors service des services essentiels, il est indispensable de s’appuyer sur le sandboxing (pour contenir les bugs), les langages sécurisés par conception (comme Rust) et les technologies non destructives (comme eBPF) », a déclaré Kashti, faisant référence à eBPF, qui peut exécuter des programmes sandboxés dans le noyau Linux sans modifier le code source du noyau. « Espérons que cet incident puisse servir d’exemple et montrer que le prix à payer pour rester statique l’emporte sur le prix à payer pour s’adapter aux nouvelles technologies. »</p>'}, {'', ""<p>Mike Walters, cofondateur et président de la société de gestion des correctifs Action1, a déclaré que ces problèmes sont souvent dus à des scénarios de test inadéquats dans divers environnements de bureau et de serveur, bien qu'ils puissent également résulter de mécanismes de sandboxing et de restauration inappropriés pour les mises à jour impliquant des interactions au niveau du noyau. Un conflit entre le pilote du noyau et d'autres logiciels peut également être à l'origine de tels problèmes.</p>""}, {'', '<p>« Pour éviter de tels problèmes à l’avenir, les entreprises doivent envisager de déployer les mises à jour, notamment celles qui concernent les logiciels de sécurité, par phases », a déclaré Walters. « Testez les mises à jour dans un environnement sandbox ou sur un sous-ensemble limité de machines représentatives de toutes les configurations opérationnelles avant le déploiement complet. Utilisez un niveau de redondance du système, en particulier dans les infrastructures critiques, pour isoler et gérer les domaines d’erreur. »</p>'}]"
Une enquête révèle des signes inquiétants d'insécurité dans la chaîne d'approvisionnement des logiciels,"[{'', ""<p>Une enquête mondiale menée auprès de 1 224 professionnels de l'ingénierie logicielle travaillant dans des organisations de plus de 1 000 employés suggère qu'un écart important est apparu entre ce que les cadres supérieurs estiment être fait pour améliorer la sécurité des applications et ce qui se passe réellement.</p>""}, {'', ""<p>Réalisée par Atomik Research pour le compte de JFrog, fournisseur d'une plateforme DevSecOps, l'enquête révèle que 67 % des 331 cadres et managers interrogés estiment que des analyses de sécurité au niveau du code sont effectuées régulièrement, mais seulement 41 % des développeurs sont du même avis.</p>""}, {'', '<p>88 % des dirigeants estiment également que l’intelligence artificielle (IA) et les outils d’apprentissage automatique sont utilisés pour les processus d’analyse et de correction de la sécurité. Cependant, seules 60 % des équipes DevSecOps ont déclaré utiliser réellement ces outils. Un peu plus de 90 % des dirigeants pensent également qu’ils utilisent des modèles d’apprentissage automatique dans leurs applications logicielles, alors que seulement 63 % des développeurs confirment cette affirmation.</p>'}, {'', '<p>De même, 92 % des dirigeants affirment que leurs organisations disposent d’outils pour détecter les packages open source malveillants, alors que seulement 70 % des développeurs sont du même avis.</p>'}, {'', ""<p>Paul Davis, responsable de la sécurité des systèmes d'information chez JFrog Field, a déclaré que le fossé entre les dirigeants et les développeurs de base est probablement dû au simple fait que de nombreuses organisations sont encore en train de repenser leurs workflows DevSecOps. Le défi est que chaque organisation commence ce voyage à partir d'un point de départ différent et progresse donc à des rythmes différents, souvent difficiles à quantifier.</p>""}, {'', '<p>Le fait que seulement 30 % des personnes interrogées aient identifié la nécessité de remédier aux vulnérabilités de leur chaîne d’approvisionnement de logiciels comme une préoccupation majeure en matière de sécurité complique encore les choses. On ne comprend pas vraiment pourquoi moins d’un tiers des personnes interrogées s’inquiètent des vulnérabilités malgré leur prévalence, mais les résultats de l’enquête suggèrent qu’il existe soit un niveau de confiance excessif, soit que d’autres problèmes plus urgents pourraient prendre le pas.</p>'}, {'', ""<h3>Sécuriser les chaînes d'approvisionnement de logiciels avec ou sans réglementation</h3>""}, {'', '<p>On ne sait pas exactement dans quelle mesure la réglementation pourrait inciter les entreprises à mieux sécuriser leurs chaînes d’approvisionnement en logiciels. L’Union européenne (UE), par exemple, fait avancer le Cyber \u200b\u200bResilience Act (CRA) qui oblige les entreprises à sécuriser la chaîne d’approvisionnement de tout logiciel vendu, mais d’autres pays n’ont pas encore suivi l’exemple. En l’absence d’une réglementation réelle, il appartient à chaque entreprise de déterminer la meilleure façon de sécuriser sa chaîne d’approvisionnement en logiciels contre les cyberattaques.</p>'}, {'', '<p>La forme la plus courante de ces attaques consiste généralement à voler les identifiants nécessaires pour accéder à un environnement de développement d’applications. Une fois que les cybercriminels y ont accès, ils tentent pendant une longue période d’intégrer des logiciels malveillants dans un flux de travail dans l’espoir que ces derniers parviennent à s’infiltrer dans plusieurs applications en aval. Dans le même temps, les cybercriminels ciblent également les référentiels de logiciels open source en se faisant passer pour des contributeurs intéressés, avant d’injecter de la même manière des logiciels malveillants dans un outil ou un composant logiciel susceptible d’être utilisé par des milliers d’organisations.</p>'}, {'', '<p>Espérons que les progrès de l’intelligence artificielle (IA) permettront bientôt d’identifier et de remédier plus facilement à ce type de menaces. En attendant, le fossé entre les développeurs et les responsables quant aux mesures prises pour garantir la sécurité des chaînes d’approvisionnement en logiciels est pour le moins déconcertant.</p>'}]"
Mise en œuvre de la modélisation des menaces dans un workflow DevOps,"[{'', ""<p>La sécurité reste primordiale dans le paysage numérique contemporain, en particulier dans le flux de travail DevOps. Les pratiques DevOps visent à rationaliser le cycle de vie du développement logiciel (SDLC) en favorisant la collaboration entre les équipes de développement et d'exploitation, garantissant ainsi un SDLC sécurisé. Cependant, le rythme rapide de DevOps peut parfois négliger des problèmes de sécurité critiques. L'intégration de la modélisation des menaces dans le flux de travail DevOps est essentielle pour identifier et atténuer les menaces de sécurité potentielles. Ce guide complet explore comment la modélisation des menaces peut être efficacement mise en œuvre dans un cadre DevOps pour améliorer la sécurité.</p>""}, {'', ""<p>La modélisation des menaces est une approche structurée permettant d'identifier, d'évaluer et d'atténuer les menaces de sécurité pesant sur un système. Elle consiste à anticiper les attaques potentielles, à comprendre leur impact et à élaborer des stratégies pour s'en défendre. Cette approche proactive de la sécurité garantit que les vulnérabilités sont identifiées dès le début du processus de développement, réduisant ainsi le risque de failles de sécurité après le déploiement.</p>""}, {'', '<h3>Éléments clés de la modélisation des menaces</h3>'}, {'', '<li>Identification des actifs : déterminer ce qui doit être protégé, y compris les données, les systèmes et les services</li>'}, {'', '<li>Identification des menaces : Reconnaître les menaces potentielles qui pourraient exploiter les vulnérabilités</li>'}, {'', '<li>Identification des vulnérabilités : identifier les faiblesses du système qui pourraient être exploitées</li>'}, {'', '<li>Stratégies d’atténuation : Élaboration de contre-mesures pour répondre aux menaces et vulnérabilités identifiées.</li>'}, {'', ""<p>L'intégration de la modélisation des menaces dans un flux de travail DevOps implique l'intégration de pratiques de sécurité tout au long du cycle de vie du développement et des opérations. Cette approche garantit une évaluation et une amélioration continues de la sécurité, conformément aux principes DevOps d'intégration continue et de déploiement continu (CI/CD).</p>""}, {'<h3>1. Shift-Left Security : intégration au début du SDLC</h3>', ''}, {'', '<p>L’un des principes fondamentaux de DevOps est le concept de sécurité « shift-left », qui signifie intégrer les pratiques de sécurité dès le début du cycle de développement logiciel. En intégrant la modélisation des menaces dès les premières étapes, les menaces de sécurité potentielles peuvent être identifiées avant qu’elles ne soient profondément ancrées dans la base de code. Cette intégration précoce favorise un cycle de développement logiciel sécurisé, garantissant que les mesures de sécurité sont prises en compte dès le début et tout au long du processus de développement.</p>'}, {'', '<h4>Avantages de la sécurité Shift-Left</h4>'}, {'', ""<li>Détection précoce des vulnérabilités : l'identification précoce des problèmes de sécurité réduit le coût et les efforts nécessaires pour les résoudre ultérieurement</li>""}, {'', '<li>Amélioration de la qualité du code : encourager les développeurs à écrire du code sécurisé dès le début</li>'}, {'', '<li>Délai de mise sur le marché réduit : réduction du risque de retards causés par des problèmes de sécurité découverts tardivement dans le processus de développement.</li>'}, {'', '<h3>2. Modélisation continue des menaces</h3>'}, {'', ""<p>La modélisation continue des menaces s'aligne sur le principe DevOps d'intégration et de déploiement continus. Cette pratique implique la mise à jour régulière des modèles de menaces pour refléter les changements dans l'application, l'infrastructure et le paysage des menaces. Les outils automatisés peuvent aider à maintenir à jour les modèles de menaces, garantissant ainsi que les évaluations de sécurité sont effectuées de manière cohérente.</p>""}, {'', '<h4>Aspects clés de la modélisation des menaces continues</h4>'}, {'', ""<li>Analyses de sécurité automatisées : intégration d'outils d'analyse de sécurité dans le pipeline CI/CD pour détecter les vulnérabilités en continu</li>""}, {'', ""<li>Mises à jour régulières\xa0: révision et mise à jour des modèles de menaces à mesure que l'application évolue</li>""}, {'', '<li>Surveillance et rétroaction : utilisation de boucles de rétroaction pour améliorer les modèles de menaces en fonction des nouvelles informations et des menaces détectées.</li>'}, {""<h3>3. Collaboration entre les équipes de développement, d'exploitation et de sécurité</h3>"", ''}, {'', ""<p>Une modélisation efficace des menaces dans un environnement DevOps nécessite une collaboration étroite entre les équipes de développement, d'exploitation et de sécurité. Cette collaboration interfonctionnelle garantit que la sécurité est prise en compte à chaque étape du cycle de développement.</p>""}, {'', '<h4>Stratégies pour améliorer la collaboration</h4>'}, {'', ""<li>Champions de la sécurité : nommer des champions de la sécurité au sein des équipes de développement et d'exploitation pour défendre les meilleures pratiques de sécurité</li>""}, {'', ""<li>Formation régulière en matière de sécurité : proposer une formation continue en matière de sécurité aux développeurs et au personnel d'exploitation pour les sensibiliser et renforcer leurs compétences</li>""}, {'', '<li>Responsabilité partagée : promouvoir une culture de responsabilité partagée en matière de sécurité au sein de toutes les équipes.</li>'}, {'<h3>4. Intégration des outils de modélisation des menaces</h3>', ''}, {'', ""<p>De nombreux outils sont disponibles pour faciliter la modélisation des menaces au sein d'un workflow DevOps. Ces outils peuvent automatiser divers aspects de la modélisation des menaces, facilitant ainsi l'identification et l'atténuation des menaces de sécurité potentielles.</p>""}, {'', '<h4>Outils de modélisation des menaces les plus répandus</h4>'}, {'', '<li>OWASP Threat Dragon : un outil open source pour créer des modèles de menaces et visualiser les menaces potentielles</li>'}, {'', '<li>Outil de modélisation des menaces Microsoft\xa0: fournit une approche systématique de la modélisation des menaces avec des modèles prédéfinis</li>'}, {'', ""<li>IriusRisk : une plateforme qui s'intègre aux pipelines CI/CD pour automatiser la modélisation des menaces et l'évaluation des risques</li>""}, {'', '<h3>5. Études de cas et statistiques</h3>'}, {'', '<p>L’intégration de la modélisation des menaces dans un flux de travail DevOps est essentielle pour identifier et atténuer les menaces de sécurité potentielles avant qu’elles ne deviennent des problèmes majeurs. Des études de cas réelles et des preuves statistiques peuvent mettre en lumière les avantages tangibles de cette approche. Cette section se penche sur des études de cas notables, telles que les violations de données de Capital One et Equifax, pour souligner l’importance cruciale de la modélisation des menaces et de la surveillance continue dans les pratiques DevOps.</p>'}, {'', '<p>Violation de données chez Capital One</p>'}, {'', '<p>En 2019, Capital One a connu l’une des violations de données les plus importantes de l’histoire récente, exposant les informations personnelles de plus de 100 millions de clients. La violation a été causée par un pare-feu d’application Web (WAF) mal configuré, qui a permis à un attaquant d’accéder à l’environnement cloud Amazon Web Services (AWS) de Capital One. Cet incident met en évidence plusieurs points critiques concernant l’importance de la modélisation et de la surveillance continues des menaces dans un flux de travail DevOps.</p>'}, {'', '<p>La faille de sécurité de Capital One souligne la nécessité d’une gestion et d’une surveillance rigoureuses de la configuration. Une mauvaise configuration, comme celle qui s’est produite dans ce cas, peut avoir des conséquences dévastatrices si elle n’est pas détectée et corrigée rapidement. Une modélisation continue des menaces aurait pu identifier cette mauvaise configuration à un stade précoce, permettant à Capital One de résoudre le problème avant qu’il ne soit exploité. En outre, des évaluations de sécurité régulières et des outils de surveillance automatisés auraient pu alerter l’équipe de sécurité de la vulnérabilité à temps pour empêcher la faille.</p>'}, {'', '<p>La faille de sécurité de Capital One illustre également l’importance d’une approche globale de la sécurité qui inclut non seulement des mesures techniques, mais aussi des pratiques organisationnelles. En favorisant une culture de sensibilisation à la sécurité et en mettant en œuvre des pratiques de sécurité robustes tout au long du cycle de vie DevOps, les organisations peuvent réduire le risque d’incidents similaires. La modélisation continue des menaces garantit que la sécurité est une considération continue, plutôt qu’une tâche ponctuelle, et contribue à créer un environnement dans lequel les menaces potentielles sont identifiées et traitées de manière proactive.</p>'}, {'', '<p>Violation de données chez Equifax</p>'}, {'', ""<p>La violation de données d'Equifax de 2017 a exposé les informations personnelles d'environ 147 millions de personnes, ce qui en fait l'une des violations les plus importantes et les plus dommageables de l'histoire. La cause principale de la violation était une vulnérabilité non corrigée dans Apache Struts, un framework d'application Web largement utilisé. Cet incident met en évidence le besoin crucial d'intégrer des outils d'analyse de sécurité automatisés dans le pipeline CI/CD, un aspect clé de la modélisation des menaces dans DevOps.</p>""}, {'', ""<p>La faille de sécurité d'Equifax aurait pu être évitée si la vulnérabilité avait été identifiée et corrigée à temps. Des outils d'analyse de sécurité automatisés, intégrés au pipeline CI/CD, peuvent surveiller en permanence les vulnérabilités connues et alerter les développeurs de la nécessité d'appliquer des correctifs. En intégrant de tels outils, les entreprises peuvent s'assurer que leurs applications sont toujours à jour avec les derniers correctifs de sécurité, réduisant ainsi le risque d'exploitation par des attaquants.</p>""}, {'', '<p>De plus, la faille de sécurité d’Equifax souligne l’importance d’une posture de sécurité proactive. Dans un environnement DevOps, où le développement et le déploiement rapides sont la norme, il est essentiel de disposer de systèmes automatisés capables de suivre le rythme des changements. La modélisation continue des menaces et l’analyse automatisée de la sécurité offrent un moyen d’y parvenir, permettant aux organisations d’identifier et d’atténuer les vulnérabilités au fur et à mesure qu’elles apparaissent, plutôt qu’après qu’elles aient été exploitées.</p>'}, {'', ""<h4>Statistiques à l'appui de la modélisation des menaces dans DevOps</h4>""}, {'', '<p>Les données statistiques renforcent encore davantage l’intérêt d’intégrer la modélisation des menaces dans les pratiques DevOps. Selon Gartner, « d’ici 2022, 90 % des projets de développement logiciel affirmeront suivre les pratiques DevSecOps, contre 40 % en 2019 ». Cette augmentation significative reflète une reconnaissance croissante de l’importance d’intégrer la sécurité dans le flux de travail DevOps. Les organisations qui adoptent les pratiques DevSecOps, y compris la modélisation continue des menaces, sont mieux placées pour identifier et traiter les menaces de sécurité en amont, réduisant ainsi le risque de violations et d’autres incidents de sécurité.</p>'}, {'', ""<p>Le rapport State of DevOps 2021 de Puppet fournit des informations supplémentaires. Le rapport indique que les organisations qui intègrent la sécurité dans leurs pratiques DevOps ont 2,4 fois plus de chances de détecter les incidents de sécurité avant qu'ils ne causent des dommages importants. Ce résultat souligne l'efficacité des mesures de sécurité proactives, telles que la modélisation continue des menaces, pour identifier et atténuer les menaces avant qu'elles ne puissent avoir un impact négatif.</p>""}, {'', ""<p>Une enquête menée par le SANS Institute a révélé que 64 % des personnes interrogées ont constaté une amélioration de leur posture de sécurité après avoir mis en œuvre les pratiques DevSecOps. Cette amélioration est probablement due à la nature continue de la modélisation des menaces et des évaluations de sécurité dans un environnement DevOps, qui aide les organisations à garder une longueur d'avance sur les menaces émergentes. En mettant à jour en permanence les modèles de menaces et en intégrant des outils de sécurité automatisés, les organisations peuvent maintenir une posture de sécurité robuste qui s'adapte aux nouveaux défis et vulnérabilités.</p>""}, {'', ""<h4>Avantages de l'intégration de la modélisation des menaces dans DevOps</h4>""}, {'', '<p>Les études de cas et les statistiques présentées mettent en évidence plusieurs avantages clés de l’intégration de la modélisation des menaces dans un flux de travail DevOps\xa0:</p>'}, {'', '<li>Détection précoce des vulnérabilités : la modélisation continue des menaces et les outils d’analyse de sécurité automatisés permettent aux organisations d’identifier les vulnérabilités au début du processus de développement, réduisant ainsi le risque d’exploitation.</li>'}, {'', ""<li>Posture de sécurité proactive : en évaluant et en mettant à jour en permanence les modèles de menaces, les organisations peuvent maintenir une posture de sécurité proactive qui s'adapte aux nouvelles menaces et vulnérabilités.</li>""}, {'', '<li>Sensibilisation améliorée à la sécurité : l’intégration de la modélisation des menaces dans DevOps favorise une culture de sensibilisation à la sécurité, encourageant tous les membres de l’équipe à donner la priorité à la sécurité dans leur travail.</li>'}, {'', ""<li>Risque réduit de violations : la modélisation continue des menaces aide les organisations à identifier et à traiter les menaces de sécurité avant qu'elles ne deviennent des problèmes importants, réduisant ainsi le risque de violations de données et d'autres incidents de sécurité.</li>""}, {'', '<h4>Statistiques</h4>'}, {'', '<li>Selon un rapport de Gartner, « d’ici 2022, 90 % des projets de développement de logiciels prétendront suivre les pratiques DevSecOps, contre 40 % en 2019. »</li>'}, {'', ""<li>Le rapport State of DevOps 2021 de Puppet indique que les organisations qui intègrent la sécurité dans leurs pratiques DevOps sont 2,4 fois plus susceptibles de détecter les incidents de sécurité avant qu'ils ne causent des dommages importants.</li>""}, {'', '<li>Une enquête du SANS Institute a révélé que 64 % des personnes interrogées ont constaté une amélioration de leur posture de sécurité après avoir mis en œuvre les pratiques DevSecOps.</li>'}, {'', '<h3>6. Bonnes pratiques pour la mise en œuvre de la modélisation des menaces dans DevOps</h3>'}, {'', ""<p>La mise en œuvre de la modélisation des menaces dans un workflow DevOps est essentielle pour garantir que la sécurité est intégrée dès le départ au cycle de vie du développement logiciel. En suivant les meilleures pratiques, les organisations peuvent optimiser l'efficacité de leurs efforts de modélisation des menaces, ce qui conduit à des applications plus sécurisées et plus résilientes. Les sections suivantes développent les meilleures pratiques pour la mise en œuvre de la modélisation des menaces dans un environnement DevOps.</p>""}, {'', '<h4>Intégration précoce et continue</h4>'}, {'', '<p>Intégrer la modélisation des menaces dès le début</p>'}, {'', '<p>Le concept de sécurité « shift-left » souligne l’importance d’intégrer des mesures de sécurité dès les premières étapes du cycle de vie du développement logiciel. En intégrant la modélisation des menaces dès les premières phases de développement, les problèmes de sécurité potentiels peuvent être identifiés avant qu’ils ne soient profondément ancrés dans la base de code. L’intégration précoce de la modélisation des menaces garantit que les considérations de sécurité constituent un élément fondamental du processus de conception et d’architecture.</p>'}, {'', '<p>Mise à jour continue des modèles de menaces</p>'}, {'', ""<p>Les modèles de menaces ne doivent pas être des documents statiques créés une fois pour toutes puis oubliés. Ils doivent plutôt être des artefacts vivants qui sont continuellement mis à jour pour refléter les changements dans l'application, l'infrastructure et l'évolution du paysage des menaces. La mise à jour continue garantit que les modèles de menaces restent pertinents et efficaces pour identifier et atténuer les menaces potentielles pour la sécurité.</p>""}, {'', '<p>Utiliser des outils automatisés</p>'}, {'', ""<p>Les outils automatisés jouent un rôle crucial dans la facilitation de la modélisation continue des menaces et des évaluations de sécurité. Des outils tels que OWASP Threat Dragon, Microsoft Threat Modeling Tool et IriusRisk peuvent automatiser divers aspects de la modélisation des menaces, facilitant ainsi l'intégration de ces pratiques dans le pipeline CI/CD. L'automatisation permet de garantir que la modélisation des menaces est effectuée de manière cohérente et efficace, réduisant ainsi la charge de travail des équipes de développement et de sécurité.</p>""}, {'', '<h4>Approche collaborative</h4>'}, {'', '<p>Favoriser la collaboration interfonctionnelle</p>'}, {'', ""<p>Une modélisation efficace des menaces nécessite une collaboration étroite entre les équipes de développement, d'exploitation et de sécurité. Cette approche interfonctionnelle garantit que la sécurité est prise en compte sous différents angles et tout au long du cycle de développement. La collaboration peut être favorisée par des réunions régulières, des ateliers communs et une documentation partagée.</p>""}, {'', '<p>Nommer des champions de la sécurité</p>'}, {'', ""<p>La nomination de champions de la sécurité au sein des équipes de développement et d'exploitation peut contribuer à promouvoir une mentalité axée sur la sécurité. Ces personnes agissent en tant que défenseurs des meilleures pratiques de sécurité, en veillant à ce que les considérations de sécurité soient prioritaires et intégrées dans les flux de travail quotidiens. Les champions de la sécurité servent également de points de contact pour les questions et problèmes liés à la sécurité, comblant ainsi le fossé entre les différentes équipes.</p>""}, {'', '<p>Assurer une formation régulière en matière de sécurité</p>'}, {'', ""<p>Une formation continue en matière de sécurité est essentielle pour tenir tous les membres de l'équipe informés des dernières menaces, vulnérabilités et meilleures pratiques. La formation doit couvrir les principes fondamentaux de sécurité, les menaces spécifiques liées aux technologies utilisées et des exercices pratiques de modélisation et d'atténuation des menaces. Des formations régulières contribuent à créer une culture de sensibilisation à la sécurité et garantissent que tous les membres de l'équipe disposent des connaissances et des compétences nécessaires pour contribuer aux efforts de modélisation des menaces.</p>""}, {'', '<h4>Tirer parti des outils automatisés</h4>'}, {'', ""<p>Automatisez l'identification et l'atténuation des menaces</p>""}, {'', ""<p>Les outils de modélisation des menaces peuvent automatiser l'identification et l'atténuation des menaces de sécurité potentielles, rendant le processus plus efficace et cohérent. Des outils tels que OWASP Threat Dragon, Microsoft Threat Modeling Tool et IriusRisk offrent des fonctionnalités telles que la visualisation des modèles de menaces, la suggestion d'atténuations et l'intégration aux pipelines CI/CD. L'automatisation réduit l'effort manuel requis pour la modélisation des menaces et permet de garantir que les évaluations de sécurité sont effectuées régulièrement.</p>""}, {'', ""<p>Intégrer les outils d'analyse de sécurité dans le pipeline CI/CD</p>""}, {'', ""<p>L'intégration d'outils d'analyse de sécurité dans le pipeline CI/CD permet une détection continue des vulnérabilités. Des outils tels que Snyk, Veracode et Checkmarx peuvent analyser automatiquement le code, les dépendances et les configurations à la recherche de vulnérabilités dans le cadre du processus de création et de déploiement. L'analyse continue permet d'identifier les problèmes de sécurité de manière précoce, en fournissant aux développeurs un retour d'information immédiat et en leur permettant de corriger les vulnérabilités avant qu'elles n'atteignent la production.</p>""}, {'', '<h4>Examens et mises à jour réguliers</h4>'}, {'', '<p>Examiner et mettre à jour régulièrement les modèles de menaces</p>'}, {'', '<p>Des révisions et mises à jour régulières des modèles de menaces sont essentielles pour garantir leur efficacité continue. À mesure que les applications évoluent et que de nouvelles fonctionnalités sont ajoutées, les modèles de menaces doivent être revus pour tenir compte de ces changements. Des révisions régulières doivent être programmées à des étapes clés du cycle de vie du développement logiciel, par exemple avant les versions majeures ou après des modifications architecturales importantes.</p>'}, {'', '<p>Mettre en œuvre des boucles de surveillance et de rétroaction</p>'}, {'', ""<p>Les boucles de surveillance et de rétroaction sont essentielles pour améliorer en permanence les modèles de menace. En collectant des données sur les incidents de sécurité, les vulnérabilités et l'efficacité des modèles de menace, les organisations peuvent obtenir des informations sur les domaines à améliorer. Les boucles de rétroaction doivent impliquer des débriefings réguliers et des analyses post-mortem pour comprendre ce qui a bien fonctionné et ce qui pourrait être amélioré. Cette approche itérative permet d'affiner les modèles de menace et de garantir qu'ils restent pertinents et efficaces.</p>""}, {'', '<h4>Mesures et rapports</h4>'}, {'', '<p>Suivre les indicateurs de sécurité clés</p>'}, {'', ""<p>Le suivi des indicateurs de sécurité clés est essentiel pour mesurer l'efficacité des efforts de modélisation des menaces. Des indicateurs tels que le nombre de vulnérabilités identifiées et corrigées, le temps nécessaire pour résoudre les problèmes de sécurité et l'impact des incidents de sécurité peuvent fournir des informations précieuses sur la posture de sécurité de l'organisation. Ces indicateurs doivent être suivis au fil du temps pour identifier les tendances et mesurer les progrès.</p>""}, {'', '<p>Utilisez des indicateurs pour identifier les domaines à améliorer</p>'}, {'', '<p>Les indicateurs peuvent être utilisés pour identifier les domaines à améliorer dans la modélisation des menaces et les pratiques de sécurité globales. Par exemple, si certains types de vulnérabilités sont systématiquement identifiés, cela peut indiquer un besoin de formation supplémentaire ou de modifications des pratiques de développement. Les indicateurs peuvent également aider à hiérarchiser les efforts de sécurité, en veillant à ce que les ressources soient concentrées sur les domaines les plus critiques.</p>'}, {'', '<p>Démontrer la valeur aux parties prenantes</p>'}, {'', ""<p>Les rapports sur les indicateurs de sécurité clés permettent de démontrer la valeur de la modélisation des menaces aux parties prenantes. En montrant les avantages tangibles de la modélisation des menaces, tels que la réduction des vulnérabilités et des délais de résolution plus rapides, les organisations peuvent obtenir le soutien nécessaire pour poursuivre les investissements dans les pratiques de sécurité. Des rapports réguliers permettent également de tenir les parties prenantes informées de la posture de sécurité de l'organisation et des menaces émergentes.</p>""}, {'', '<p>La mise en œuvre de la modélisation des menaces dans un workflow DevOps est essentielle pour identifier et atténuer de manière proactive les menaces potentielles pour la sécurité. En suivant les meilleures pratiques (intégration précoce et continue, encouragement de la collaboration interfonctionnelle, utilisation d’outils automatisés, examen et mise à jour réguliers des modèles de menaces et suivi des indicateurs de sécurité clés), les entreprises peuvent améliorer leur posture de sécurité et créer des applications plus résilientes. À mesure que le paysage numérique continue d’évoluer, l’importance des mesures de sécurité proactives telles que la modélisation des menaces ne peut être surestimée. En intégrant la sécurité à chaque étape du SDLC, les entreprises peuvent s’assurer que leurs applications restent sécurisées et résilientes face aux menaces émergentes.</p>'}]"
Un rapport révèle des milliers de vulnérabilités potentielles dans les workflows GitHub,"[{'', ""<p>Une analyse de 2,5 millions de fichiers de workflow GitHub Actions appartenant à 553 000 organisations et utilisateurs personnels publiée aujourd'hui suggère que de nombreuses équipes DevSecOps qui utilisent la plateforme d'intégration continue/livraison continue (CI/CD) GitHub pour créer et déployer des applications s'appuient sur des workflows qui sont souvent fondamentalement peu sûrs.</p>""}, {'', ""<p>Publié par Legit Security, un fournisseur d'une plateforme de gestion de la posture de sécurité des applications, le rapport a révélé l'interpolation d'entrées non fiables dans plus de 7 000 workflows ; l'exécution de code non fiable dans plus de 2 500 workflows ; et l'utilisation d'artefacts non fiables dans plus de 3 000 workflows.</p>""}, {'', '<p>De plus, 98 % des références utilisées par les tâches et les étapes ne suivent pas les meilleures pratiques d’épinglage des dépendances, tandis que 86 % des workflows ne limitent pas les autorisations des jetons.</p>'}, {'', ""<p>De nombreuses actions créées par des tiers et susceptibles d'être réutilisées par les équipes DevOps sont également peu sûres, principalement parce qu'elles ont été créées par de petites équipes qui manquent d'expertise en cybersécurité. Sur les 19\xa0113 actions GitHub personnalisées présentes sur le marché, seules 913 ont été créées par des utilisateurs GitHub vérifiés, et 18 % d'entre elles présentent des dépendances vulnérables. Au total, 762 actions sont archivées et ne reçoivent pas de mises à jour régulières.</p>""}, {'', '<p>Noam Dotan, chercheur en sécurité chez Legit Security, a déclaré qu’il était évident qu’il restait encore beaucoup à faire pour sécuriser les chaînes d’approvisionnement de logiciels que les cybercriminels cherchent de plus en plus à compromettre dans l’espoir d’injecter des logiciels malveillants dans plusieurs applications en aval. Bien qu’une équipe DevSecOps ne puisse pas faire grand-chose face à une vulnérabilité trouvée au cœur d’une plateforme CI/CD, il existe de nombreuses possibilités de remédier aux flux de travail DevOps au niveau des applications, a-t-il ajouté.</p>'}, {'', '<p>Par exemple, de nombreuses équipes DevOps utilisent des flux de travail qui comportent des dépendances risquées ou fournissent des privilèges d’accès trop permissifs qui créent des vulnérabilités qui doivent être traitées avant qu’elles ne soient facilement exploitées, a noté Dotan.</p>'}, {'', '<h3>La nécessité de sécuriser davantage les chaînes d’approvisionnement en logiciels</h3>'}, {'', '<p>GitHub n’est bien sûr pas la seule plateforme CI/CD à rencontrer des problèmes de sécurité. À la suite d’une série de cyberattaques très médiatisées sur les chaînes d’approvisionnement de logiciels, les chercheurs en sécurité se concentrent plus que jamais sur la découverte de vulnérabilités dans les outils, les plateformes et les flux de travail DevOps. Alors que de plus en plus d’entreprises adoptent les principes de sécurité dès la conception pour créer des applications plus sécurisées, la prise de conscience de la nécessité de renforcer la sécurité des chaînes d’approvisionnement de logiciels a fortement augmenté ces dernières années. Le défi est que, compte tenu du nombre considérable d’outils, de plateformes, de pipelines et de flux de travail qui sillonnent une chaîne d’approvisionnement de logiciels, l’effort requis pour atteindre cet objectif est gigantesque.</p>'}, {'', ""<p>Malheureusement, les cybercriminels sont devenus plus habiles, par exemple, à voler des identifiants qui leur donnent un accès quasi illimité aux environnements de développement d'applications. Une fois que les cybercriminels y ont accès, il devient alors possible, par exemple, d'intégrer des logiciels malveillants dans des bases de code qui ne seront peut-être activées que plusieurs mois plus tard.</p>""}, {'', '<p>Aucun développeur ne souhaite se réveiller un matin et découvrir qu’une cyberattaque est due à une erreur de sa part. Le problème est qu’il est trop facile pour les développeurs de commettre une simple erreur qui peut avoir des conséquences catastrophiques. Il incombe aux équipes DevSecOps de s’assurer que la chaîne d’approvisionnement des logiciels elle-même est aussi sécurisée que possible. Sinon, tout le temps et les efforts consacrés à apprendre aux développeurs comment écrire un code plus sécurisé n’auront probablement servi à rien.</p>'}]"
Aider les développeurs à créer des API sécurisées dès le départ,"[{'', '<p>Les entreprises modernes gèrent des dizaines de milliers d’API. Si cette interconnexion favorise l’innovation et l’agilité, elle crée également une surface d’attaque coûteuse et tentaculaire. Rien qu’en 2022, on estime que les entreprises américaines ont perdu jusqu’à 23 milliards de dollars à cause de compromissions liées aux API, et 59 % des organisations ont été contraintes de ralentir le déploiement de nouvelles applications en production en raison de problèmes de sécurité des API.</p>'}, {'', ""<p>Bien que les développeurs soient en grande partie responsables de la création et de la gestion des API au sein d'une organisation, ils ont rarement accès aux outils réseau nécessaires pour les sécuriser ou les contrôler. Pour minimiser les risques liés aux API, les développeurs doivent avoir la possibilité de les créer en toute sécurité dès le départ. Voici les mesures et outils de sécurité nécessaires pour obtenir les meilleurs résultats.</p>""}, {'<h3>Bonnes pratiques en matière de sécurité des API</h3>', ''}, {'', '<p>Les API sont conçues pour aider les applications à communiquer entre elles. Elles ont donc souvent accès aux données de l’entreprise et des clients, notamment aux informations financières et aux enregistrements de transactions. Ce n’est pas un secret, et c’est pourquoi les pirates informatiques ciblent souvent les API, en particulier celles exposées aux requêtes réseau. Pour atténuer ce risque, les développeurs doivent mettre en œuvre les meilleures pratiques de sécurité dans chaque API qu’ils créent, notamment en ajoutant l’authentification et l’autorisation, les contrôles d’accès et le chiffrement pour toutes les requêtes et réponses d’API.</p>'}, {'', '<h3>Authentification et autorisation</h3>'}, {'', '<p>Une sécurité API efficace repose sur l’authentification (qui sont les utilisateurs) et l’autorisation (ce que les utilisateurs peuvent faire) pour contrôler l’accès aux ressources. Les applications côté client doivent inclure un jeton dans l’appel d’API, permettant au service de valider l’identité du client via l’authentification à l’aide d’une norme comme OAuth 2.0, OpenID Connect ou JSON Web Tokens. Ensuite, l’autorisation doit déterminer les actions autorisées pour le client authentifié. Cela garantit que les utilisateurs ou les appareils ne disposent que des autorisations minimales requises pour effectuer des tâches spécifiques, conformément au principe du moindre privilège.</p>'}, {'', ""<h3>Contrôles d'accès</h3>""}, {'', ""<p>Toute API qui accorde un accès tiers aux systèmes et données internes doit inclure des contrôles d'accès et une surveillance robustes. Les développeurs peuvent mettre en œuvre ces contrôles via un middleware pour vérifier l'identité de l'utilisateur, déterminer les actions autorisées et définir quand ces actions sont autorisées et pendant combien de temps. Le middleware peut également limiter le débit et appliquer des politiques de sécurité telles que le géorepérage, la validation du contenu des E/S et la désinfection des données. Pour une protection avancée, les développeurs doivent placer les API derrière une passerelle API, un pare-feu ou un pare-feu d'application Web utilisant HTTPS pour crypter la communication et filtrer le trafic malveillant.</p>""}, {'', '<h3>Cryptage</h3>'}, {'', ""<p>Le chiffrement des requêtes et des réponses API peut contribuer à protéger contre les écoutes clandestines et les violations de données. Les développeurs doivent utiliser HTTPS comme protocole de communication pour chiffrer tout le trafic et protéger les informations sensibles telles que les informations d'identification et les données échangées entre l'API et ses clients. Ils peuvent activer HTTP Strict Transport Security (HSTS) au lieu de rediriger pour garantir que les clients API utilisent toujours HTTPS, évitant ainsi les fuites d'informations accidentelles dues à des connexions non sécurisées. En intégrant le chiffrement au cœur de l'API, les développeurs peuvent garantir que les données sensibles restent protégées pendant la communication.</p>""}, {'', ""<h3>Amélioration de la sécurité des API grâce à l'accès des développeurs aux outils de mise en réseau</h3>""}, {'', '<p>Ces bonnes pratiques peuvent réduire considérablement le risque de failles de sécurité des API, mais de nombreux développeurs n’ont pas directement accès aux outils nécessaires pour les mettre en œuvre. Les passerelles API, qui sont utilisées pour gérer le trafic API, présentent un risque car les développeurs n’ont aucun contrôle sur elles. Cela augmente la probabilité d’une rupture de contrat entre les services API et la gestion du trafic, ce qui peut entraîner des temps d’arrêt et une sécurité affaiblie en raison de mauvaises configurations.</p>'}, {'', ""<p>Les passerelles API définies par les développeurs peuvent éliminer ces frictions et rationaliser le processus de déploiement. Elles permettent aux développeurs d'établir une connectivité sécurisée à leurs API en y intégrant directement les entrées. La déclaration des entrées, qui englobent des fonctionnalités telles que les hautes performances, la résilience, la sécurité et l'observabilité, directement dans l'application peut simplifier le processus de développement et réduire les incidents de sécurité et de performances. Les développeurs peuvent s'assurer que les requêtes API contiennent les paramètres exacts attendus par l'API pour éliminer le risque de rupture de contrat, d'accès non autorisé, etc.</p>""}, {'', '<p>En donnant aux développeurs l’accès à des outils de gestion du trafic robustes tels que les passerelles API, ils peuvent créer des API sécurisées dès le départ. En combinant cette fonctionnalité avec l’authentification et l’autorisation, les contrôles d’accès et le chiffrement, on peut réduire considérablement les cas de compromission liés aux API, tout en améliorant les délais de mise sur le marché et les performances. Les développeurs sont déjà chargés de créer et de gérer les API ; ils doivent également être en mesure de les sécuriser facilement.</p>'}]"
Une enquête révèle de nombreuses failles dans la chaîne d'approvisionnement des logiciels,"[{'', ""<p>Une enquête mondiale menée auprès de 900 professionnels de la sécurité des applications révèle que près des deux tiers d'entre eux travaillent pour des organisations dont la chaîne d'approvisionnement en logiciels a été compromise au cours des deux dernières années, 18 % d'entre eux ayant été victimes de cette situation au cours de l'année écoulée.</p>""}, {'', ""<p>Menée par Checkmarx, un fournisseur d'outils de test de sécurité des applications, l'enquête révèle également que 100 % des personnes interrogées ont connaissance d'une violation de leur chaîne d'approvisionnement en logiciels survenue à un moment donné dans le passé.</p>""}, {'', '<p>Sans surprise, l’enquête révèle que les trois quarts des répondants (75 %) sont désormais soit très préoccupés (39 %), soit préoccupés (36 %) par la sécurité de leur chaîne d’approvisionnement en logiciels.</p>'}, {'', '<p>En outre, plus de la moitié (57 %) des entreprises interrogées ont déclaré que la sécurité de la chaîne d’approvisionnement en logiciels était un domaine prioritaire ou important, et 54 % d’entre elles envisageaient d’utiliser ou d’étudier un type de solution. Cependant, selon l’enquête, seuls 7 % ont acquis et mis en œuvre un outil ou une plateforme pour sécuriser spécifiquement leur chaîne d’approvisionnement en logiciels.</p>'}, {'', ""<p>Du côté positif, la moitié (50 %) des personnes interrogées demandent désormais des nomenclatures de logiciels (SBOM) aux entités qui fournissent des logiciels à leur organisation, mais moins de la moitié (47 %) ont déclaré que leur organisation pouvait mettre en œuvre efficacement les SBOM, selon l'enquête.</p>""}, {'', ""<p>Renny Shen, vice-président du marketing de portefeuille chez Checkmarx, a déclaré que le défi réside dans l'ampleur des efforts nécessaires pour sécuriser les chaînes d'approvisionnement en logiciels. En plus des SBOM et du déploiement d'outils pour découvrir les vulnérabilités et les logiciels malveillants, les équipes DevSecOps doivent également, par exemple, adopter des initiatives de confiance zéro pour sécuriser l'accès à leur chaîne d'approvisionnement en logiciels.</p>""}, {'', '<p>Il n’existe pas d’outil ou de plateforme unique permettant aux équipes DevSecOps d’atteindre cet objectif, a-t-il ajouté.</p>'}, {'', '<p>En général, la sécurisation des logiciels reste un défi car même si une vulnérabilité est découverte, une équipe DevSecOps peut ne pas être en mesure de la corriger, a noté Shen. Par exemple, plus de la moitié (56 %) des applications déployées sont basées sur des packages de code open source dont les entreprises dépendent de mainteneurs externes pour la mise à jour.</p>'}, {'', '<p>Le point positif est que la sécurité de la chaîne d’approvisionnement logicielle est devenue une question de haut niveau, a déclaré Shen. Le défi est que de nombreuses organisations n’ont pas encore défini un ensemble d’indicateurs clés de performance (KPI) qui leur permettent de s’assurer que les meilleures pratiques DevSecOps sont adoptées. À l’heure actuelle, l’accent n’est pas suffisamment mis sur la sécurité des applications, de sorte que les développeurs continueront de consacrer la majeure partie de leur temps et de leurs efforts à l’écriture de nouveau code plutôt qu’à la correction du code existant, a-t-il noté.</p>'}, {'', '<p>Malheureusement, la plupart des entreprises ne donnent pas la priorité à la sécurité des applications. Tant qu’il n’y aura pas de changement fondamental dans les motivations, il est peu probable que les développeurs consacrent plus de temps à la correction des vulnérabilités. Des efforts ont été faits pour transférer davantage de responsabilités en matière de sécurité vers les développeurs, mais le succès a été mitigé. Les développeurs ont généralement accès à davantage d’outils, mais à moins que ces outils ne fassent apparaître des problèmes au fur et à mesure que les développeurs écrivent du code, il est peu probable qu’ils aient un impact significatif sur l’amélioration de l’état général de la sécurité des applications.</p>'}, {'', '<p>Espérons que l’essor de l’intelligence artificielle générative (IA) simplifiera bientôt la recherche et la correction des vulnérabilités, par exemple en créant automatiquement le correctif requis. En attendant, toutefois, sécuriser les chaînes d’approvisionnement en logiciels exige un niveau de vigilance qui, malgré les meilleures intentions, reste difficile à atteindre et à maintenir.</p>'}]"
La communauté des logiciels open source s'indigne d'un autre CVE,"[{'', ""<p>Un autre mainteneur d'un projet de logiciel open source a décidé de ne plus mettre à jour activement les utilitaires d'analyse d'adresses IP largement utilisés par les développeurs JavaScript.</p>""}, {'', ""<p>Le projet « ip » n'est désormais disponible qu'en lecture seule sur le référentiel de logiciels GitHub après qu'une vulnérabilité découverte plus tôt cette année s'est vu attribuer un identifiant CVE (Common Vulnerabilities and Exposure) 2023-42282.</p>""}, {'', '<p>De nombreux projets de logiciels open source sont le fruit d’un travail acharné, qui implique une poignée de mainteneurs bénévoles qui ne disposent pas des ressources nécessaires pour enquêter, vérifier et corriger chaque vulnérabilité. En fait, comme dans ce cas, le développeur du projet « ip » rejette la sévérité de l’évaluation CVE.</p>'}, {'', '<p>Cependant, à mesure que de plus en plus d’organisations utilisent ce logiciel, la nécessité de remédier à une vulnérabilité potentielle devient un problème de sécurité des applications plus pressant.</p>'}, {'', ""<p>Paul Nashawaty, responsable de la pratique du développement d'applications au sein du groupe Futurum, a déclaré que le problème est que tous les CVE signalés ne sont pas aussi graves. De nombreuses bibliothèques sont signalées par des CVE en raison de vulnérabilités potentielles qui pourraient être exploitées dans des conditions spécifiques. Les développeurs de ces bibliothèques affirment souvent que ces vulnérabilités ne sont pas susceptibles d'être exploitées dans des scénarios réels, a-t-il ajouté.</p>""}, {'', ""<p>Quelle que soit la personne qui assume la responsabilité du risque, les logiciels malveillants exploitent souvent les interactions entre plusieurs composants. Chaque composant peut être sécurisé de manière isolée, mais peut être combiné de manière à produire un comportement non sécurisé. Ce problème souligne l'importance de se concentrer sur la sécurité de l'ensemble du système plutôt que sur celle de ses parties individuelles, a déclaré Nashawaty.</p>""}, {'', '<p>Les organisations doivent donc comprendre tous les risques que peuvent créer les dépendances à l’égard d’un seul logiciel, a-t-il ajouté.</p>'}, {'', '<h3>Comment sécuriser les projets open source</h3>'}, {'', ""<p>En général, la communauté open source se demande comment sécuriser les projets de logiciels open source qui ne disposent pas d'une large communauté de développeurs capables de remédier aux vulnérabilités. Ces efforts incluent la mise à disposition de développeurs supplémentaires pour corriger des vulnérabilités spécifiques lorsque cela est nécessaire.</p>""}, {'', '<p>Parallèlement, de nombreuses organisations revoient leurs chaînes d’approvisionnement en logiciels qui incluent des logiciels open source. Si le projet ne dispose pas des ressources nécessaires pour remédier à une vulnérabilité découverte rapidement, bon nombre de ces organisations choisissent de réduire leur dépendance à ce logiciel.</p>'}, {'', '<p>Chaque équipe DevSecOps doit décider dans quelle mesure elle est à l’aise avec les logiciels open source. Cependant, l’époque où les développeurs téléchargeaient systématiquement du code partout où ils le trouvaient est révolue. Les cybercriminels sont devenus particulièrement habiles à traquer les vulnérabilités connues, de sorte que chaque fois qu’une vulnérabilité est découverte, il ne faut généralement pas longtemps avant qu’elle ne soit exploitée.</p>'}, {'', '<p>Bien entendu, selon l’endroit où le code est exécuté, il existe un monde de différence entre la présence d’une vulnérabilité et les chances qu’elle soit exploitée. De nombreuses équipes DevSecOps n’hésitent pas à exécuter des logiciels présentant des vulnérabilités connues si, par exemple, cette application n’est pas accessible via Internet.</p>'}, {'', '<p>D’une manière ou d’une autre, la sécurité des logiciels déployés dans les environnements informatiques doit toutefois être améliorée. Après tout, les logiciels inaccessibles aujourd’hui pourraient facilement devenir accessibles par inadvertance via Internet demain, à mesure que de plus en plus d’applications seront intégrées. En ce sens, de nombreuses équipes DevSecOps pourraient décider que la meilleure part de la valeur consiste à être en sécurité quel que soit l’endroit où le logiciel est exécuté plutôt qu’à s’en excuser demain.</p>'}]"
Aqua Security met en lumière les angles morts de la gestion des secrets,"[{'', '<p>Un rapport publié par Aqua Security révèle que jusqu’à 18 % des secrets exposés par inadvertance ne sont pas découverts.</p>'}, {'', ""<p>Yakir Kadkoda, chercheur principal de l'équipe Aqua Nautilus, a déclaré que même après que les équipes DevSecOps pensent avoir supprimé un secret, elles négligent le fait que ces mêmes secrets ont été stockés dans un cache ailleurs, par exemple, par un service cloud sur lequel ils s'appuient pour stocker du code et créer des applications.</p>""}, {'', '<p>De plus, ces mêmes secrets exposés sont susceptibles d’être inclus dans n’importe quel miroir ou clone de ce référentiel, note le rapport.</p>'}, {'', ""<p>Ces angles morts dans les flux de travail DevSecOps créent ce qui sont essentiellement des secrets fantômes qui, des années plus tard, peuvent revenir hanter les équipes de développement d'applications, a noté Kadkoda.</p>""}, {'', ""<p>La gestion des secrets est devenue un enjeu majeur, car un pourcentage important de failles de sécurité se produit simplement parce que des cybercriminels ont réussi à accéder aux informations d'identification. Parfois, ces informations d'identification sont volées directement aux utilisateurs finaux, mais dans de nombreux cas, les cybercriminels ont pu accéder à des informations d'identification d'application et d'infrastructure qui n'étaient pas chiffrées.</p>""}, {'', '<p>Par exemple, le rapport Aqua Security a révélé que les méthodes d’analyse conventionnelles omettaient près de 18 % des secrets potentiels dans plus de 50 000 référentiels créés par les 100 plus grandes organisations utilisant la plateforme GitHub. Les chercheurs d’Aqua Security ont utilisé ces secrets pour accéder à des environnements cloud complets, ce qui leur a permis d’accéder à des clusters Kubernetes, des plateformes de télémétrie, des outils d’analyse, des périphériques réseau, des secrets SNMP et des images de caméra.</p>'}, {'', '<h3>Des secrets codés en dur</h3>'}, {'', '<p>Le problème est que la plupart de ces secrets ne peuvent être découverts par aucun des outils d’analyse les plus utilisés, explique Kadkoda. En effet, les modèles clés des interfaces de programmation d’applications (API) ne sont souvent pas conformes aux modèles d’expressions régulières standard, ce qui rend la détection plus difficile. Les secrets codés en dur peuvent également être stockés de nombreuses manières et peuvent se trouver dans des emplacements imprévisibles qui se situent au-delà des limites habituelles des fichiers de configuration ou des paramètres d’URL.</p>'}, {'', '<p>De plus, les informations d’identification présentent des niveaux d’entropie variables, ce qui indique que toutes ne seront pas facilement détectables en fonction de leur complexité.</p>'}, {'', ""<p>Enfin, les scanners peuvent manquer complètement de vastes zones de la base de code, en raison de la quantité limitée de données d'événements pouvant être analysées sur la plate-forme de gestion du code source (SCM).</p>""}, {'', ""<p>Le rapport recommande de créer un ensemble de données historiques des commits passés plutôt que de s'appuyer sur une API exposée par GitHub. Les équipes DevSecOps peuvent collecter tous les commits enregistrés pour un référentiel cible, puis vérifier si ces commits sont inclus dans une version miroir de leur référentiel. Si un commit n'est pas présent dans la version miroir, il serait conseillé de récupérer ce commit sur GitHub et de le scanner à la recherche de secrets, indique le rapport.</p>""}, {'', '<p>Bien que personne ne soit généralement récompensé pour avoir découvert et corrigé des secrets exposés, les développeurs d’applications ont tout intérêt à participer à tout processus de vérification par souci d’auto-préservation, a noté Kadkoda. Après tout, le jour où une brèche sera reliée à un secret qui a été laissé exposé, il ne faudra pas longtemps avant que les équipes de cybersécurité forensique déterminent comment ce secret est tombé entre de mauvaises mains.</p>'}]"
"La plupart des projets Open Source critiques manquent de code sécurisé en mémoire, selon la CISA","[{'', ""<p>L'agence de cybersécurité la plus importante du pays continue d'exhorter les développeurs de logiciels à adopter des langages de programmation sécurisés en mémoire pour aider à réduire le nombre de vulnérabilités dans leurs produits, plus récemment à travers un rapport montrant que plus de la moitié des projets open source largement utilisés contiennent du code non sécurisé en mémoire.</p>""}, {'', '<p>La CISA et le FBI ont également découvert que 55 % des lignes de code des projets étaient écrites dans des langages non sécurisés en mémoire et que les projets les plus importants étaient écrits de manière disproportionnée dans de tels langages. De plus, même les projets qui étaient censés être programmés dans des langages sécurisés en mémoire incluaient certains composants créés avec du code non sécurisé en mémoire.</p>'}, {'', ""<p>Dans le rapport conjoint de 22 pages publié cette semaine et élaboré en collaboration avec leurs homologues du Canada et de l'Australie, les agences ont recommandé aux éditeurs de logiciels de créer des feuilles de route pour la transition vers des feuilles de route sûres en matière de mémoire, y compris des plans pour aborder la sécurité de la mémoire dans les dépendances externes, qui ont tendance à inclure les logiciels open source (OSS).</p>""}, {'', ""<p>Le rapport, « Exploring Memory Safety in Critical Open Source Projects », « fournit un point de départ pour ces feuilles de route en examinant l'ampleur du risque de sécurité de la mémoire dans certains OSS », ont écrit les agences.</p>""}, {'', ""<p>Depuis plus d'un an, la CISA et d'autres agences gouvernementales militent en faveur de langages respectueux de la mémoire, encourageant les développeurs à s'éloigner de C et C++ et à adopter des langages tels que Rust, C#, Go, Java, Python et Swift.</p>""}, {'', ""<p>Selon la CISA, une telle transition éliminerait de nombreux problèmes de sécurité de la mémoire qui hantent les développeurs de logiciels depuis des décennies et qui sont à l'origine des failles les plus courantes dans les logiciels. Ces vulnérabilités affectent la manière dont la mémoire est consultée, écrite ou allouée d'une manière qui n'est pas prévue dans les langages de programmation.</p>""}, {'', ""<p>Elles peuvent entraîner davantage de mises à jour, de correctifs et de réponses aux incidents qui peuvent coûter cher à la fois au fabricant du logiciel et à ses utilisateurs. Les vulnérabilités ouvrent également le logiciel à l'exploitation par des acteurs malveillants. Les failles peuvent inclure des dépassements de mémoire tampon, l'utilisation de mémoire non initiée et l'utilisation après libération.</p>""}, {'', '<p>Les langages à mémoire sécurisée empêchent essentiellement les programmeurs de créer du code pouvant entraîner des bogues de mémoire et des failles de sécurité en incluant des fonctionnalités qui détectent automatiquement les erreurs d’accès à la mémoire, comme les pointeurs suspendus et les dépassements de tampon, au moment de la compilation et de l’exécution. C, C++ et les langages similaires non sécurisés en mémoire ne disposent pas de telles fonctions automatiques, ce qui conduit à davantage de bogues dans la version finale du code.</p>'}, {'', '<p>« Les langages non sécurisés en termes de mémoire nécessitent que les développeurs gèrent correctement l’utilisation et l’allocation de la mémoire », ont écrit les agences dans le rapport. « Les erreurs, qui se produisent inévitablement, peuvent entraîner des vulnérabilités en matière de sécurité de la mémoire, telles que les dépassements de tampon et l’utilisation après libération. L’exploitation réussie de ces types de vulnérabilités peut permettre aux adversaires de prendre le contrôle des logiciels, des systèmes et des données. »</p>'}, {'', '<p>Cela dit, « les langages à mémoire sécurisée déplacent la couche d’abstraction et la responsabilité de l’écriture de code à mémoire sécurisée du développeur vers le compilateur ou l’interpréteur, réduisant ainsi considérablement les possibilités d’introduire des vulnérabilités en matière de sécurité de la mémoire. »</p>'}, {'', '<p>Les 172 projets open source analysés proviennent de la liste des projets critiques du groupe de travail Securing Critical Projects de l’Open Source Security Foundation (OpenSSF).</p>'}, {'', '<p>Les agences ont constaté que même pour les projets écrits dans des langages sécurisés en termes de mémoire, il peut toujours y avoir des failles de sécurité de la mémoire.</p>'}, {'', '<p>« Cela peut être dû à l’utilisation directe de langages non sécurisés en mémoire ou à une dépendance externe à des projets qui utilisent des langages non sécurisés en mémoire », ont-ils écrit. « De plus, les exigences fonctionnelles de bas niveau visant à désactiver la sécurité de la mémoire peuvent créer des opportunités de vulnérabilités de sécurité de la mémoire dans le code écrit dans des langages par ailleurs sécurisés en mémoire. Ces limitations soulignent la nécessité d’une utilisation continue et diligente de langages de programmation sécurisés en mémoire, de pratiques de codage sécurisées et de tests de sécurité. »</p>'}, {'', '<p>Neatsun Ziv, cofondateur et PDG d’OX Security, a déclaré qu’il n’était pas surpris que bon nombre de ces projets utilisent des langages non sécurisés en mémoire. L’un des obstacles à la transition vers un code sécurisé en mémoire est la prévalence des systèmes hérités construits avec C et C++.</p>'}, {'', '<p>« La réécriture de ces codes dans des langages modernes et sûrs en termes de mémoire est non seulement coûteuse mais également complexe, ce qui peut entraîner des perturbations dans les opérations commerciales critiques », a déclaré Ziv. « Le principal défi consiste à trouver un équilibre entre la sécurité renforcée et les implications financières. »</p>'}, {'', '<p>Il a recommandé aux entreprises de créer des plans détaillés pour migrer vers des langages sécurisés en mémoire, notamment en donnant la priorité aux composants les plus critiques. En outre, elles devraient utiliser des outils d’analyse de code et des compilateurs avancés pour détecter et corriger automatiquement les pratiques de codage dangereuses et établir des cadres de gouvernance clairs qui intègrent la sécurité de la mémoire et les pratiques de codage sécurisées tout au long du cycle de vie du développement logiciel.</p>'}, {'', ""<p>« Il est essentiel de se concentrer sur la sécurité de la mémoire pour améliorer la sécurité du développement logiciel futur », a déclaré Ziv. « Cependant, la transition à partir des systèmes existants implique un investissement initial important et une évaluation minutieuse des coûts, des avantages et des compromis potentiels en matière de sécurité pour chaque organisation, c'est pourquoi il faut beaucoup de temps aux entreprises pour effectuer la transition. »</p>""}, {'', ""<p>Le rapport s'appuie sur un autre document, « The Case for Memory Safe Roadmaps », que la CISA et des agences d'autres pays ont publié en décembre 2023. La directrice de la CISA, Jen Easterly, a alors placé l'adoption d'un codage sécurisé par mémoire dans les termes de sécurité nationale et a déclaré qu'il s'agissait d'un élément clé de l'initiative Secure By Design du gouvernement fédéral visant à encourager les développeurs à intégrer des capacités de sécurité tout au long du cycle de vie du développement logiciel plutôt que de les ajouter à la fin.</p>""}, {'', '<p>Cela s’inscrit également dans le cadre d’une autre initiative de l’administration Biden visant à retirer aux utilisateurs la responsabilité de la sécurisation des logiciels et autres technologies et à la placer sur les épaules des développeurs.</p>'}, {'', '<p>En février, la Maison Blanche a publié un rapport technique qui renforçait l’argument selon lequel une utilisation accrue de langages à mémoire sécurisée éliminerait une série de failles de sécurité, le directeur national de la cybersécurité, Harry Coker, déclarant dans un communiqué que « nous, en tant que nation, avons la capacité – et la responsabilité – de réduire la surface d’attaque dans le cyberespace et d’empêcher des catégories entières de failles de sécurité de pénétrer dans l’écosystème numérique ».</p>'}]"
Orca Security ajoute la possibilité d'analyser le code source à la recherche de vulnérabilités,"[{'', '<p>Orca Security a étendu cette semaine la portée de son portefeuille de cybersécurité pour inclure une application qui analyse le code source stocké dans les référentiels GitHub et GitLab à la recherche de vulnérabilités.</p>'}, {'', ""<p>Le PDG de la société, Gill Geron, a déclaré que l'objectif est de permettre aux organisations de découvrir les vulnérabilités bien avant que le code ne se retrouve dans un environnement de production en utilisant la technologie d'analyse latérale développée par Orca Security pour analyser tous les actifs GitHub et GitLab afin d'identifier les points chauds à risque, y compris les mauvaises configurations.</p>""}, {'', ""<p>Orca Security Cloud utilise une approche SideScanning pour identifier les problèmes qui utilise l'accès en lecture seule au stockage en bloc pour créer un profil de risque. Cette approche élimine la nécessité pour les équipes DevOps de déployer et de maintenir un logiciel agent pour garantir la sécurité du cloud. La plateforme analyse ensuite les charges de travail et les métadonnées de configuration du cloud pour créer une carte des risques qui permet aux équipes DevOps de mieux hiérarchiser les efforts de correction.</p>""}, {'', '<p>L’extension de cette capacité aux référentiels de code est essentielle pour permettre aux équipes DevSecOps de remédier aux problèmes dès le début du cycle de développement logiciel, a déclaré Geron. Aujourd’hui, beaucoup trop d’efforts sont consacrés à la correction des vulnérabilités après la création de l’application ou, pire encore, après son déploiement. Un récent rapport d’Orca Security a révélé que 62 % des organisations présentent de graves vulnérabilités dans leurs référentiels de code source, tandis que 70 % ont des secrets non chiffrés. Ces problèmes pourraient être évités si des analyses étaient exécutées le plus tôt possible sur le code source stocké dans les référentiels, a noté Geron.</p>'}, {'', ""<p>L'application développée par Orca Security est conçue pour être déployée directement sur les plateformes GitHub ou GitLab, où elle utilise des métadonnées pour découvrir automatiquement tous les référentiels afin de créer un inventaire des actifs logiciels. Elle affiche ensuite des instructions de correction pour chaque alerte afin de rationaliser les flux de travail DevSecOps.</p>""}, {''}, {'', '<p>On ne sait pas exactement dans quelle mesure les entreprises transfèrent la responsabilité de la sécurité des applications aux développeurs, mais quelle que soit la personne chargée de la correction, le processus global doit être simplifié. Aujourd’hui, les développeurs sont souvent submergés d’alertes qui finissent par être ignorées simplement parce qu’il n’y a pas suffisamment de conseils de correction. Dans d’autres cas, la correction peut être gérée plus efficacement par une équipe DevSecOps pour le compte du développeur.</p>'}, {'', ""<h3>Orca utilise déjà l'IA</h3>""}, {'', '<p>Bien entendu, un jour viendra où l’intelligence artificielle (IA) pourra automatiser la correction des vulnérabilités. Orca Security, par exemple, utilise déjà l’IA générative via une alliance avec OpenAI pour faciliter la détermination des alertes pouvant être reliées au même problème principal.</p>'}, {'', '<p>En attendant, la plupart des correctifs à appliquer continuent d’être créés et déployés par les développeurs et les équipes DevSecOps qui les prennent en charge. Le défi actuel est qu’il y a plus de vulnérabilités que de temps pour les corriger, les organisations doivent donc décider des problèmes à traiter en priorité. Malheureusement, on a aussi tendance à traiter les problèmes les plus simples en premier, quelle que soit la gravité de la vulnérabilité. Orca Security Cloud promet de faciliter la priorisation des efforts de correction en fonction du risque qu’ils représentent pour l’entreprise par rapport à la facilité avec laquelle ils peuvent être corrigés.</p>'}]"
Assurer la sécurité des applications de la conception à l'exploitation avec DevSecOps,"[{'', ""<p>Un développement sûr est essentiel pour toute entreprise qui crée des logiciels, que ce soit pour son propre usage ou pour d'autres. Les principes DevSecOps se concentrent sur l'automatisation des processus de sécurité de l'information et l'introduction de mesures de sécurité dès le début du développement logiciel. DevSecOps est extrêmement important de nos jours car, selon des enquêtes récentes, plus de 99 % des professionnels de la technologie signalent qu'en moyenne, les applications en production contiennent plus de quatre vulnérabilités.</p>""}, {'', ""<p>Une étude menée par le Ponemon Institute et Rezilion révèle que 78 % des personnes interrogées mettent plus de trois semaines à remédier aux vulnérabilités à haut risque de leurs systèmes. De plus, 30 % d'entre elles déclarent que gérer efficacement ces vulnérabilités prend plus de cinq semaines.</p>""}, {'', '<p>Les vulnérabilités des applications sont devenues un vecteur privilégié d’attaques motivées par des motivations économiques et politiques. Mais d’où viennent ces vulnérabilités ? Tout d’abord, elles sont souvent liées aux pratiques de développement, comme l’utilisation de structures de programmation non sécurisées ou de composants tiers, souvent des frameworks et des bibliothèques open source. Les développeurs peuvent également insérer des raccourcis pour accélérer le processus de développement. Ensuite, les contraintes de temps peuvent conduire à des révisions de code superficielles qui se concentrent davantage sur les fonctionnalités que sur une analyse de qualité approfondie et incluant la sécurité. Enfin, l’utilisation généralisée de logiciels obsolètes (legacy), connus pour leurs vulnérabilités et souvent difficiles voire impossibles à mettre à jour, contribue à ce problème.</p>'}, {'<h3>Principales étapes du développement de logiciels sécurisés</h3>', ''}, {'', '<p>L’utilisation de DevSecOps permet de garantir le niveau de sécurité adéquat tout au long de la phase de développement et de toute la durée de vie du logiciel. Cette méthode se concentre également sur l’identification et la gestion des risques. La mise en œuvre de processus de développement sûrs permet généralement de réduire de 80 % les vulnérabilités. Explorons les étapes les plus importantes de ce processus, illustrées par l’approche du cycle de vie du développement de la sécurité (SDL), largement adoptée par de nombreuses grandes entreprises à l’échelle mondiale.</p>'}, {'', ""<p>• FormationToutes les personnes impliquées dans le développement de logiciels, y compris tous les employés, sous-traitants et autres personnels concernés, reçoivent une formation sur les bases de la cybersécurité et suivent régulièrement des cours sur les pratiques de développement sécurisées.• ExigencesLe développement de chaque produit logiciel commence par une définition claire de ses exigences en matière de sécurité et de confidentialité. Ces exigences sont façonnées par des facteurs tels que le type de données que le produit traitera, les menaces de sécurité connues, les meilleures pratiques établies, les normes réglementaires et industrielles et les leçons tirées des incidents passés. Le développement de logiciels étant un processus continu, les exigences de sécurité et de confidentialité évoluent tout au long du cycle de vie du produit, s'adaptant aux changements de fonctionnalité et à l'évolution constante du paysage des menaces.• ConceptionÀ ce stade, des modèles de menaces sont développés pour aider à identifier et à catégoriser les menaces en fonction des risques existants et potentiels. Ce processus commence par décrire les différents composants d'un produit et la manière dont ils interagissent dans différents scénarios fonctionnels, tels que l'authentification. Les diagrammes de flux de données représentent visuellement les interactions des flux de données, des types de données, des protocoles, etc. Il est important de maintenir les modèles de menace à jour tout au long du cycle de vie du produit, en les adaptant à mesure que le logiciel évolue. • Mise en œuvre La mise en œuvre commence par le codage des développeurs selon le plan établi dans les phases précédentes. Il est bon de doter les développeurs d'outils de développement sécurisés pour intégrer toutes les exigences de confidentialité, de sécurité et de fonctionnalité dans leur logiciel. Ces outils peuvent inclure des environnements de développement sécurisés, des compilateurs et des contrôles de sécurité intégrés. • Vérification Avant que le code ne soit publié, il subit des contrôles et des approbations approfondis. Les révisions manuelles sont effectuées par des personnes distinctes des développeurs de code, garantissant une séparation vitale des tâches pour empêcher une seule personne d'écrire et de publier du code. L'étape comprend également une série de vérifications automatisées dans le pipeline de validation, couvrant des aspects tels que l'analyse de code statique et dynamique, l'analyse binaire, l'analyse des informations d'identification et des secrets, l'analyse du chiffrement, les tests de fuzz, la validation de la configuration et la conformité des logiciels open source. • Publication Avant de lancer le logiciel dans les produits, un examen approfondi est effectué pour vérifier si les fonctionnalités de sécurité implémentées sont conformes aux spécifications initiales définies pendant la phase de conception. En outre, un plan d'urgence est élaboré pour faire face aux éventuelles failles de sécurité du système. Plutôt que de déployer les builds pour tous les utilisateurs simultanément, elles sont déployées progressivement vers des groupes de plus en plus importants. • RéponseAprès leur publication, tous les logiciels et services font l'objet d'une journalisation et d'une surveillance complètes pour identifier les problèmes de sécurité potentiels.</p>""}, {'', '<h3>Principaux outils DevSecOps</h3>'}, {'', '<p>Explorons les outils essentiels pour DevSecOps, intégrant les principes de sécurité à chaque étape du processus de développement logiciel.</p>'}, {'', ""<p>• Tests de sécurité des applications statiques (SAST) L'analyse statique est effectuée dans un environnement « boîte blanche », ce qui permet de détecter les vulnérabilités sans avoir à exécuter le code réel. Cette approche est particulièrement efficace dans les premières phases de développement, car elle examine directement le code source, offrant ainsi la possibilité d'intégrer l'analyseur dans le pipeline de développement pour une analyse incrémentielle. Cependant, elle présente des inconvénients, comme un taux élevé de faux positifs.</p>""}, {'', '<p>L’implémentation d’un analyseur de code statique s’inscrit parfaitement dans le concept de décalage vers la gauche, qui met l’accent sur l’introduction de contrôles le plus tôt possible dans le cycle de développement du produit plutôt qu’à la fin. Cette intégration précoce a un impact significatif sur le coût de correction des défauts détectés. Par exemple, alors que la correction des vulnérabilités identifiées pendant la phase de développement peut coûter X dollars, la résolution de ces problèmes au stade de la publication du projet peut s’élever à 10 X dollars, et leur correction une fois le système pleinement opérationnel peut grimper jusqu’à 100 X dollars.</p>'}, {'', ""<p>• Tests dynamiques de sécurité des applications (DAST)L'analyse dynamique du code fonctionne dans un scénario de « boîte noire », où l'outil n'a pas accès au code source et effectue des tests pendant que le programme est en cours d'exécution. DAST peut imiter des attaques externes en utilisant des méthodes courantes pour trouver des vulnérabilités dans l'application. Les outils DAST ne sont pas limités par les langages de programmation et génèrent généralement moins de faux positifs. Cependant, leurs inconvénients incluent le risque de négliger les vulnérabilités et de manquer certaines fonctionnalités car DAST ne couvre pas entièrement le code analysé.</p>""}, {'', ""<p>• Tests de sécurité des applications interactifs (IAST) L'IAST combine des éléments de SAST et de DAST pour offrir une méthode plus intégrée et interactive de détection des vulnérabilités.</p>""}, {'', '<p>L’IAST et la DAST analysent les applications en direct pour trouver des vulnérabilités. La DAST teste les interfaces de l’application comme un attaquant (d’un point de vue externe), en identifiant les vulnérabilités grâce à l’analyse des réponses. Cependant, l’IAST opère également de l’intérieur, en combinant les informations provenant du code interne de l’application et des flux de données avec les observations de son comportement dynamique pendant l’exécution. Cette position unique permet à l’IAST de découvrir un plus large éventail de problèmes, en fusionnant la profondeur de l’analyse de code (similaire à SAST) avec l’examen pratique des applications en cours d’exécution (similaire à DAST). Par conséquent, l’IAST atteint une plus grande précision et moins de faux positifs, en identifiant les vulnérabilités qui n’apparaissent que dans le contexte opérationnel de l’application.</p>'}, {'', ""<p>• Analyse de la composition logicielle (SCA) La SCA examine les composants et bibliothèques open source d'un projet logiciel. Elle identifie les vulnérabilités connues, les problèmes de licence et les dépendances obsolètes en examinant la base de code par rapport à des bases de données complètes de menaces de sécurité connues et de données de conformité. En intégrant la SCA dans le pipeline DevSecOps, les équipes s'assurent que le code propriétaire et open source respecte les normes de sécurité et les exigences de conformité.</p>""}, {'', '<h3>Autres outils et technologies</h3>'}, {'', ""<p>Les outils mentionnés ci-dessus constituent l'ensemble minimal requis pour garantir la publication d'applications sécurisées. Pour maximiser vos efforts de sécurité, il est également judicieux d'utiliser des technologies et des outils supplémentaires qui peuvent soutenir et améliorer le processus de développement sécurisé. En voici quelques-uns :</p>""}, {'', ""<p>• Analyse de l'infrastructure en tant que code (IaC)Avec l'essor du cloud computing et de l'infrastructure en tant que code, l'analyse de ces configurations pour détecter les problèmes de conformité et de sécurité devient essentielle pendant le développement.</p>""}, {'', '<p>• Analyse de la sécurité des conteneursAnalyse des images de conteneurs pour détecter les vulnérabilités et les problèmes de configuration.</p>'}, {'', ""<p>• Gestion des secretsIl est essentiel de garantir que les secrets, tels que les mots de passe, les jetons et les clés, sont gérés et accessibles en toute sécurité pour protéger l'accès aux applications, aux bases de données et aux services pendant le développement.</p>""}, {'', ""<p>• Gestion des accès et des identités (IAM)Bien qu'elle ne soit pas exclusive à la phase de développement, la mise en place de contrôles IAM appropriés garantit que seules les personnes autorisées peuvent accéder aux environnements et aux ressources de développement. Elle peut être complétée par des solutions de gestion des accès privilégiés (PAM).</p>""}, {'', ""<p>Il existe de nombreuses autres stratégies pour garantir la publication d'applications sécurisées. Par exemple, l'utilisation d'un pare-feu d'application Web (WAF) permet de protéger les applications Web en filtrant et en surveillant le trafic entre l'application Web et Internet.</p>""}, {'', ""<p>Les outils de détection et de réponse réseau (NDR) peuvent détecter et répondre aux menaces réseau, tandis que les réseaux privés virtuels (VPN) créent des connexions Internet sécurisées. Il est impossible d'énumérer toutes les options dans ce bref article. Le choix des mesures de sécurité appropriées dépend des ressources dont vous disposez, notamment du budget, de l'expertise et des capacités techniques.</p>""}, {'', ""<h3>Intégration d'outils et optimisation du flux de travail</h3>""}, {'', ""<p>L'un des principaux objectifs de DevSecOps est de faire de la sécurité une partie intégrante du processus de développement, en veillant à ce que les mesures de sécurité ne gênent pas mais améliorent l'efficacité du développement. Voici quelques conseils d'experts pour y parvenir\xa0:</p>""}, {'', '<p>• Culture et formationDevSecOps est autant une question de transformation culturelle que d’outils et de processus. Avant de vous lancer dans les intégrations techniques, assurez-vous que l’état d’esprit de votre équipe est conforme aux principes DevSecOps. Sous-estimer les aspects culturels, tels que la résistance au changement, la peur d’une charge de travail accrue ou une mauvaise compréhension de la valeur de la sécurité, peut freiner l’adoption. Vous pouvez relever ces défis en mettant en avant les avantages de DevSecOps, en célébrant les réussites et en promouvant une culture d’apprentissage et d’amélioration continue.</p>'}, {'', ""<p>Les développeurs doivent être familiarisés avec les nuances des outils de sécurité utilisés et savoir interpréter leurs résultats. Des formations et des ressources régulières doivent être fournies aux développeurs pour leur permettre d'acquérir les connaissances nécessaires pour résoudre les problèmes de sécurité, favorisant ainsi une culture de sécurité proactive.</p>""}, {'', ""<p>DevSecOps repose sur la suppression des cloisonnements entre les équipes de développement, d'exploitation et de sécurité. Encouragez les réunions régulières, les projets communs et les objectifs partagés pour créer des équipes soudées axées sur des pratiques de développement sécurisées.</p>""}, {'', ""<p>• Outils utilisésChoisissez des outils de sécurité qui correspondent à vos besoins et s'intègrent parfaitement à l'infrastructure de développement et d'exploitation existante. Privilégiez ceux qui offrent des API robustes, une prise en charge CLI et une compatibilité avec votre pipeline CI/CD, car ces fonctionnalités sont cruciales pour une intégration transparente.</p>""}, {'', '<p>Bien que la gamme d’outils de sécurité disponibles soit vaste, évitez de les déployer simultanément. Cette approche peut entraîner un nombre écrasant d’alertes et de nombreux faux positifs, encombrant ainsi votre flux de travail. Commencez plutôt par une sélection stratégique d’outils à fort impact et ajustez les paramètres pour minimiser le bruit inutile.</p>'}, {'', ""<p>Donnez la priorité à l'automatisation dans votre stratégie de sécurité : automatisez l'exécution des analyses de sécurité, telles que SAST, DAST et IAST, au sein de votre pipeline CI/CD. Cette automatisation garantit des contrôles de sécurité cohérents à chaque étape de développement et de déploiement du code, réduisant considérablement les interventions manuelles et accélérant le cycle de développement.</p>""}, {'', '<h3>Amélioration continue de DevSecOps</h3>'}, {'', ""<p>DevSecOps est un parcours, pas une destination. Examinez régulièrement l'efficacité de vos intégrations d'outils et de vos flux de travail. Recueillez les commentaires de toutes les parties prenantes et définissez des indicateurs pour mesurer l'efficacité de vos pratiques DevSecOps, telles que le nombre de vulnérabilités identifiées et corrigées, le temps nécessaire pour résoudre les problèmes critiques et la fréquence des attaques zero-day et autres incidents de sécurité. Utilisez ces indicateurs pour démontrer la valeur de DevSecOps et soyez prêt à ajuster les outils, les processus et la formation pour les améliorer.</p>""}, {'', '<h3>Conclusion</h3>'}, {'', '<p>Les statistiques sont alarmantes : la plupart des applications présentent des vulnérabilités, et leur correction peut prendre des semaines, voire des mois, ce qui montre clairement que les méthodes traditionnelles sont inadéquates. Face à un paysage de menaces en constante évolution, la mise en œuvre des pratiques DevSecOps est essentielle, et pas seulement recommandée. Adopter le bon mélange d’outils, de pratiques et un état d’esprit de shift-left peut réduire considérablement les risques de vulnérabilité.</p>'}]"
Datadog étend la portée et la portée de sa plateforme d'observabilité,"[{'', ""<p>Lors de sa conférence DASH 2024, Datadog a ajouté une multitude d'outils et de fonctionnalités pour rationaliser les flux de travail DevSecOps, notamment l'intégration avec le logiciel d'agent open source OpenTelemetry développé sous les auspices de la Cloud Native Computing Foundation (CNCF) et l'outil Datadog On-Call pour optimiser les flux de travail de gestion des incidents de manière à maintenir le contexte avec les données d'observabilité déjà collectées.</p>""}, {'', ""<p>De plus, la prise en charge de l'analyse sans agent ainsi que des outils de découverte des vulnérabilités et des données sensibles ont été ajoutés, ainsi qu'un outil de collaboration Log Workspaces qui permet aux analystes et aux ingénieurs d'utiliser des interfaces en langage naturel pour invoquer un agent d'intelligence artificielle (IA) générative afin d'associer plus facilement les journaux et d'autres ensembles de données à des applications spécifiques, et un outil Live Debugger qui permet aux développeurs d'utiliser des données de production en direct pour mieux dépanner les applications.</p>""}, {'', ""<p>Enfin, la société a ajouté une fonctionnalité de mise à l'échelle automatique Kubernetes pour fournir aux équipes informatiques davantage de contrôle sur la manière dont les applications cloud natives évoluent dynamiquement.</p>""}, {'', ""<p>Hugo Kaczmarek, directeur produit chez Datadog, a déclaré qu'à mesure que l'observabilité continue d'évoluer, il deviendra plus facile pour les équipes informatiques de trianguler la cause profonde des problèmes jusqu'à des lignes de code spécifiques. Il ne sera peut-être jamais possible d'éviter toutes les erreurs, mais le temps nécessaire à leur correction continuera de diminuer rapidement à mesure que de nouvelles avancées en matière d'intelligence artificielle (IA) seront réalisées, par exemple en utilisant des outils de visualisation pour rejouer le flux d'exécution du code. Les équipes informatiques pourront également exploiter l'IA générative pour reproduire les problèmes à l'aide des données de production.</p>""}, {'', '<p>Dans l’ensemble, Datadog continue d’étendre la portée de sa plateforme d’observabilité d’une manière qui promet de permettre aux organisations de réduire le nombre d’outils qu’elles devraient autrement acquérir, gérer et intégrer. Dans le même temps, les intégrations avec des outils open source tels qu’OpenTelemetry rendront simultanément moins coûteuse l’instrumentation des environnements informatiques. Datadog simplifie également la gestion centralisée de toutes les instances d’OpenTelemetry qui pourraient être déployées à terme.</p>'}, {'', '<p>Les extensions de la plateforme Datadog, principalement disponibles en version bêta, sont réalisées à un moment où de nombreuses organisations commencent à adopter l’ingénierie de plateforme comme méthodologie de gestion des flux de travail DevOps à grande échelle. Le défi auquel nombre d’entre elles seront confrontées dans un premier temps consistera à déterminer exactement combien de plateformes seront nécessaires pour unifier la gestion de ces flux de travail.</p>'}, {'', '<p>Il est trop tôt pour dire comment l’ingénierie de la plateforme va évoluer, mais avec l’essor des outils d’IA pour générer du code, l’observabilité va devenir de plus en plus une exigence. Le problème est que de nombreuses équipes DevOps ne savent pas toujours quelles requêtes lancer pour faire apparaître les problèmes. Cependant, avec l’aide des agents d’IA, la plateforme elle-même suggérera non seulement des requêtes, mais les exécutera également automatiquement selon les besoins. L’objectif est d’augmenter les équipes d’ingénierie DevOps existantes pour leur permettre de gérer des applications à des niveaux d’échelle beaucoup plus élevés sans nécessairement augmenter les effectifs.</p>'}, {'', '<p>En attendant, il est évident que de nombreuses équipes DevOps ont déjà du mal à gérer les charges de travail déjà déployées. À cet égard, les outils d’IA qui promettent de réduire les efforts existants ne peuvent pas arriver trop tôt.</p>'}]"
Décrypter DevSecOps : trouver le juste équilibre,"[{'', '<p>Le DevSecOps, un concept qui promet à la fois rapidité et sécurité dans le développement de logiciels, a captivé les entreprises du monde entier. L’idée d’intégrer de manière transparente la sécurité dans le pipeline DevOps semblait être une révolution, mais les entreprises ont rapidement constaté que les « meilleures » pratiques de leur DevSecOps se retournaient contre elles. Au lieu de rationaliser les processus, les entreprises se retrouvent ensevelies sous des montagnes de vulnérabilités signalées et entravées par des barrières qui entravent les progrès là où elles étaient censées faciliter. Le DevSecOps est prometteur et comporte des pièges, et nous devons trouver une voie à suivre pour parvenir à un équilibre entre rapidité et sécurité.</p>'}, {'', ""<h3>Qu'est-ce que DevSecOps ?</h3>""}, {'', ""<p>DevSecOps (abréviation de développement, sécurité et opérations) est une approche qui allie l'agilité de DevOps à la robustesse de la sécurité. En théorie, DevSecOps permet aux organisations de développer et de publier rapidement des logiciels tout en se protégeant contre les vulnérabilités et les menaces.</p>""}, {'', '<p>En intégrant la sécurité dans le pipeline DevOps, les entreprises ont pu identifier et corriger les vulnérabilités dès le début du cycle de développement et réduire le risque de failles de sécurité. DevSecOps a été salué comme la solution au dilemme séculaire du choix entre rapidité et sécurité dans le développement de logiciels. Cependant, lorsque les entreprises se sont lancées dans leur aventure DevSecOps, elles ont été confrontées à plusieurs défis inattendus.</p>'}, {'', '<h3>Le dilemme DevSecOps</h3>'}, {'', '<p>En théorie, des pratiques de sécurité renforcées devraient entraîner moins de vulnérabilités, mais ce n’est pas le cas. L’analyse du code à la recherche de failles de sécurité génère un nombre impressionnant de résultats. Chaque validation déclenche une avalanche de rapports, chacun mettant en évidence des vulnérabilités potentielles ou des faiblesses de sécurité. Il s’agit d’un processus intenable. Selon l’enquête Synopsis DevSecOps d’août 2023, 53 % des personnes interrogées ont déclaré que leurs organisations testaient la sécurité de leurs applications critiques au moins une fois par semaine, et 31 % au moins une fois par jour. Les résultats s’accumulant régulièrement, les correctifs critiques peuvent prendre des semaines, voire des mois. Les organisations sont de plus en plus conscientes, mais sont-elles plus sûres ?</p>'}, {'', '<p>Alors que les organisations sont aux prises avec ce dilemme, elles subissent les conséquences imprévues suivantes :</p>'}, {'', ""<p>● Retards de développement : les portes de sécurité, conçues pour améliorer la sécurité, entraînent souvent des retards de développement. Les développeurs ont été obligés de traiter toutes les vulnérabilités signalées avant que le code ne puisse progresser, ce qui a entraîné des goulots d'étranglement qui ont ralenti les versions. ● Fatigue des alertes : les équipes de développement ont été submergées par le volume considérable d'alertes de sécurité. Le tri d'innombrables rapports pour identifier les vulnérabilités critiques est devenu chronophage et intimidant. ● Concentration déplacée : l'accent est passé du développement et de la publication de logiciels de qualité à la gestion et au traitement des alertes de sécurité. Les équipes de développement se sont retrouvées à consacrer plus de temps à la correction qu'à l'innovation. ● Collaboration diminuée : au lieu de favoriser la collaboration entre les équipes de développement, de sécurité et d'exploitation, le paradoxe DevSecOps a parfois conduit à des frictions et à des frustrations. Les équipes de sécurité, dans leur quête de rigueur, ont involontairement entravé la progression du développement.</p>""}, {'', ""<p>Sans surprise, la plupart des organisations pratiquant DevSecOps et confrontées à ces conséquences ont supprimé les barrières de sécurité qui ralentissaient le développement. Nombre d'entre elles continuent d'effectuer des analyses dans le cadre du pipeline, mais l'analyse à elle seule ne vous rend pas plus sûr.</p>""}, {'', '<h3>La voie à suivre</h3>'}, {'', '<p>Pour exploiter le véritable potentiel de DevSecOps, les organisations doivent employer les stratégies suivantes\xa0:</p>'}, {'', ""<p>● Encouragez une culture DevSecOps : cultivez une culture DevSecOps qui privilégie la collaboration, la formation et la responsabilité partagée en matière de sécurité. Encouragez un état d'esprit proactif et intégrez la sécurité dès les premières étapes du processus de développement.● Adoptez l'analyse contextuelle : développez des processus qui tiennent compte du contexte des vulnérabilités. Établissez un cadre pour hiérarchiser et traiter les vulnérabilités en fonction de leur niveau de risque.● Déployez l'amélioration continue : considérez la sécurité comme un processus continu d'amélioration. Abordez-la avec un état d'esprit de type ramper, marcher et courir, et évaluez et affinez régulièrement les pratiques DevSecOps pour vous adapter à l'évolution des menaces et des technologies.● Adoptez l'automatisation : mettez en œuvre des solutions de sécurité testées sur le terrain et pilotées par l'IA, capables d'analyser et de corriger les vulnérabilités. Cette approche réduit la fatigue des alertes et garantit que les équipes de développement se concentrent sur les problèmes les plus critiques tout en corrigeant les vulnérabilités moyennes à faibles récurrentes. Selon le rapport 2023 Risks & Rewards of Generative AI in Software Development de Sonatype, davantage de responsables SecOps ont déclaré avoir réalisé des économies de temps significatives grâce à l'IA générative (57 % économisent au moins six heures par semaine contre 47 % pour DevOps). Ces gains de productivité démontrent le potentiel de l'IA dans DevSecOps.</p>""}, {'', '<p>Le paradoxe DevSecOps nous rappelle que parvenir à une harmonie entre rapidité et sécurité dans le développement logiciel est un parcours complexe. Cependant, en combinant automatisation, transformation culturelle et approches proactives, les organisations peuvent surmonter ce paradoxe et exploiter tout le potentiel de DevSecOps pour obtenir un mélange synergique de rapidité et de sécurité tout au long du cycle de vie du développement logiciel.</p>'}]"
Du concept à la réalité : comment ASPM donne vie à DevSecOps,"[{'', '<p>Dans le paysage actuel de la distribution de logiciels en constante évolution, l’intégration de la sécurité du code à la production est devenue un défi crucial. Le mouvement DevSecOps, qui vise à combiner harmonieusement développement, sécurité et opérations, a été à l’avant-garde de cette évolution. Pourtant, malgré son potentiel de transformation, l’application pratique des principes DevSecOps semble souvent large et abstraite, créant un fossé entre les idéaux théoriques et la pratique concrète. Ici, la gestion de la posture de sécurité des applications (ASPM) joue un rôle essentiel en fournissant un cadre concret conçu pour améliorer efficacement la collaboration entre les équipes de développement et de sécurité au cours du cycle de vie de la distribution de logiciels.</p>'}, {'', ""<h3>L'impact transformateur de l'ASPM</h3>""}, {'', '<p>S’appuyant sur les bases posées par DevSecOps, ASPM représente un bond en avant dans la mise en œuvre de ces principes au sein du processus d’intégration continue/déploiement continu (CI/CD). Il modernise les pratiques de sécurité en les intégrant directement dans la structure de la livraison de logiciels, garantissant que la détection et la correction des vulnérabilités sont proactives et intégrées à chaque étape. Ce changement consolide le cadre de sécurité et allège considérablement la charge des développeurs, permettant ainsi de concentrer les efforts sur l’innovation et la création efficace de logiciels.</p>'}, {'', '<p>L’intégration des contrôles de sécurité dans le flux de travail CI/CD d’ASPM institutionnalise la sécurité comme partie intégrante de chaque étape, favorisant ainsi une responsabilité partagée entre les équipes. Cette intégration favorise une culture de sécurité proactive qui se fond naturellement dans les tâches quotidiennes.</p>'}, {'', ""<p>Le résultat est double : un système de distribution renforcé et rationalisé qui améliore la sécurité des logiciels déployés et affine le processus de développement. Cela représente une évolution significative des pratiques CI/CD, harmonisant la livraison rapide de logiciels avec les mesures de sécurité essentielles et réduisant l'écart entre les aspirations DevSecOps et leur mise en œuvre dans le monde réel.</p>""}, {'', '<h3>Comprendre ASPM : renforcer la sécurité tout au long du cycle de vie de la distribution de logiciels</h3>'}, {'', '<p>Gartner définit ASPM comme une stratégie globale visant à renforcer la sécurité des applications tout au long de leur cycle de vie, du développement au déploiement et à la maintenance continue. Cette approche est essentielle pour les entreprises d’aujourd’hui, car elle offre une perspective panoramique sur l’état de sécurité des applications. Elle intègre la gestion des vulnérabilités, garantit la conformité et facilite les évaluations approfondies des risques. En adoptant ASPM, les entreprises peuvent acquérir une compréhension globale de la sécurité de leurs applications, ce qui est essentiel pour instaurer la confiance et garantir la fiabilité des produits logiciels dans un environnement où les menaces de sécurité évoluent constamment.</p>'}, {'', ""<p>Figure 1\xa0: Intégration d'ASPM dans le processus de livraison de logiciels</p>""}, {''}, {'', ""<h3>Principales caractéristiques de l'ASPM</h3>""}, {'', ""<p>Évaluation continueLes outils ASPM intégrés à l'architecture CI/CD surveillent et évaluent en permanence la posture de sécurité à chaque étape du cycle de développement, comme illustré dans la couche « Évaluation continue de la posture de sécurité ». Cela garantit l'identification des vulnérabilités du niveau du code source aux dépendances tout au long des processus de construction et à travers les étapes de déploiement, jusqu'à la phase d'exploitation. L'architecture ASPM prend en charge la détection et la réponse en temps réel, en s'alignant sur la base de données SDLC (SDLC-DB) pour un suivi et un enregistrement permanents des problèmes de sécurité.</p>""}, {'', ""<p>Visibilité de bout en boutL'architecture met l'accent sur la visibilité du cycle de vie « du développeur au déploiement », ce qui correspond à la caractéristique clé de la visibilité de bout en bout. Le cadre ASPM garantit que les informations sur la sécurité ne sont pas limitées à des équipes cloisonnées, mais sont partagées entre les équipes de développement, d'exploitation et de sécurité. Cette transparence est maintenue par le biais de couches telles que la gestion des politiques de sécurité et l'automatisation de la conformité, fournissant aux parties prenantes les informations nécessaires pour prendre des décisions de sécurité éclairées à chaque étape.</p>""}, {'', ""<p>Alignement Open CDL'architecture souligne le principe Open CD, soulignant l'exigence d'adaptabilité d'ASPM dans tout environnement CI/CD. Elle doit être conçue pour s'adapter aux divers outils et processus choisis par les équipes de développement, affirmant que les solutions ASPM ne sont pas de simples compléments mais des composants à part entière des flux de travail existants. Cela est démontré par des points d'intégration flexibles qui s'adaptent à divers outils à toutes les étapes du pipeline, du développement à l'exploitation, garantissant qu'ASPM peut pivoter à mesure que les exigences commerciales et les préférences en matière d'outils évoluent. Chaque point de connexion au sein de l'architecture symbolise l'engagement d'ASPM en matière de polyvalence, permettant aux équipes de développement la liberté de sélectionner et d'interchanger les outils qui correspondent le mieux à leurs objectifs sans compromettre la gestion de la posture de sécurité.</p>""}, {'', ""<p>Intégration CI/CDLa couche Intégrations DevOps montre l'intégration des outils ASPM dans les pipelines CI/CD. Cette couche garantit que la sécurité fait partie intégrante du processus, où les phases de création, de déploiement et d'exploitation sont équipées d'outils de sécurité qui fonctionnent de concert avec les processus CI/CD. Cela permet le déploiement sécurisé du code, avec des outils ASPM facilitant l'application automatisée des politiques, comme le montre le composant « Application des politiques en temps réel », garantissant que les déploiements sont sécurisés par conception et par défaut.</p>""}, {'', ""<p>En intégrant ces fonctionnalités clés dans l'architecture ASPM, les organisations peuvent créer un écosystème de distribution de logiciels dynamique, réactif et sécurisé. L'architecture fournit un modèle pour une posture de sécurité proactive, transparente et pouvant être intégrée de manière transparente dans les opérations quotidiennes de distribution de logiciels.</p>""}, {'', ""<h3>Mise en œuvre de l'ASPM : conseils pratiques</h3>""}, {'', '<p>Pour mettre en œuvre efficacement l’ASPM et en tirer une valeur maximale, les organisations doivent adopter les stratégies raffinées suivantes, en intégrant les enseignements tirés de la transcription vidéo\xa0:</p>'}, {'', '<p>Commencez par évaluer les outils ASPM qui correspondent à vos besoins de développement et de sécurité et qui offrent des capacités d’intégration étendues avec les outils de sécurité existants et largement utilisés. Cette approche holistique garantit que votre solution ASPM fonctionne en tandem avec des outils tels que Snyk et Black Duck pour générer une posture de sécurité des applications plus complète. Le processus de sélection doit donner la priorité aux outils qui facilitent une vue unifiée des vulnérabilités de sécurité et des problèmes de conformité sur l’ensemble de votre pile logicielle, des microservices individuels à l’application complète.</p>'}, {'', ""<p>L'intégration des outils ASPM dans les pipelines CI/CD existants doit être exécutée de manière à promouvoir la transparence opérationnelle et à minimiser les perturbations du flux de travail de développement. L'exploitation des principes d'Open CD peut être particulièrement bénéfique dans ce cas. Open CD met l'accent sur les outils et processus ouverts et interopérables qui améliorent la flexibilité et la visibilité du pipeline CI/CD. Cette approche garantit que les outils ASPM ne sont pas simplement ajoutés mais font partie intégrante de l'écosystème CI/CD, contribuant à un processus de livraison de logiciels plus sécurisé sans entraver la vitesse ou l'efficacité des déploiements.</p>""}, {'', ""<p>Encouragez une culture de sensibilisation et de responsabilité en matière de sécuritéAu-delà de la simple fourniture de formations et de ressources, impliquez activement les développeurs dans les processus de prise de décision en matière de sécurité. Encouragez un changement de perspective où la sécurité devient une responsabilité partagée et où les développeurs disposent d'une visibilité sur la posture de sécurité de leurs projets. Utilisez des outils ASPM qui fournissent des informations exploitables et des alertes précoces directement aux développeurs, leur permettant de résoudre les problèmes de sécurité potentiels en temps réel. Cette implication proactive non seulement cultive une culture de sécurité plus forte, mais garantit également que les pratiques de sécurité évoluent au rythme des innovations en matière de développement.</p>""}, {'', '<p>Adopter une boucle de rétroaction continue pour l’ajustement de la stratégie ASPMLa mise en œuvre d’ASPM n’est pas une tâche ponctuelle, mais un parcours continu qui nécessite une évaluation et une adaptation régulières. Établissez des mécanismes de rétroaction continue de la part de toutes les parties prenantes impliquées dans le cycle de vie du développement logiciel, y compris les équipes de sécurité, les développeurs et le personnel d’exploitation. Utilisez ces commentaires, ainsi que les données sur les menaces de sécurité émergentes et les exigences de conformité en constante évolution, pour ajuster de manière dynamique vos stratégies ASPM. Cette approche d’amélioration continue garantit que la posture de sécurité de votre organisation reste solide dans les environnements de sécurité et les pratiques de développement en évolution rapide.</p>'}, {'', '<h3>Conclusion</h3>'}, {'', '<p>L’introduction d’ASPM dans le cadre DevSecOps représente une avancée significative dans la quête de pratiques de développement logiciel plus sécurisées. En fournissant une approche concrète et exploitable pour intégrer la sécurité dans le processus de développement, ASPM contribue à combler le fossé entre les équipes de développement et de sécurité, améliorant ainsi la collaboration et l’efficacité. Alors que le paysage du développement logiciel continue d’évoluer, ASPM joue un rôle essentiel pour garantir que la sécurité ne soit pas seulement une réflexion après coup mais un élément fondamental du cycle de vie du développement.</p>'}, {'', '<p>Alors que les ingénieurs DevOps et les SRE se tournent vers l’avenir, l’adoption d’ASPM doit être considérée comme un élément essentiel de leur stratégie de sécurité. Grâce à une évaluation continue, à la visibilité des développeurs et à une intégration transparente dans les pipelines CI/CD, ASPM offre un processus de développement logiciel plus sûr, plus efficace et plus fiable.</p>'}, {'', ""<p>Le développement de logiciels sécurisés est en cours et ASPM représente le prochain chapitre de cette évolution. Adopter ASPM dès aujourd'hui améliorera non seulement votre posture de sécurité, mais positionnera également votre organisation sur la voie du succès dans le monde numérique de plus en plus complexe de demain.</p>""}]"
Une enquête révèle l'ampleur de la crise de sécurité des applications Web,"[{'', ""<p>Une enquête menée auprès de 349 professionnels de la cybersécurité aux États-Unis et au Royaume-Uni révèle que si 60 % d'entre eux travaillent pour des organisations qui mettent à jour leurs applications Web au moins une fois par semaine, près des trois quarts (75 %) testent leurs applications Web une fois par mois ou moins souvent.</p>""}, {'', ""<p>Menée par CyCognito, un fournisseur de solutions de détection de sécurité des applications Web, l'enquête a révélé que le nombre d'applications Web dans leur environnement était trop important pour permettre des tests adéquats, près de 75 % d'entre elles laissant plus de 40 % de la surface d'attaque non testée.</p>""}, {'', ""<p>Plus d'un tiers (35 %) des personnes interrogées ont déclaré que leur organisation était confrontée à un événement de sécurité majeur impliquant une application Web au moins une fois par semaine. Plus d'un quart (26 %) ont déclaré qu'elles étaient confrontées à un incident majeur impliquant une application Web une fois par semaine.</p>""}, {'', '<p>En outre, plus de la moitié des répondants (53 %) ont indiqué avoir des difficultés à corriger les vulnérabilités découvertes par les tests d’applications Web. Plus de la moitié (54 %) des répondants ont du mal à corriger les vulnérabilités révélées par leurs tests de sécurité d’applications Web. Près d’un tiers (28 %) sont tout à fait d’accord pour dire qu’ils ne sont pas en mesure d’exploiter facilement les résultats des tests de vulnérabilité.</p>'}, {'', ""<p>L'enquête identifie les principaux obstacles à des tests d'applications Web adéquats, notamment le volume d'API dans les environnements de production (67 %) et le temps nécessaire pour tester et surveiller les modifications (66 %).</p>""}, {'', '<p>Du côté positif, près des deux tiers (65 %) ont déclaré qu’ils prévoyaient d’accroître l’automatisation de leurs flux de travail de test de sécurité des applications Web.</p>'}, {'', ""<p>Selon Rob Gurzeev, PDG de CyCognito, le manque de tests sur l'ensemble du portefeuille d'applications Web est essentiellement une question de chiffres. Les entreprises ont plus d'applications en cours de développement et de déploiement qu'elles ne peuvent raisonnablement espérer tester, à moins qu'elles n'investissent davantage dans l'automatisation, a-t-il ajouté.</p>""}, {'', '<h3>Aucun processus formel pour tester les applications Web de production</h3>'}, {'', '<p>Plus difficile encore, dans de nombreuses organisations, il n’est pas toujours évident de savoir à qui incombe la responsabilité de garantir la sécurité des applications Web, a noté Gurzeev. Plus d’un quart des participants à l’enquête (26 %) travaillent pour des organisations qui ne disposent d’aucun processus formel de test des applications Web de production. Près d’un quart (24 %) ont indiqué que leur organisation ne disposait pas d’un processus formel de transfert lorsque les applications Web étaient livrées en production et que les équipes de sécurité devenaient responsables de leur test, de leur surveillance et de leur protection. Un pourcentage encore plus élevé (27 %) a déclaré que les unités commerciales individuelles ne disposaient pas de processus permettant d’impliquer l’équipe de sécurité dans le déploiement des applications Web. Un nombre similaire (27 %) n’avait aucun processus pour tester la sécurité des applications Web une fois en production.</p>'}, {'', ""<p>Pour tous les types de tests, environ 60 à 70 % des organisations effectuent des tests tous les mois ou moins souvent. Environ 30 à 40 % de tous les tests sont effectués tous les trimestres ou moins souvent. Plus des trois quarts des répondants (77 %) s'attendent à ce que leur fournisseur de cloud effectue au moins quelques tests et correctifs de sécurité.</p>""}, {'', '<p>Il ne fait aucun doute qu’il existe de nombreuses possibilités d’amélioration des flux de travail DevSecOps dans la plupart des organisations. En fait, les gouvernements du monde entier commencent à mettre en place des réglementations qui obligeront les organisations qui déploient des logiciels à se montrer beaucoup plus responsables de la sécurité des applications.</p>'}, {'', '<p>Plus difficile encore, grâce aux progrès de l’intelligence artificielle, le nombre d’applications Web qui seront déployées dans les années à venir ne fera qu’augmenter de manière exponentielle. Si ce n’est pas déjà le cas, il est clair que la taille globale du portefeuille d’applications à sécuriser dépasse largement la capacité des organisations à les sécuriser et à les gérer efficacement.</p>'}]"
Digital.ai étend la portée et la portée de sa plateforme DevSecOps,"[{'', ""<p>Une version Erawan de la plateforme DevSecOps de Digtal.ai ajoute la possibilité d'automatiser la sécurité des applications ainsi que l'intégration avec Backstage, une plateforme de développement interne open source initialement développée par Spotify et qui est désormais développée sous les auspices de la Cloud Native Computing Foundation (CNCF).</p>""}, {'', '<p>De plus, Digital.ai renforce son intégration avec la plateforme cloud Microsoft Azure en simplifiant la validation et la gestion des graphiques Helm.</p>'}, {'', ""<p>Derek Holt, PDG de Digital.ai, a déclaré qu'à mesure que le rythme de développement des applications s'accélère, grâce à l'essor des outils d'intelligence artificielle générative (IA), les entreprises devront revoir leurs flux de travail DevSecOps. Plus précisément, elles auront besoin d'une plateforme dotée des capacités de gouvernance requises, pour garantir que seul le code soigneusement examiné et testé soit intégré dans un environnement de production, a déclaré M. Holt.</p>""}, {'', ""<p>L'entreprise travaille également à l'ajout d'outils d'IA génératifs à sa plateforme DevSecOps pour simplifier la gestion des bases de code qui sont sur le point de se développer rapidement, a-t-il noté. Digital.ai a posé les bases de cet effort via un lac de données Digital.ai Intelligence qui applique déjà des algorithmes d'apprentissage automatique prédictifs aux données collectées par Digital.ai et des partenaires tiers, a déclaré Holt.</p>""}, {'', ""<p>Au fil du temps, de nombreuses fonctionnalités d'outils individuels que les équipes DevSecOps devaient autrefois intégrer deviennent des fonctionnalités d'une plate-forme plus vaste pour permettre aux équipes DevSecOps de mieux adopter l'ingénierie de plate-forme comme méthodologie de gestion des flux de travail DevSecOps à grande échelle, a-t-il noté.</p>""}, {'', ""<p>Les options ne manquent pas en matière de plateformes DevSecOps, mais la capacité d'appliquer l'intelligence de l'ingénierie logicielle à des données normalisées collectées à partir d'environnements de développement d'applications de plus en plus hybrides s'avérera cruciale, a ajouté Holt.</p>""}, {''}, {'', '<h3>Meilleures pratiques DevOps</h3>'}, {'', '<p>Il n’est pas certain que les entreprises qui ont déjà investi dans une plateforme DevOps soient prêtes à changer de plateforme à l’ère du développement d’applications assisté par l’IA. Cependant, le nombre d’entreprises qui seront en mesure de créer et de déployer des applications personnalisées est sur le point d’augmenter considérablement. Bon nombre de ces entreprises devront à terme adopter un ensemble de bonnes pratiques DevSecOps à l’heure où les gouvernements du monde entier s’efforcent de responsabiliser davantage les entreprises qui créent et déploient des logiciels en matière de sécurité des applications.</p>'}, {'', '<p>En attendant, les équipes DevSecOps doivent partir du principe que la quantité de code circulant simultanément dans les pipelines va augmenter à mesure que les développeurs tireront parti de divers outils d’IA générative pour les aider à écrire. Le défi est que la première génération de ces outils a été formée à l’aide d’échantillons de code de qualité variable collectés sur Internet. En tant que tel, le code généré par ces outils peut avoir des vulnérabilités connues ou peut, dans certains cas, ne pas fonctionner du tout. Chaque équipe DevSecOps, comme toujours, devra vérifier que le code, qu’il ait été créé par un humain ou une machine, peut être utilisé dans un environnement de production.</p>'}, {'', '<p>Après tout, les avantages de la création rapide d’applications sont généralement annulés si l’expérience de l’utilisateur final se détériore au point que les équipes DevSecOps passent plus de temps à dépanner les applications existantes qu’à en déployer de nouvelles.</p>'}]"
